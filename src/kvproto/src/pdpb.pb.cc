// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pdpb.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "pdpb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pdpb {

namespace {

const ::google::protobuf::Descriptor* Leader_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Leader_reflection_ = NULL;
const ::google::protobuf::Descriptor* TsoRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TsoRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* Timestamp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Timestamp_reflection_ = NULL;
const ::google::protobuf::Descriptor* TsoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TsoResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* BootstrapRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BootstrapRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BootstrapResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BootstrapResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* IsBootstrappedRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IsBootstrappedRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* IsBootstrappedResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IsBootstrappedResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AllocIdRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AllocIdRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AllocIdResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AllocIdResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStoreRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStoreRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStoreResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStoreResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetRegionRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetRegionRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetRegionResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetRegionResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetRegionByIDRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetRegionByIDRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetClusterConfigRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetClusterConfigRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetClusterConfigResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetClusterConfigResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* PutStoreRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PutStoreRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PutStoreResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PutStoreResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* PDMember_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PDMember_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetPDMembersRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetPDMembersRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetPDMembersResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetPDMembersResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* PeerStats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PeerStats_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegionHeartbeatRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegionHeartbeatRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChangePeer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChangePeer_reflection_ = NULL;
const ::google::protobuf::Descriptor* TransferLeader_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransferLeader_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegionHeartbeatResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegionHeartbeatResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* PutClusterConfigRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PutClusterConfigRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PutClusterConfigResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PutClusterConfigResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AskSplitRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AskSplitRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AskSplitResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AskSplitResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* StoreStats_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StoreStats_reflection_ = NULL;
const ::google::protobuf::Descriptor* StoreHeartbeatRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StoreHeartbeatRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* StoreHeartbeatResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StoreHeartbeatResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReportSplitRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReportSplitRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReportSplitResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReportSplitResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* RequestHeader_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestHeader_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResponseHeader_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResponseHeader_reflection_ = NULL;
const ::google::protobuf::Descriptor* Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* BootstrappedError_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BootstrappedError_reflection_ = NULL;
const ::google::protobuf::Descriptor* StoreIsTombstoneError_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StoreIsTombstoneError_reflection_ = NULL;
const ::google::protobuf::Descriptor* Error_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Error_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CommandType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_pdpb_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_pdpb_2eproto() {
  protobuf_AddDesc_pdpb_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "pdpb.proto");
  GOOGLE_CHECK(file != NULL);
  Leader_descriptor_ = file->message_type(0);
  static const int Leader_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Leader, addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Leader, id_),
  };
  Leader_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Leader_descriptor_,
      Leader::internal_default_instance(),
      Leader_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Leader, _has_bits_),
      -1,
      -1,
      sizeof(Leader),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Leader, _internal_metadata_));
  TsoRequest_descriptor_ = file->message_type(1);
  static const int TsoRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TsoRequest, count_),
  };
  TsoRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TsoRequest_descriptor_,
      TsoRequest::internal_default_instance(),
      TsoRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TsoRequest, _has_bits_),
      -1,
      -1,
      sizeof(TsoRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TsoRequest, _internal_metadata_));
  Timestamp_descriptor_ = file->message_type(2);
  static const int Timestamp_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Timestamp, physical_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Timestamp, logical_),
  };
  Timestamp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Timestamp_descriptor_,
      Timestamp::internal_default_instance(),
      Timestamp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Timestamp, _has_bits_),
      -1,
      -1,
      sizeof(Timestamp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Timestamp, _internal_metadata_));
  TsoResponse_descriptor_ = file->message_type(3);
  static const int TsoResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TsoResponse, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TsoResponse, timestamp_),
  };
  TsoResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TsoResponse_descriptor_,
      TsoResponse::internal_default_instance(),
      TsoResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TsoResponse, _has_bits_),
      -1,
      -1,
      sizeof(TsoResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TsoResponse, _internal_metadata_));
  BootstrapRequest_descriptor_ = file->message_type(4);
  static const int BootstrapRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BootstrapRequest, store_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BootstrapRequest, region_),
  };
  BootstrapRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BootstrapRequest_descriptor_,
      BootstrapRequest::internal_default_instance(),
      BootstrapRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BootstrapRequest, _has_bits_),
      -1,
      -1,
      sizeof(BootstrapRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BootstrapRequest, _internal_metadata_));
  BootstrapResponse_descriptor_ = file->message_type(5);
  static const int BootstrapResponse_offsets_[1] = {
  };
  BootstrapResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BootstrapResponse_descriptor_,
      BootstrapResponse::internal_default_instance(),
      BootstrapResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BootstrapResponse, _has_bits_),
      -1,
      -1,
      sizeof(BootstrapResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BootstrapResponse, _internal_metadata_));
  IsBootstrappedRequest_descriptor_ = file->message_type(6);
  static const int IsBootstrappedRequest_offsets_[1] = {
  };
  IsBootstrappedRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IsBootstrappedRequest_descriptor_,
      IsBootstrappedRequest::internal_default_instance(),
      IsBootstrappedRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsBootstrappedRequest, _has_bits_),
      -1,
      -1,
      sizeof(IsBootstrappedRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsBootstrappedRequest, _internal_metadata_));
  IsBootstrappedResponse_descriptor_ = file->message_type(7);
  static const int IsBootstrappedResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsBootstrappedResponse, bootstrapped_),
  };
  IsBootstrappedResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IsBootstrappedResponse_descriptor_,
      IsBootstrappedResponse::internal_default_instance(),
      IsBootstrappedResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsBootstrappedResponse, _has_bits_),
      -1,
      -1,
      sizeof(IsBootstrappedResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IsBootstrappedResponse, _internal_metadata_));
  AllocIdRequest_descriptor_ = file->message_type(8);
  static const int AllocIdRequest_offsets_[1] = {
  };
  AllocIdRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AllocIdRequest_descriptor_,
      AllocIdRequest::internal_default_instance(),
      AllocIdRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocIdRequest, _has_bits_),
      -1,
      -1,
      sizeof(AllocIdRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocIdRequest, _internal_metadata_));
  AllocIdResponse_descriptor_ = file->message_type(9);
  static const int AllocIdResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocIdResponse, id_),
  };
  AllocIdResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AllocIdResponse_descriptor_,
      AllocIdResponse::internal_default_instance(),
      AllocIdResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocIdResponse, _has_bits_),
      -1,
      -1,
      sizeof(AllocIdResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllocIdResponse, _internal_metadata_));
  GetStoreRequest_descriptor_ = file->message_type(10);
  static const int GetStoreRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStoreRequest, store_id_),
  };
  GetStoreRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetStoreRequest_descriptor_,
      GetStoreRequest::internal_default_instance(),
      GetStoreRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStoreRequest, _has_bits_),
      -1,
      -1,
      sizeof(GetStoreRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStoreRequest, _internal_metadata_));
  GetStoreResponse_descriptor_ = file->message_type(11);
  static const int GetStoreResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStoreResponse, store_),
  };
  GetStoreResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetStoreResponse_descriptor_,
      GetStoreResponse::internal_default_instance(),
      GetStoreResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStoreResponse, _has_bits_),
      -1,
      -1,
      sizeof(GetStoreResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStoreResponse, _internal_metadata_));
  GetRegionRequest_descriptor_ = file->message_type(12);
  static const int GetRegionRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRegionRequest, region_key_),
  };
  GetRegionRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetRegionRequest_descriptor_,
      GetRegionRequest::internal_default_instance(),
      GetRegionRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRegionRequest, _has_bits_),
      -1,
      -1,
      sizeof(GetRegionRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRegionRequest, _internal_metadata_));
  GetRegionResponse_descriptor_ = file->message_type(13);
  static const int GetRegionResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRegionResponse, region_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRegionResponse, leader_),
  };
  GetRegionResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetRegionResponse_descriptor_,
      GetRegionResponse::internal_default_instance(),
      GetRegionResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRegionResponse, _has_bits_),
      -1,
      -1,
      sizeof(GetRegionResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRegionResponse, _internal_metadata_));
  GetRegionByIDRequest_descriptor_ = file->message_type(14);
  static const int GetRegionByIDRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRegionByIDRequest, region_id_),
  };
  GetRegionByIDRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetRegionByIDRequest_descriptor_,
      GetRegionByIDRequest::internal_default_instance(),
      GetRegionByIDRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRegionByIDRequest, _has_bits_),
      -1,
      -1,
      sizeof(GetRegionByIDRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRegionByIDRequest, _internal_metadata_));
  GetClusterConfigRequest_descriptor_ = file->message_type(15);
  static const int GetClusterConfigRequest_offsets_[1] = {
  };
  GetClusterConfigRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetClusterConfigRequest_descriptor_,
      GetClusterConfigRequest::internal_default_instance(),
      GetClusterConfigRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterConfigRequest, _has_bits_),
      -1,
      -1,
      sizeof(GetClusterConfigRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterConfigRequest, _internal_metadata_));
  GetClusterConfigResponse_descriptor_ = file->message_type(16);
  static const int GetClusterConfigResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterConfigResponse, cluster_),
  };
  GetClusterConfigResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetClusterConfigResponse_descriptor_,
      GetClusterConfigResponse::internal_default_instance(),
      GetClusterConfigResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterConfigResponse, _has_bits_),
      -1,
      -1,
      sizeof(GetClusterConfigResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetClusterConfigResponse, _internal_metadata_));
  PutStoreRequest_descriptor_ = file->message_type(17);
  static const int PutStoreRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutStoreRequest, store_),
  };
  PutStoreRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PutStoreRequest_descriptor_,
      PutStoreRequest::internal_default_instance(),
      PutStoreRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutStoreRequest, _has_bits_),
      -1,
      -1,
      sizeof(PutStoreRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutStoreRequest, _internal_metadata_));
  PutStoreResponse_descriptor_ = file->message_type(18);
  static const int PutStoreResponse_offsets_[1] = {
  };
  PutStoreResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PutStoreResponse_descriptor_,
      PutStoreResponse::internal_default_instance(),
      PutStoreResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutStoreResponse, _has_bits_),
      -1,
      -1,
      sizeof(PutStoreResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutStoreResponse, _internal_metadata_));
  PDMember_descriptor_ = file->message_type(19);
  static const int PDMember_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PDMember, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PDMember, client_urls_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PDMember, peer_urls_),
  };
  PDMember_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PDMember_descriptor_,
      PDMember::internal_default_instance(),
      PDMember_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PDMember, _has_bits_),
      -1,
      -1,
      sizeof(PDMember),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PDMember, _internal_metadata_));
  GetPDMembersRequest_descriptor_ = file->message_type(20);
  static const int GetPDMembersRequest_offsets_[1] = {
  };
  GetPDMembersRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetPDMembersRequest_descriptor_,
      GetPDMembersRequest::internal_default_instance(),
      GetPDMembersRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPDMembersRequest, _has_bits_),
      -1,
      -1,
      sizeof(GetPDMembersRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPDMembersRequest, _internal_metadata_));
  GetPDMembersResponse_descriptor_ = file->message_type(21);
  static const int GetPDMembersResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPDMembersResponse, members_),
  };
  GetPDMembersResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetPDMembersResponse_descriptor_,
      GetPDMembersResponse::internal_default_instance(),
      GetPDMembersResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPDMembersResponse, _has_bits_),
      -1,
      -1,
      sizeof(GetPDMembersResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPDMembersResponse, _internal_metadata_));
  PeerStats_descriptor_ = file->message_type(22);
  static const int PeerStats_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeerStats, peer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeerStats, down_seconds_),
  };
  PeerStats_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PeerStats_descriptor_,
      PeerStats::internal_default_instance(),
      PeerStats_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeerStats, _has_bits_),
      -1,
      -1,
      sizeof(PeerStats),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PeerStats, _internal_metadata_));
  RegionHeartbeatRequest_descriptor_ = file->message_type(23);
  static const int RegionHeartbeatRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionHeartbeatRequest, region_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionHeartbeatRequest, leader_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionHeartbeatRequest, down_peers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionHeartbeatRequest, pending_peers_),
  };
  RegionHeartbeatRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RegionHeartbeatRequest_descriptor_,
      RegionHeartbeatRequest::internal_default_instance(),
      RegionHeartbeatRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionHeartbeatRequest, _has_bits_),
      -1,
      -1,
      sizeof(RegionHeartbeatRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionHeartbeatRequest, _internal_metadata_));
  ChangePeer_descriptor_ = file->message_type(24);
  static const int ChangePeer_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangePeer, change_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangePeer, peer_),
  };
  ChangePeer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChangePeer_descriptor_,
      ChangePeer::internal_default_instance(),
      ChangePeer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangePeer, _has_bits_),
      -1,
      -1,
      sizeof(ChangePeer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangePeer, _internal_metadata_));
  TransferLeader_descriptor_ = file->message_type(25);
  static const int TransferLeader_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferLeader, peer_),
  };
  TransferLeader_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransferLeader_descriptor_,
      TransferLeader::internal_default_instance(),
      TransferLeader_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferLeader, _has_bits_),
      -1,
      -1,
      sizeof(TransferLeader),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferLeader, _internal_metadata_));
  RegionHeartbeatResponse_descriptor_ = file->message_type(26);
  static const int RegionHeartbeatResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionHeartbeatResponse, change_peer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionHeartbeatResponse, transfer_leader_),
  };
  RegionHeartbeatResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RegionHeartbeatResponse_descriptor_,
      RegionHeartbeatResponse::internal_default_instance(),
      RegionHeartbeatResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionHeartbeatResponse, _has_bits_),
      -1,
      -1,
      sizeof(RegionHeartbeatResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegionHeartbeatResponse, _internal_metadata_));
  PutClusterConfigRequest_descriptor_ = file->message_type(27);
  static const int PutClusterConfigRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutClusterConfigRequest, cluster_),
  };
  PutClusterConfigRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PutClusterConfigRequest_descriptor_,
      PutClusterConfigRequest::internal_default_instance(),
      PutClusterConfigRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutClusterConfigRequest, _has_bits_),
      -1,
      -1,
      sizeof(PutClusterConfigRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutClusterConfigRequest, _internal_metadata_));
  PutClusterConfigResponse_descriptor_ = file->message_type(28);
  static const int PutClusterConfigResponse_offsets_[1] = {
  };
  PutClusterConfigResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PutClusterConfigResponse_descriptor_,
      PutClusterConfigResponse::internal_default_instance(),
      PutClusterConfigResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutClusterConfigResponse, _has_bits_),
      -1,
      -1,
      sizeof(PutClusterConfigResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PutClusterConfigResponse, _internal_metadata_));
  AskSplitRequest_descriptor_ = file->message_type(29);
  static const int AskSplitRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskSplitRequest, region_),
  };
  AskSplitRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AskSplitRequest_descriptor_,
      AskSplitRequest::internal_default_instance(),
      AskSplitRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskSplitRequest, _has_bits_),
      -1,
      -1,
      sizeof(AskSplitRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskSplitRequest, _internal_metadata_));
  AskSplitResponse_descriptor_ = file->message_type(30);
  static const int AskSplitResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskSplitResponse, new_region_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskSplitResponse, new_peer_ids_),
  };
  AskSplitResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AskSplitResponse_descriptor_,
      AskSplitResponse::internal_default_instance(),
      AskSplitResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskSplitResponse, _has_bits_),
      -1,
      -1,
      sizeof(AskSplitResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AskSplitResponse, _internal_metadata_));
  StoreStats_descriptor_ = file->message_type(31);
  static const int StoreStats_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreStats, store_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreStats, capacity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreStats, available_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreStats, region_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreStats, sending_snap_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreStats, receiving_snap_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreStats, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreStats, applying_snap_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreStats, is_busy_),
  };
  StoreStats_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StoreStats_descriptor_,
      StoreStats::internal_default_instance(),
      StoreStats_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreStats, _has_bits_),
      -1,
      -1,
      sizeof(StoreStats),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreStats, _internal_metadata_));
  StoreHeartbeatRequest_descriptor_ = file->message_type(32);
  static const int StoreHeartbeatRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreHeartbeatRequest, stats_),
  };
  StoreHeartbeatRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StoreHeartbeatRequest_descriptor_,
      StoreHeartbeatRequest::internal_default_instance(),
      StoreHeartbeatRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreHeartbeatRequest, _has_bits_),
      -1,
      -1,
      sizeof(StoreHeartbeatRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreHeartbeatRequest, _internal_metadata_));
  StoreHeartbeatResponse_descriptor_ = file->message_type(33);
  static const int StoreHeartbeatResponse_offsets_[1] = {
  };
  StoreHeartbeatResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StoreHeartbeatResponse_descriptor_,
      StoreHeartbeatResponse::internal_default_instance(),
      StoreHeartbeatResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreHeartbeatResponse, _has_bits_),
      -1,
      -1,
      sizeof(StoreHeartbeatResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreHeartbeatResponse, _internal_metadata_));
  ReportSplitRequest_descriptor_ = file->message_type(34);
  static const int ReportSplitRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportSplitRequest, left_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportSplitRequest, right_),
  };
  ReportSplitRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReportSplitRequest_descriptor_,
      ReportSplitRequest::internal_default_instance(),
      ReportSplitRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportSplitRequest, _has_bits_),
      -1,
      -1,
      sizeof(ReportSplitRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportSplitRequest, _internal_metadata_));
  ReportSplitResponse_descriptor_ = file->message_type(35);
  static const int ReportSplitResponse_offsets_[1] = {
  };
  ReportSplitResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReportSplitResponse_descriptor_,
      ReportSplitResponse::internal_default_instance(),
      ReportSplitResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportSplitResponse, _has_bits_),
      -1,
      -1,
      sizeof(ReportSplitResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReportSplitResponse, _internal_metadata_));
  RequestHeader_descriptor_ = file->message_type(36);
  static const int RequestHeader_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestHeader, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestHeader, cluster_id_),
  };
  RequestHeader_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RequestHeader_descriptor_,
      RequestHeader::internal_default_instance(),
      RequestHeader_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestHeader, _has_bits_),
      -1,
      -1,
      sizeof(RequestHeader),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestHeader, _internal_metadata_));
  ResponseHeader_descriptor_ = file->message_type(37);
  static const int ResponseHeader_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseHeader, uuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseHeader, cluster_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseHeader, error_),
  };
  ResponseHeader_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResponseHeader_descriptor_,
      ResponseHeader::internal_default_instance(),
      ResponseHeader_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseHeader, _has_bits_),
      -1,
      -1,
      sizeof(ResponseHeader),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResponseHeader, _internal_metadata_));
  Request_descriptor_ = file->message_type(38);
  static const int Request_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, cmd_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, tso_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, bootstrap_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, is_bootstrapped_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, alloc_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, get_store_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, put_store_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, ask_split_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, get_region_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, region_heartbeat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, get_cluster_config_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, put_cluster_config_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, store_heartbeat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, report_split_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, get_region_by_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, get_pd_members_),
  };
  Request_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Request_descriptor_,
      Request::internal_default_instance(),
      Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _has_bits_),
      -1,
      -1,
      sizeof(Request),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _internal_metadata_));
  Response_descriptor_ = file->message_type(39);
  static const int Response_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, cmd_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, tso_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, bootstrap_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, is_bootstrapped_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, alloc_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, get_store_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, put_store_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, ask_split_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, get_region_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, region_heartbeat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, get_cluster_config_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, put_cluster_config_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, store_heartbeat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, report_split_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, get_region_by_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, get_pd_members_),
  };
  Response_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_descriptor_,
      Response::internal_default_instance(),
      Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _has_bits_),
      -1,
      -1,
      sizeof(Response),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _internal_metadata_));
  BootstrappedError_descriptor_ = file->message_type(40);
  static const int BootstrappedError_offsets_[1] = {
  };
  BootstrappedError_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BootstrappedError_descriptor_,
      BootstrappedError::internal_default_instance(),
      BootstrappedError_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BootstrappedError, _has_bits_),
      -1,
      -1,
      sizeof(BootstrappedError),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BootstrappedError, _internal_metadata_));
  StoreIsTombstoneError_descriptor_ = file->message_type(41);
  static const int StoreIsTombstoneError_offsets_[1] = {
  };
  StoreIsTombstoneError_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StoreIsTombstoneError_descriptor_,
      StoreIsTombstoneError::internal_default_instance(),
      StoreIsTombstoneError_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreIsTombstoneError, _has_bits_),
      -1,
      -1,
      sizeof(StoreIsTombstoneError),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StoreIsTombstoneError, _internal_metadata_));
  Error_descriptor_ = file->message_type(42);
  static const int Error_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, message_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, bootstrapped_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, is_tombstone_),
  };
  Error_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Error_descriptor_,
      Error::internal_default_instance(),
      Error_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, _has_bits_),
      -1,
      -1,
      sizeof(Error),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, _internal_metadata_));
  CommandType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_pdpb_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Leader_descriptor_, Leader::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TsoRequest_descriptor_, TsoRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Timestamp_descriptor_, Timestamp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TsoResponse_descriptor_, TsoResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BootstrapRequest_descriptor_, BootstrapRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BootstrapResponse_descriptor_, BootstrapResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IsBootstrappedRequest_descriptor_, IsBootstrappedRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IsBootstrappedResponse_descriptor_, IsBootstrappedResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AllocIdRequest_descriptor_, AllocIdRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AllocIdResponse_descriptor_, AllocIdResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetStoreRequest_descriptor_, GetStoreRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetStoreResponse_descriptor_, GetStoreResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetRegionRequest_descriptor_, GetRegionRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetRegionResponse_descriptor_, GetRegionResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetRegionByIDRequest_descriptor_, GetRegionByIDRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetClusterConfigRequest_descriptor_, GetClusterConfigRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetClusterConfigResponse_descriptor_, GetClusterConfigResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PutStoreRequest_descriptor_, PutStoreRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PutStoreResponse_descriptor_, PutStoreResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PDMember_descriptor_, PDMember::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetPDMembersRequest_descriptor_, GetPDMembersRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetPDMembersResponse_descriptor_, GetPDMembersResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PeerStats_descriptor_, PeerStats::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RegionHeartbeatRequest_descriptor_, RegionHeartbeatRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChangePeer_descriptor_, ChangePeer::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransferLeader_descriptor_, TransferLeader::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RegionHeartbeatResponse_descriptor_, RegionHeartbeatResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PutClusterConfigRequest_descriptor_, PutClusterConfigRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PutClusterConfigResponse_descriptor_, PutClusterConfigResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AskSplitRequest_descriptor_, AskSplitRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AskSplitResponse_descriptor_, AskSplitResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StoreStats_descriptor_, StoreStats::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StoreHeartbeatRequest_descriptor_, StoreHeartbeatRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StoreHeartbeatResponse_descriptor_, StoreHeartbeatResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReportSplitRequest_descriptor_, ReportSplitRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReportSplitResponse_descriptor_, ReportSplitResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RequestHeader_descriptor_, RequestHeader::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResponseHeader_descriptor_, ResponseHeader::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Request_descriptor_, Request::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_descriptor_, Response::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BootstrappedError_descriptor_, BootstrappedError::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StoreIsTombstoneError_descriptor_, StoreIsTombstoneError::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Error_descriptor_, Error::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_pdpb_2eproto() {
  Leader_default_instance_.Shutdown();
  delete Leader_reflection_;
  TsoRequest_default_instance_.Shutdown();
  delete TsoRequest_reflection_;
  Timestamp_default_instance_.Shutdown();
  delete Timestamp_reflection_;
  TsoResponse_default_instance_.Shutdown();
  delete TsoResponse_reflection_;
  BootstrapRequest_default_instance_.Shutdown();
  delete BootstrapRequest_reflection_;
  BootstrapResponse_default_instance_.Shutdown();
  delete BootstrapResponse_reflection_;
  IsBootstrappedRequest_default_instance_.Shutdown();
  delete IsBootstrappedRequest_reflection_;
  IsBootstrappedResponse_default_instance_.Shutdown();
  delete IsBootstrappedResponse_reflection_;
  AllocIdRequest_default_instance_.Shutdown();
  delete AllocIdRequest_reflection_;
  AllocIdResponse_default_instance_.Shutdown();
  delete AllocIdResponse_reflection_;
  GetStoreRequest_default_instance_.Shutdown();
  delete GetStoreRequest_reflection_;
  GetStoreResponse_default_instance_.Shutdown();
  delete GetStoreResponse_reflection_;
  GetRegionRequest_default_instance_.Shutdown();
  delete GetRegionRequest_reflection_;
  GetRegionResponse_default_instance_.Shutdown();
  delete GetRegionResponse_reflection_;
  GetRegionByIDRequest_default_instance_.Shutdown();
  delete GetRegionByIDRequest_reflection_;
  GetClusterConfigRequest_default_instance_.Shutdown();
  delete GetClusterConfigRequest_reflection_;
  GetClusterConfigResponse_default_instance_.Shutdown();
  delete GetClusterConfigResponse_reflection_;
  PutStoreRequest_default_instance_.Shutdown();
  delete PutStoreRequest_reflection_;
  PutStoreResponse_default_instance_.Shutdown();
  delete PutStoreResponse_reflection_;
  PDMember_default_instance_.Shutdown();
  delete PDMember_reflection_;
  GetPDMembersRequest_default_instance_.Shutdown();
  delete GetPDMembersRequest_reflection_;
  GetPDMembersResponse_default_instance_.Shutdown();
  delete GetPDMembersResponse_reflection_;
  PeerStats_default_instance_.Shutdown();
  delete PeerStats_reflection_;
  RegionHeartbeatRequest_default_instance_.Shutdown();
  delete RegionHeartbeatRequest_reflection_;
  ChangePeer_default_instance_.Shutdown();
  delete ChangePeer_reflection_;
  TransferLeader_default_instance_.Shutdown();
  delete TransferLeader_reflection_;
  RegionHeartbeatResponse_default_instance_.Shutdown();
  delete RegionHeartbeatResponse_reflection_;
  PutClusterConfigRequest_default_instance_.Shutdown();
  delete PutClusterConfigRequest_reflection_;
  PutClusterConfigResponse_default_instance_.Shutdown();
  delete PutClusterConfigResponse_reflection_;
  AskSplitRequest_default_instance_.Shutdown();
  delete AskSplitRequest_reflection_;
  AskSplitResponse_default_instance_.Shutdown();
  delete AskSplitResponse_reflection_;
  StoreStats_default_instance_.Shutdown();
  delete StoreStats_reflection_;
  StoreHeartbeatRequest_default_instance_.Shutdown();
  delete StoreHeartbeatRequest_reflection_;
  StoreHeartbeatResponse_default_instance_.Shutdown();
  delete StoreHeartbeatResponse_reflection_;
  ReportSplitRequest_default_instance_.Shutdown();
  delete ReportSplitRequest_reflection_;
  ReportSplitResponse_default_instance_.Shutdown();
  delete ReportSplitResponse_reflection_;
  RequestHeader_default_instance_.Shutdown();
  delete RequestHeader_reflection_;
  ResponseHeader_default_instance_.Shutdown();
  delete ResponseHeader_reflection_;
  Request_default_instance_.Shutdown();
  delete Request_reflection_;
  Response_default_instance_.Shutdown();
  delete Response_reflection_;
  BootstrappedError_default_instance_.Shutdown();
  delete BootstrappedError_reflection_;
  StoreIsTombstoneError_default_instance_.Shutdown();
  delete StoreIsTombstoneError_reflection_;
  Error_default_instance_.Shutdown();
  delete Error_reflection_;
}

void protobuf_InitDefaults_pdpb_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::metapb::protobuf_InitDefaults_metapb_2eproto();
  ::eraftpb::protobuf_InitDefaults_eraftpb_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  Leader_default_instance_.DefaultConstruct();
  TsoRequest_default_instance_.DefaultConstruct();
  Timestamp_default_instance_.DefaultConstruct();
  TsoResponse_default_instance_.DefaultConstruct();
  BootstrapRequest_default_instance_.DefaultConstruct();
  BootstrapResponse_default_instance_.DefaultConstruct();
  IsBootstrappedRequest_default_instance_.DefaultConstruct();
  IsBootstrappedResponse_default_instance_.DefaultConstruct();
  AllocIdRequest_default_instance_.DefaultConstruct();
  AllocIdResponse_default_instance_.DefaultConstruct();
  GetStoreRequest_default_instance_.DefaultConstruct();
  GetStoreResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetRegionRequest_default_instance_.DefaultConstruct();
  GetRegionResponse_default_instance_.DefaultConstruct();
  GetRegionByIDRequest_default_instance_.DefaultConstruct();
  GetClusterConfigRequest_default_instance_.DefaultConstruct();
  GetClusterConfigResponse_default_instance_.DefaultConstruct();
  PutStoreRequest_default_instance_.DefaultConstruct();
  PutStoreResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  PDMember_default_instance_.DefaultConstruct();
  GetPDMembersRequest_default_instance_.DefaultConstruct();
  GetPDMembersResponse_default_instance_.DefaultConstruct();
  PeerStats_default_instance_.DefaultConstruct();
  RegionHeartbeatRequest_default_instance_.DefaultConstruct();
  ChangePeer_default_instance_.DefaultConstruct();
  TransferLeader_default_instance_.DefaultConstruct();
  RegionHeartbeatResponse_default_instance_.DefaultConstruct();
  PutClusterConfigRequest_default_instance_.DefaultConstruct();
  PutClusterConfigResponse_default_instance_.DefaultConstruct();
  AskSplitRequest_default_instance_.DefaultConstruct();
  AskSplitResponse_default_instance_.DefaultConstruct();
  StoreStats_default_instance_.DefaultConstruct();
  StoreHeartbeatRequest_default_instance_.DefaultConstruct();
  StoreHeartbeatResponse_default_instance_.DefaultConstruct();
  ReportSplitRequest_default_instance_.DefaultConstruct();
  ReportSplitResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  RequestHeader_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ResponseHeader_default_instance_.DefaultConstruct();
  Request_default_instance_.DefaultConstruct();
  Response_default_instance_.DefaultConstruct();
  BootstrappedError_default_instance_.DefaultConstruct();
  StoreIsTombstoneError_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Error_default_instance_.DefaultConstruct();
  Leader_default_instance_.get_mutable()->InitAsDefaultInstance();
  TsoRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  Timestamp_default_instance_.get_mutable()->InitAsDefaultInstance();
  TsoResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  BootstrapRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  BootstrapResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  IsBootstrappedRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  IsBootstrappedResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  AllocIdRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  AllocIdResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetStoreRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetStoreResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetRegionRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetRegionResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetRegionByIDRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetClusterConfigRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetClusterConfigResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  PutStoreRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  PutStoreResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  PDMember_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetPDMembersRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetPDMembersResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  PeerStats_default_instance_.get_mutable()->InitAsDefaultInstance();
  RegionHeartbeatRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ChangePeer_default_instance_.get_mutable()->InitAsDefaultInstance();
  TransferLeader_default_instance_.get_mutable()->InitAsDefaultInstance();
  RegionHeartbeatResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  PutClusterConfigRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  PutClusterConfigResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  AskSplitRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  AskSplitResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  StoreStats_default_instance_.get_mutable()->InitAsDefaultInstance();
  StoreHeartbeatRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  StoreHeartbeatResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  ReportSplitRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ReportSplitResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  RequestHeader_default_instance_.get_mutable()->InitAsDefaultInstance();
  ResponseHeader_default_instance_.get_mutable()->InitAsDefaultInstance();
  Request_default_instance_.get_mutable()->InitAsDefaultInstance();
  Response_default_instance_.get_mutable()->InitAsDefaultInstance();
  BootstrappedError_default_instance_.get_mutable()->InitAsDefaultInstance();
  StoreIsTombstoneError_default_instance_.get_mutable()->InitAsDefaultInstance();
  Error_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_pdpb_2eproto_once_);
void protobuf_InitDefaults_pdpb_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_pdpb_2eproto_once_,
                 &protobuf_InitDefaults_pdpb_2eproto_impl);
}
void protobuf_AddDesc_pdpb_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_pdpb_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\npdpb.proto\022\004pdpb\032\014metapb.proto\032\reraftp"
    "b.proto\"\"\n\006Leader\022\014\n\004addr\030\001 \001(\t\022\n\n\002id\030\003 "
    "\001(\004\"\033\n\nTsoRequest\022\r\n\005count\030\001 \001(\r\".\n\tTime"
    "stamp\022\020\n\010physical\030\001 \001(\003\022\017\n\007logical\030\002 \001(\003"
    "\"@\n\013TsoResponse\022\r\n\005count\030\001 \001(\r\022\"\n\ttimest"
    "amp\030\002 \001(\0132\017.pdpb.Timestamp\"P\n\020BootstrapR"
    "equest\022\034\n\005store\030\001 \001(\0132\r.metapb.Store\022\036\n\006"
    "region\030\002 \001(\0132\016.metapb.Region\"\023\n\021Bootstra"
    "pResponse\"\027\n\025IsBootstrappedRequest\".\n\026Is"
    "BootstrappedResponse\022\024\n\014bootstrapped\030\001 \001"
    "(\010\"\020\n\016AllocIdRequest\"\035\n\017AllocIdResponse\022"
    "\n\n\002id\030\001 \001(\004\"#\n\017GetStoreRequest\022\020\n\010store_"
    "id\030\001 \001(\004\"0\n\020GetStoreResponse\022\034\n\005store\030\001 "
    "\001(\0132\r.metapb.Store\"&\n\020GetRegionRequest\022\022"
    "\n\nregion_key\030\001 \001(\014\"Q\n\021GetRegionResponse\022"
    "\036\n\006region\030\001 \001(\0132\016.metapb.Region\022\034\n\006leade"
    "r\030\002 \001(\0132\014.metapb.Peer\")\n\024GetRegionByIDRe"
    "quest\022\021\n\tregion_id\030\001 \001(\004\"\031\n\027GetClusterCo"
    "nfigRequest\"<\n\030GetClusterConfigResponse\022"
    " \n\007cluster\030\001 \001(\0132\017.metapb.Cluster\"/\n\017Put"
    "StoreRequest\022\034\n\005store\030\001 \001(\0132\r.metapb.Sto"
    "re\"\022\n\020PutStoreResponse\"@\n\010PDMember\022\014\n\004na"
    "me\030\001 \001(\t\022\023\n\013client_urls\030\002 \003(\t\022\021\n\tpeer_ur"
    "ls\030\003 \003(\t\"\025\n\023GetPDMembersRequest\"7\n\024GetPD"
    "MembersResponse\022\037\n\007members\030\001 \003(\0132\016.pdpb."
    "PDMember\"=\n\tPeerStats\022\032\n\004peer\030\001 \001(\0132\014.me"
    "tapb.Peer\022\024\n\014down_seconds\030\002 \001(\004\"\240\001\n\026Regi"
    "onHeartbeatRequest\022\036\n\006region\030\001 \001(\0132\016.met"
    "apb.Region\022\034\n\006leader\030\002 \001(\0132\014.metapb.Peer"
    "\022#\n\ndown_peers\030\003 \003(\0132\017.pdpb.PeerStats\022#\n"
    "\rpending_peers\030\004 \003(\0132\014.metapb.Peer\"V\n\nCh"
    "angePeer\022,\n\013change_type\030\001 \001(\0162\027.eraftpb."
    "ConfChangeType\022\032\n\004peer\030\002 \001(\0132\014.metapb.Pe"
    "er\",\n\016TransferLeader\022\032\n\004peer\030\001 \001(\0132\014.met"
    "apb.Peer\"o\n\027RegionHeartbeatResponse\022%\n\013c"
    "hange_peer\030\001 \001(\0132\020.pdpb.ChangePeer\022-\n\017tr"
    "ansfer_leader\030\002 \001(\0132\024.pdpb.TransferLeade"
    "r\";\n\027PutClusterConfigRequest\022 \n\007cluster\030"
    "\001 \001(\0132\017.metapb.Cluster\"\032\n\030PutClusterConf"
    "igResponse\"1\n\017AskSplitRequest\022\036\n\006region\030"
    "\001 \001(\0132\016.metapb.Region\"\?\n\020AskSplitRespons"
    "e\022\025\n\rnew_region_id\030\001 \001(\004\022\024\n\014new_peer_ids"
    "\030\002 \003(\004\"\325\001\n\nStoreStats\022\020\n\010store_id\030\001 \001(\004\022"
    "\020\n\010capacity\030\002 \001(\004\022\021\n\tavailable\030\003 \001(\004\022\024\n\014"
    "region_count\030\004 \001(\r\022\032\n\022sending_snap_count"
    "\030\005 \001(\r\022\034\n\024receiving_snap_count\030\006 \001(\r\022\022\n\n"
    "start_time\030\007 \001(\r\022\033\n\023applying_snap_count\030"
    "\010 \001(\r\022\017\n\007is_busy\030\t \001(\010\"8\n\025StoreHeartbeat"
    "Request\022\037\n\005stats\030\001 \001(\0132\020.pdpb.StoreStats"
    "\"\030\n\026StoreHeartbeatResponse\"Q\n\022ReportSpli"
    "tRequest\022\034\n\004left\030\001 \001(\0132\016.metapb.Region\022\035"
    "\n\005right\030\002 \001(\0132\016.metapb.Region\"\025\n\023ReportS"
    "plitResponse\"1\n\rRequestHeader\022\014\n\004uuid\030\001 "
    "\001(\014\022\022\n\ncluster_id\030\002 \001(\004\"N\n\016ResponseHeade"
    "r\022\014\n\004uuid\030\001 \001(\014\022\022\n\ncluster_id\030\002 \001(\004\022\032\n\005e"
    "rror\030\003 \001(\0132\013.pdpb.Error\"\242\006\n\007Request\022#\n\006h"
    "eader\030\001 \001(\0132\023.pdpb.RequestHeader\022#\n\010cmd_"
    "type\030\002 \001(\0162\021.pdpb.CommandType\022\035\n\003tso\030\003 \001"
    "(\0132\020.pdpb.TsoRequest\022)\n\tbootstrap\030\004 \001(\0132"
    "\026.pdpb.BootstrapRequest\0224\n\017is_bootstrapp"
    "ed\030\005 \001(\0132\033.pdpb.IsBootstrappedRequest\022&\n"
    "\010alloc_id\030\006 \001(\0132\024.pdpb.AllocIdRequest\022(\n"
    "\tget_store\030\007 \001(\0132\025.pdpb.GetStoreRequest\022"
    "(\n\tput_store\030\010 \001(\0132\025.pdpb.PutStoreReques"
    "t\022(\n\task_split\030\t \001(\0132\025.pdpb.AskSplitRequ"
    "est\022*\n\nget_region\030\n \001(\0132\026.pdpb.GetRegion"
    "Request\0226\n\020region_heartbeat\030\013 \001(\0132\034.pdpb"
    ".RegionHeartbeatRequest\0229\n\022get_cluster_c"
    "onfig\030\014 \001(\0132\035.pdpb.GetClusterConfigReque"
    "st\0229\n\022put_cluster_config\030\r \001(\0132\035.pdpb.Pu"
    "tClusterConfigRequest\0224\n\017store_heartbeat"
    "\030\016 \001(\0132\033.pdpb.StoreHeartbeatRequest\022.\n\014r"
    "eport_split\030\017 \001(\0132\030.pdpb.ReportSplitRequ"
    "est\0224\n\020get_region_by_id\030\020 \001(\0132\032.pdpb.Get"
    "RegionByIDRequest\0221\n\016get_pd_members\030\021 \001("
    "\0132\031.pdpb.GetPDMembersRequest\"\257\006\n\010Respons"
    "e\022$\n\006header\030\001 \001(\0132\024.pdpb.ResponseHeader\022"
    "#\n\010cmd_type\030\002 \001(\0162\021.pdpb.CommandType\022\036\n\003"
    "tso\030\003 \001(\0132\021.pdpb.TsoResponse\022*\n\tbootstra"
    "p\030\004 \001(\0132\027.pdpb.BootstrapResponse\0225\n\017is_b"
    "ootstrapped\030\005 \001(\0132\034.pdpb.IsBootstrappedR"
    "esponse\022\'\n\010alloc_id\030\006 \001(\0132\025.pdpb.AllocId"
    "Response\022)\n\tget_store\030\007 \001(\0132\026.pdpb.GetSt"
    "oreResponse\022)\n\tput_store\030\010 \001(\0132\026.pdpb.Pu"
    "tStoreResponse\022)\n\task_split\030\t \001(\0132\026.pdpb"
    ".AskSplitResponse\022+\n\nget_region\030\n \001(\0132\027."
    "pdpb.GetRegionResponse\0227\n\020region_heartbe"
    "at\030\013 \001(\0132\035.pdpb.RegionHeartbeatResponse\022"
    ":\n\022get_cluster_config\030\014 \001(\0132\036.pdpb.GetCl"
    "usterConfigResponse\022:\n\022put_cluster_confi"
    "g\030\r \001(\0132\036.pdpb.PutClusterConfigResponse\022"
    "5\n\017store_heartbeat\030\016 \001(\0132\034.pdpb.StoreHea"
    "rtbeatResponse\022/\n\014report_split\030\017 \001(\0132\031.p"
    "dpb.ReportSplitResponse\0221\n\020get_region_by"
    "_id\030\020 \001(\0132\027.pdpb.GetRegionResponse\0222\n\016ge"
    "t_pd_members\030\021 \001(\0132\032.pdpb.GetPDMembersRe"
    "sponse\"\023\n\021BootstrappedError\"\027\n\025StoreIsTo"
    "mbstoneError\"z\n\005Error\022\017\n\007message\030\001 \001(\t\022-"
    "\n\014bootstrapped\030\002 \001(\0132\027.pdpb.Bootstrapped"
    "Error\0221\n\014is_tombstone\030\003 \001(\0132\033.pdpb.Store"
    "IsTombstoneError*\227\002\n\013CommandType\022\013\n\007Inva"
    "lid\020\000\022\007\n\003Tso\020\001\022\r\n\tBootstrap\020\002\022\022\n\016IsBoots"
    "trapped\020\003\022\013\n\007AllocId\020\004\022\014\n\010GetStore\020\005\022\014\n\010"
    "PutStore\020\006\022\014\n\010AskSplit\020\007\022\r\n\tGetRegion\020\010\022"
    "\023\n\017RegionHeartbeat\020\t\022\024\n\020GetClusterConfig"
    "\020\n\022\024\n\020PutClusterConfig\020\013\022\022\n\016StoreHeartbe"
    "at\020\014\022\017\n\013ReportSplit\020\r\022\021\n\rGetRegionByID\020\016"
    "\022\020\n\014GetPDMembers\020\017", 4298);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pdpb.proto", &protobuf_RegisterTypes);
  ::metapb::protobuf_AddDesc_metapb_2eproto();
  ::eraftpb::protobuf_AddDesc_eraftpb_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_pdpb_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_pdpb_2eproto_once_);
void protobuf_AddDesc_pdpb_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_pdpb_2eproto_once_,
                 &protobuf_AddDesc_pdpb_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_pdpb_2eproto {
  StaticDescriptorInitializer_pdpb_2eproto() {
    protobuf_AddDesc_pdpb_2eproto();
  }
} static_descriptor_initializer_pdpb_2eproto_;
const ::google::protobuf::EnumDescriptor* CommandType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CommandType_descriptor_;
}
bool CommandType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Leader::kAddrFieldNumber;
const int Leader::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Leader::Leader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.Leader)
}

void Leader::InitAsDefaultInstance() {
}

Leader::Leader(const Leader& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.Leader)
}

void Leader::SharedCtor() {
  _cached_size_ = 0;
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_ULONGLONG(0);
}

Leader::~Leader() {
  // @@protoc_insertion_point(destructor:pdpb.Leader)
  SharedDtor();
}

void Leader::SharedDtor() {
  addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Leader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Leader::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Leader_descriptor_;
}

const Leader& Leader::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Leader> Leader_default_instance_;

Leader* Leader::New(::google::protobuf::Arena* arena) const {
  Leader* n = new Leader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Leader::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.Leader)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_addr()) {
      addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    id_ = GOOGLE_ULONGLONG(0);
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Leader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.Leader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string addr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->addr().data(), this->addr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pdpb.Leader.addr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_id;
        break;
      }

      // optional uint64 id = 3;
      case 3: {
        if (tag == 24) {
         parse_id:
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.Leader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.Leader)
  return false;
#undef DO_
}

void Leader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.Leader)
  // optional string addr = 1;
  if (has_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pdpb.Leader.addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->addr(), output);
  }

  // optional uint64 id = 3;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.Leader)
}

::google::protobuf::uint8* Leader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.Leader)
  // optional string addr = 1;
  if (has_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pdpb.Leader.addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->addr(), target);
  }

  // optional uint64 id = 3;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.Leader)
  return target;
}

size_t Leader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.Leader)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string addr = 1;
    if (has_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->addr());
    }

    // optional uint64 id = 3;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Leader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.Leader)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Leader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Leader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.Leader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.Leader)
    UnsafeMergeFrom(*source);
  }
}

void Leader::MergeFrom(const Leader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.Leader)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Leader::UnsafeMergeFrom(const Leader& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_addr()) {
      set_has_addr();
      addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Leader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.Leader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Leader::CopyFrom(const Leader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.Leader)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Leader::IsInitialized() const {

  return true;
}

void Leader::Swap(Leader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Leader::InternalSwap(Leader* other) {
  addr_.Swap(&other->addr_);
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Leader::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Leader_descriptor_;
  metadata.reflection = Leader_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Leader

// optional string addr = 1;
bool Leader::has_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Leader::set_has_addr() {
  _has_bits_[0] |= 0x00000001u;
}
void Leader::clear_has_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
void Leader::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_addr();
}
const ::std::string& Leader::addr() const {
  // @@protoc_insertion_point(field_get:pdpb.Leader.addr)
  return addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Leader::set_addr(const ::std::string& value) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pdpb.Leader.addr)
}
void Leader::set_addr(const char* value) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pdpb.Leader.addr)
}
void Leader::set_addr(const char* value, size_t size) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pdpb.Leader.addr)
}
::std::string* Leader::mutable_addr() {
  set_has_addr();
  // @@protoc_insertion_point(field_mutable:pdpb.Leader.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Leader::release_addr() {
  // @@protoc_insertion_point(field_release:pdpb.Leader.addr)
  clear_has_addr();
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Leader::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    set_has_addr();
  } else {
    clear_has_addr();
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:pdpb.Leader.addr)
}

// optional uint64 id = 3;
bool Leader::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Leader::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void Leader::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void Leader::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
::google::protobuf::uint64 Leader::id() const {
  // @@protoc_insertion_point(field_get:pdpb.Leader.id)
  return id_;
}
void Leader::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pdpb.Leader.id)
}

inline const Leader* Leader::internal_default_instance() {
  return &Leader_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TsoRequest::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TsoRequest::TsoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.TsoRequest)
}

void TsoRequest::InitAsDefaultInstance() {
}

TsoRequest::TsoRequest(const TsoRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.TsoRequest)
}

void TsoRequest::SharedCtor() {
  _cached_size_ = 0;
  count_ = 0u;
}

TsoRequest::~TsoRequest() {
  // @@protoc_insertion_point(destructor:pdpb.TsoRequest)
  SharedDtor();
}

void TsoRequest::SharedDtor() {
}

void TsoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TsoRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TsoRequest_descriptor_;
}

const TsoRequest& TsoRequest::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TsoRequest> TsoRequest_default_instance_;

TsoRequest* TsoRequest::New(::google::protobuf::Arena* arena) const {
  TsoRequest* n = new TsoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TsoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.TsoRequest)
  count_ = 0u;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TsoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.TsoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 count = 1;
      case 1: {
        if (tag == 8) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.TsoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.TsoRequest)
  return false;
#undef DO_
}

void TsoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.TsoRequest)
  // optional uint32 count = 1;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.TsoRequest)
}

::google::protobuf::uint8* TsoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.TsoRequest)
  // optional uint32 count = 1;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.TsoRequest)
  return target;
}

size_t TsoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.TsoRequest)
  size_t total_size = 0;

  // optional uint32 count = 1;
  if (has_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TsoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.TsoRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TsoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TsoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.TsoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.TsoRequest)
    UnsafeMergeFrom(*source);
  }
}

void TsoRequest::MergeFrom(const TsoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.TsoRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TsoRequest::UnsafeMergeFrom(const TsoRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TsoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.TsoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TsoRequest::CopyFrom(const TsoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.TsoRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TsoRequest::IsInitialized() const {

  return true;
}

void TsoRequest::Swap(TsoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TsoRequest::InternalSwap(TsoRequest* other) {
  std::swap(count_, other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TsoRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TsoRequest_descriptor_;
  metadata.reflection = TsoRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TsoRequest

// optional uint32 count = 1;
bool TsoRequest::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TsoRequest::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
void TsoRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
void TsoRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
::google::protobuf::uint32 TsoRequest::count() const {
  // @@protoc_insertion_point(field_get:pdpb.TsoRequest.count)
  return count_;
}
void TsoRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:pdpb.TsoRequest.count)
}

inline const TsoRequest* TsoRequest::internal_default_instance() {
  return &TsoRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Timestamp::kPhysicalFieldNumber;
const int Timestamp::kLogicalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Timestamp::Timestamp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.Timestamp)
}

void Timestamp::InitAsDefaultInstance() {
}

Timestamp::Timestamp(const Timestamp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.Timestamp)
}

void Timestamp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&physical_, 0, reinterpret_cast<char*>(&logical_) -
    reinterpret_cast<char*>(&physical_) + sizeof(logical_));
}

Timestamp::~Timestamp() {
  // @@protoc_insertion_point(destructor:pdpb.Timestamp)
  SharedDtor();
}

void Timestamp::SharedDtor() {
}

void Timestamp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Timestamp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Timestamp_descriptor_;
}

const Timestamp& Timestamp::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Timestamp> Timestamp_default_instance_;

Timestamp* Timestamp::New(::google::protobuf::Arena* arena) const {
  Timestamp* n = new Timestamp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Timestamp::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.Timestamp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Timestamp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Timestamp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(physical_, logical_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Timestamp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.Timestamp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 physical = 1;
      case 1: {
        if (tag == 8) {
          set_has_physical();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &physical_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_logical;
        break;
      }

      // optional int64 logical = 2;
      case 2: {
        if (tag == 16) {
         parse_logical:
          set_has_logical();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &logical_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.Timestamp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.Timestamp)
  return false;
#undef DO_
}

void Timestamp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.Timestamp)
  // optional int64 physical = 1;
  if (has_physical()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->physical(), output);
  }

  // optional int64 logical = 2;
  if (has_logical()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->logical(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.Timestamp)
}

::google::protobuf::uint8* Timestamp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.Timestamp)
  // optional int64 physical = 1;
  if (has_physical()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->physical(), target);
  }

  // optional int64 logical = 2;
  if (has_logical()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->logical(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.Timestamp)
  return target;
}

size_t Timestamp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.Timestamp)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 physical = 1;
    if (has_physical()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->physical());
    }

    // optional int64 logical = 2;
    if (has_logical()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->logical());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Timestamp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.Timestamp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Timestamp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Timestamp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.Timestamp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.Timestamp)
    UnsafeMergeFrom(*source);
  }
}

void Timestamp::MergeFrom(const Timestamp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.Timestamp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Timestamp::UnsafeMergeFrom(const Timestamp& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_physical()) {
      set_physical(from.physical());
    }
    if (from.has_logical()) {
      set_logical(from.logical());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Timestamp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.Timestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Timestamp::CopyFrom(const Timestamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.Timestamp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Timestamp::IsInitialized() const {

  return true;
}

void Timestamp::Swap(Timestamp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Timestamp::InternalSwap(Timestamp* other) {
  std::swap(physical_, other->physical_);
  std::swap(logical_, other->logical_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Timestamp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Timestamp_descriptor_;
  metadata.reflection = Timestamp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Timestamp

// optional int64 physical = 1;
bool Timestamp::has_physical() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Timestamp::set_has_physical() {
  _has_bits_[0] |= 0x00000001u;
}
void Timestamp::clear_has_physical() {
  _has_bits_[0] &= ~0x00000001u;
}
void Timestamp::clear_physical() {
  physical_ = GOOGLE_LONGLONG(0);
  clear_has_physical();
}
::google::protobuf::int64 Timestamp::physical() const {
  // @@protoc_insertion_point(field_get:pdpb.Timestamp.physical)
  return physical_;
}
void Timestamp::set_physical(::google::protobuf::int64 value) {
  set_has_physical();
  physical_ = value;
  // @@protoc_insertion_point(field_set:pdpb.Timestamp.physical)
}

// optional int64 logical = 2;
bool Timestamp::has_logical() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Timestamp::set_has_logical() {
  _has_bits_[0] |= 0x00000002u;
}
void Timestamp::clear_has_logical() {
  _has_bits_[0] &= ~0x00000002u;
}
void Timestamp::clear_logical() {
  logical_ = GOOGLE_LONGLONG(0);
  clear_has_logical();
}
::google::protobuf::int64 Timestamp::logical() const {
  // @@protoc_insertion_point(field_get:pdpb.Timestamp.logical)
  return logical_;
}
void Timestamp::set_logical(::google::protobuf::int64 value) {
  set_has_logical();
  logical_ = value;
  // @@protoc_insertion_point(field_set:pdpb.Timestamp.logical)
}

inline const Timestamp* Timestamp::internal_default_instance() {
  return &Timestamp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TsoResponse::kCountFieldNumber;
const int TsoResponse::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TsoResponse::TsoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.TsoResponse)
}

void TsoResponse::InitAsDefaultInstance() {
  timestamp_ = const_cast< ::pdpb::Timestamp*>(
      ::pdpb::Timestamp::internal_default_instance());
}

TsoResponse::TsoResponse(const TsoResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.TsoResponse)
}

void TsoResponse::SharedCtor() {
  _cached_size_ = 0;
  timestamp_ = NULL;
  count_ = 0u;
}

TsoResponse::~TsoResponse() {
  // @@protoc_insertion_point(destructor:pdpb.TsoResponse)
  SharedDtor();
}

void TsoResponse::SharedDtor() {
  if (this != &TsoResponse_default_instance_.get()) {
    delete timestamp_;
  }
}

void TsoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TsoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TsoResponse_descriptor_;
}

const TsoResponse& TsoResponse::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TsoResponse> TsoResponse_default_instance_;

TsoResponse* TsoResponse::New(::google::protobuf::Arena* arena) const {
  TsoResponse* n = new TsoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TsoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.TsoResponse)
  if (_has_bits_[0 / 32] & 3u) {
    count_ = 0u;
    if (has_timestamp()) {
      if (timestamp_ != NULL) timestamp_->::pdpb::Timestamp::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TsoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.TsoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 count = 1;
      case 1: {
        if (tag == 8) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_timestamp;
        break;
      }

      // optional .pdpb.Timestamp timestamp = 2;
      case 2: {
        if (tag == 18) {
         parse_timestamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.TsoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.TsoResponse)
  return false;
#undef DO_
}

void TsoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.TsoResponse)
  // optional uint32 count = 1;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // optional .pdpb.Timestamp timestamp = 2;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->timestamp_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.TsoResponse)
}

::google::protobuf::uint8* TsoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.TsoResponse)
  // optional uint32 count = 1;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // optional .pdpb.Timestamp timestamp = 2;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->timestamp_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.TsoResponse)
  return target;
}

size_t TsoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.TsoResponse)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 count = 1;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

    // optional .pdpb.Timestamp timestamp = 2;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->timestamp_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TsoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.TsoResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TsoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TsoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.TsoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.TsoResponse)
    UnsafeMergeFrom(*source);
  }
}

void TsoResponse::MergeFrom(const TsoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.TsoResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TsoResponse::UnsafeMergeFrom(const TsoResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_count()) {
      set_count(from.count());
    }
    if (from.has_timestamp()) {
      mutable_timestamp()->::pdpb::Timestamp::MergeFrom(from.timestamp());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TsoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.TsoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TsoResponse::CopyFrom(const TsoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.TsoResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TsoResponse::IsInitialized() const {

  return true;
}

void TsoResponse::Swap(TsoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TsoResponse::InternalSwap(TsoResponse* other) {
  std::swap(count_, other->count_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TsoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TsoResponse_descriptor_;
  metadata.reflection = TsoResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TsoResponse

// optional uint32 count = 1;
bool TsoResponse::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TsoResponse::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
void TsoResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
void TsoResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
::google::protobuf::uint32 TsoResponse::count() const {
  // @@protoc_insertion_point(field_get:pdpb.TsoResponse.count)
  return count_;
}
void TsoResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:pdpb.TsoResponse.count)
}

// optional .pdpb.Timestamp timestamp = 2;
bool TsoResponse::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TsoResponse::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
void TsoResponse::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
void TsoResponse::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->::pdpb::Timestamp::Clear();
  clear_has_timestamp();
}
const ::pdpb::Timestamp& TsoResponse::timestamp() const {
  // @@protoc_insertion_point(field_get:pdpb.TsoResponse.timestamp)
  return timestamp_ != NULL ? *timestamp_
                         : *::pdpb::Timestamp::internal_default_instance();
}
::pdpb::Timestamp* TsoResponse::mutable_timestamp() {
  set_has_timestamp();
  if (timestamp_ == NULL) {
    timestamp_ = new ::pdpb::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.TsoResponse.timestamp)
  return timestamp_;
}
::pdpb::Timestamp* TsoResponse::release_timestamp() {
  // @@protoc_insertion_point(field_release:pdpb.TsoResponse.timestamp)
  clear_has_timestamp();
  ::pdpb::Timestamp* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
void TsoResponse::set_allocated_timestamp(::pdpb::Timestamp* timestamp) {
  delete timestamp_;
  timestamp_ = timestamp;
  if (timestamp) {
    set_has_timestamp();
  } else {
    clear_has_timestamp();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.TsoResponse.timestamp)
}

inline const TsoResponse* TsoResponse::internal_default_instance() {
  return &TsoResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BootstrapRequest::kStoreFieldNumber;
const int BootstrapRequest::kRegionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BootstrapRequest::BootstrapRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.BootstrapRequest)
}

void BootstrapRequest::InitAsDefaultInstance() {
  store_ = const_cast< ::metapb::Store*>(
      ::metapb::Store::internal_default_instance());
  region_ = const_cast< ::metapb::Region*>(
      ::metapb::Region::internal_default_instance());
}

BootstrapRequest::BootstrapRequest(const BootstrapRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.BootstrapRequest)
}

void BootstrapRequest::SharedCtor() {
  _cached_size_ = 0;
  store_ = NULL;
  region_ = NULL;
}

BootstrapRequest::~BootstrapRequest() {
  // @@protoc_insertion_point(destructor:pdpb.BootstrapRequest)
  SharedDtor();
}

void BootstrapRequest::SharedDtor() {
  if (this != &BootstrapRequest_default_instance_.get()) {
    delete store_;
    delete region_;
  }
}

void BootstrapRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BootstrapRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BootstrapRequest_descriptor_;
}

const BootstrapRequest& BootstrapRequest::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BootstrapRequest> BootstrapRequest_default_instance_;

BootstrapRequest* BootstrapRequest::New(::google::protobuf::Arena* arena) const {
  BootstrapRequest* n = new BootstrapRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BootstrapRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.BootstrapRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_store()) {
      if (store_ != NULL) store_->::metapb::Store::Clear();
    }
    if (has_region()) {
      if (region_ != NULL) region_->::metapb::Region::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BootstrapRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.BootstrapRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .metapb.Store store = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_store()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_region;
        break;
      }

      // optional .metapb.Region region = 2;
      case 2: {
        if (tag == 18) {
         parse_region:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_region()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.BootstrapRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.BootstrapRequest)
  return false;
#undef DO_
}

void BootstrapRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.BootstrapRequest)
  // optional .metapb.Store store = 1;
  if (has_store()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->store_, output);
  }

  // optional .metapb.Region region = 2;
  if (has_region()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->region_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.BootstrapRequest)
}

::google::protobuf::uint8* BootstrapRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.BootstrapRequest)
  // optional .metapb.Store store = 1;
  if (has_store()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->store_, false, target);
  }

  // optional .metapb.Region region = 2;
  if (has_region()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->region_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.BootstrapRequest)
  return target;
}

size_t BootstrapRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.BootstrapRequest)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .metapb.Store store = 1;
    if (has_store()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->store_);
    }

    // optional .metapb.Region region = 2;
    if (has_region()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->region_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BootstrapRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.BootstrapRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BootstrapRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BootstrapRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.BootstrapRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.BootstrapRequest)
    UnsafeMergeFrom(*source);
  }
}

void BootstrapRequest::MergeFrom(const BootstrapRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.BootstrapRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BootstrapRequest::UnsafeMergeFrom(const BootstrapRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_store()) {
      mutable_store()->::metapb::Store::MergeFrom(from.store());
    }
    if (from.has_region()) {
      mutable_region()->::metapb::Region::MergeFrom(from.region());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void BootstrapRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.BootstrapRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BootstrapRequest::CopyFrom(const BootstrapRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.BootstrapRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BootstrapRequest::IsInitialized() const {

  return true;
}

void BootstrapRequest::Swap(BootstrapRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BootstrapRequest::InternalSwap(BootstrapRequest* other) {
  std::swap(store_, other->store_);
  std::swap(region_, other->region_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BootstrapRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BootstrapRequest_descriptor_;
  metadata.reflection = BootstrapRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BootstrapRequest

// optional .metapb.Store store = 1;
bool BootstrapRequest::has_store() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BootstrapRequest::set_has_store() {
  _has_bits_[0] |= 0x00000001u;
}
void BootstrapRequest::clear_has_store() {
  _has_bits_[0] &= ~0x00000001u;
}
void BootstrapRequest::clear_store() {
  if (store_ != NULL) store_->::metapb::Store::Clear();
  clear_has_store();
}
const ::metapb::Store& BootstrapRequest::store() const {
  // @@protoc_insertion_point(field_get:pdpb.BootstrapRequest.store)
  return store_ != NULL ? *store_
                         : *::metapb::Store::internal_default_instance();
}
::metapb::Store* BootstrapRequest::mutable_store() {
  set_has_store();
  if (store_ == NULL) {
    store_ = new ::metapb::Store;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.BootstrapRequest.store)
  return store_;
}
::metapb::Store* BootstrapRequest::release_store() {
  // @@protoc_insertion_point(field_release:pdpb.BootstrapRequest.store)
  clear_has_store();
  ::metapb::Store* temp = store_;
  store_ = NULL;
  return temp;
}
void BootstrapRequest::set_allocated_store(::metapb::Store* store) {
  delete store_;
  store_ = store;
  if (store) {
    set_has_store();
  } else {
    clear_has_store();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.BootstrapRequest.store)
}

// optional .metapb.Region region = 2;
bool BootstrapRequest::has_region() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BootstrapRequest::set_has_region() {
  _has_bits_[0] |= 0x00000002u;
}
void BootstrapRequest::clear_has_region() {
  _has_bits_[0] &= ~0x00000002u;
}
void BootstrapRequest::clear_region() {
  if (region_ != NULL) region_->::metapb::Region::Clear();
  clear_has_region();
}
const ::metapb::Region& BootstrapRequest::region() const {
  // @@protoc_insertion_point(field_get:pdpb.BootstrapRequest.region)
  return region_ != NULL ? *region_
                         : *::metapb::Region::internal_default_instance();
}
::metapb::Region* BootstrapRequest::mutable_region() {
  set_has_region();
  if (region_ == NULL) {
    region_ = new ::metapb::Region;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.BootstrapRequest.region)
  return region_;
}
::metapb::Region* BootstrapRequest::release_region() {
  // @@protoc_insertion_point(field_release:pdpb.BootstrapRequest.region)
  clear_has_region();
  ::metapb::Region* temp = region_;
  region_ = NULL;
  return temp;
}
void BootstrapRequest::set_allocated_region(::metapb::Region* region) {
  delete region_;
  region_ = region;
  if (region) {
    set_has_region();
  } else {
    clear_has_region();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.BootstrapRequest.region)
}

inline const BootstrapRequest* BootstrapRequest::internal_default_instance() {
  return &BootstrapRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BootstrapResponse::BootstrapResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.BootstrapResponse)
}

void BootstrapResponse::InitAsDefaultInstance() {
}

BootstrapResponse::BootstrapResponse(const BootstrapResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.BootstrapResponse)
}

void BootstrapResponse::SharedCtor() {
  _cached_size_ = 0;
}

BootstrapResponse::~BootstrapResponse() {
  // @@protoc_insertion_point(destructor:pdpb.BootstrapResponse)
  SharedDtor();
}

void BootstrapResponse::SharedDtor() {
}

void BootstrapResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BootstrapResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BootstrapResponse_descriptor_;
}

const BootstrapResponse& BootstrapResponse::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BootstrapResponse> BootstrapResponse_default_instance_;

BootstrapResponse* BootstrapResponse::New(::google::protobuf::Arena* arena) const {
  BootstrapResponse* n = new BootstrapResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BootstrapResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.BootstrapResponse)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BootstrapResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.BootstrapResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.BootstrapResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.BootstrapResponse)
  return false;
#undef DO_
}

void BootstrapResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.BootstrapResponse)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.BootstrapResponse)
}

::google::protobuf::uint8* BootstrapResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.BootstrapResponse)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.BootstrapResponse)
  return target;
}

size_t BootstrapResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.BootstrapResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BootstrapResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.BootstrapResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BootstrapResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BootstrapResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.BootstrapResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.BootstrapResponse)
    UnsafeMergeFrom(*source);
  }
}

void BootstrapResponse::MergeFrom(const BootstrapResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.BootstrapResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BootstrapResponse::UnsafeMergeFrom(const BootstrapResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void BootstrapResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.BootstrapResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BootstrapResponse::CopyFrom(const BootstrapResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.BootstrapResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BootstrapResponse::IsInitialized() const {

  return true;
}

void BootstrapResponse::Swap(BootstrapResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BootstrapResponse::InternalSwap(BootstrapResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BootstrapResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BootstrapResponse_descriptor_;
  metadata.reflection = BootstrapResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BootstrapResponse

inline const BootstrapResponse* BootstrapResponse::internal_default_instance() {
  return &BootstrapResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IsBootstrappedRequest::IsBootstrappedRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.IsBootstrappedRequest)
}

void IsBootstrappedRequest::InitAsDefaultInstance() {
}

IsBootstrappedRequest::IsBootstrappedRequest(const IsBootstrappedRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.IsBootstrappedRequest)
}

void IsBootstrappedRequest::SharedCtor() {
  _cached_size_ = 0;
}

IsBootstrappedRequest::~IsBootstrappedRequest() {
  // @@protoc_insertion_point(destructor:pdpb.IsBootstrappedRequest)
  SharedDtor();
}

void IsBootstrappedRequest::SharedDtor() {
}

void IsBootstrappedRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IsBootstrappedRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IsBootstrappedRequest_descriptor_;
}

const IsBootstrappedRequest& IsBootstrappedRequest::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<IsBootstrappedRequest> IsBootstrappedRequest_default_instance_;

IsBootstrappedRequest* IsBootstrappedRequest::New(::google::protobuf::Arena* arena) const {
  IsBootstrappedRequest* n = new IsBootstrappedRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IsBootstrappedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.IsBootstrappedRequest)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool IsBootstrappedRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.IsBootstrappedRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.IsBootstrappedRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.IsBootstrappedRequest)
  return false;
#undef DO_
}

void IsBootstrappedRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.IsBootstrappedRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.IsBootstrappedRequest)
}

::google::protobuf::uint8* IsBootstrappedRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.IsBootstrappedRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.IsBootstrappedRequest)
  return target;
}

size_t IsBootstrappedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.IsBootstrappedRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IsBootstrappedRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.IsBootstrappedRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const IsBootstrappedRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IsBootstrappedRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.IsBootstrappedRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.IsBootstrappedRequest)
    UnsafeMergeFrom(*source);
  }
}

void IsBootstrappedRequest::MergeFrom(const IsBootstrappedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.IsBootstrappedRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void IsBootstrappedRequest::UnsafeMergeFrom(const IsBootstrappedRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void IsBootstrappedRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.IsBootstrappedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IsBootstrappedRequest::CopyFrom(const IsBootstrappedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.IsBootstrappedRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool IsBootstrappedRequest::IsInitialized() const {

  return true;
}

void IsBootstrappedRequest::Swap(IsBootstrappedRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IsBootstrappedRequest::InternalSwap(IsBootstrappedRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IsBootstrappedRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IsBootstrappedRequest_descriptor_;
  metadata.reflection = IsBootstrappedRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IsBootstrappedRequest

inline const IsBootstrappedRequest* IsBootstrappedRequest::internal_default_instance() {
  return &IsBootstrappedRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IsBootstrappedResponse::kBootstrappedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IsBootstrappedResponse::IsBootstrappedResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.IsBootstrappedResponse)
}

void IsBootstrappedResponse::InitAsDefaultInstance() {
}

IsBootstrappedResponse::IsBootstrappedResponse(const IsBootstrappedResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.IsBootstrappedResponse)
}

void IsBootstrappedResponse::SharedCtor() {
  _cached_size_ = 0;
  bootstrapped_ = false;
}

IsBootstrappedResponse::~IsBootstrappedResponse() {
  // @@protoc_insertion_point(destructor:pdpb.IsBootstrappedResponse)
  SharedDtor();
}

void IsBootstrappedResponse::SharedDtor() {
}

void IsBootstrappedResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IsBootstrappedResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IsBootstrappedResponse_descriptor_;
}

const IsBootstrappedResponse& IsBootstrappedResponse::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<IsBootstrappedResponse> IsBootstrappedResponse_default_instance_;

IsBootstrappedResponse* IsBootstrappedResponse::New(::google::protobuf::Arena* arena) const {
  IsBootstrappedResponse* n = new IsBootstrappedResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IsBootstrappedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.IsBootstrappedResponse)
  bootstrapped_ = false;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool IsBootstrappedResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.IsBootstrappedResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool bootstrapped = 1;
      case 1: {
        if (tag == 8) {
          set_has_bootstrapped();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bootstrapped_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.IsBootstrappedResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.IsBootstrappedResponse)
  return false;
#undef DO_
}

void IsBootstrappedResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.IsBootstrappedResponse)
  // optional bool bootstrapped = 1;
  if (has_bootstrapped()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->bootstrapped(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.IsBootstrappedResponse)
}

::google::protobuf::uint8* IsBootstrappedResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.IsBootstrappedResponse)
  // optional bool bootstrapped = 1;
  if (has_bootstrapped()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->bootstrapped(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.IsBootstrappedResponse)
  return target;
}

size_t IsBootstrappedResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.IsBootstrappedResponse)
  size_t total_size = 0;

  // optional bool bootstrapped = 1;
  if (has_bootstrapped()) {
    total_size += 1 + 1;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IsBootstrappedResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.IsBootstrappedResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const IsBootstrappedResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IsBootstrappedResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.IsBootstrappedResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.IsBootstrappedResponse)
    UnsafeMergeFrom(*source);
  }
}

void IsBootstrappedResponse::MergeFrom(const IsBootstrappedResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.IsBootstrappedResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void IsBootstrappedResponse::UnsafeMergeFrom(const IsBootstrappedResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bootstrapped()) {
      set_bootstrapped(from.bootstrapped());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void IsBootstrappedResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.IsBootstrappedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IsBootstrappedResponse::CopyFrom(const IsBootstrappedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.IsBootstrappedResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool IsBootstrappedResponse::IsInitialized() const {

  return true;
}

void IsBootstrappedResponse::Swap(IsBootstrappedResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IsBootstrappedResponse::InternalSwap(IsBootstrappedResponse* other) {
  std::swap(bootstrapped_, other->bootstrapped_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IsBootstrappedResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IsBootstrappedResponse_descriptor_;
  metadata.reflection = IsBootstrappedResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IsBootstrappedResponse

// optional bool bootstrapped = 1;
bool IsBootstrappedResponse::has_bootstrapped() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void IsBootstrappedResponse::set_has_bootstrapped() {
  _has_bits_[0] |= 0x00000001u;
}
void IsBootstrappedResponse::clear_has_bootstrapped() {
  _has_bits_[0] &= ~0x00000001u;
}
void IsBootstrappedResponse::clear_bootstrapped() {
  bootstrapped_ = false;
  clear_has_bootstrapped();
}
bool IsBootstrappedResponse::bootstrapped() const {
  // @@protoc_insertion_point(field_get:pdpb.IsBootstrappedResponse.bootstrapped)
  return bootstrapped_;
}
void IsBootstrappedResponse::set_bootstrapped(bool value) {
  set_has_bootstrapped();
  bootstrapped_ = value;
  // @@protoc_insertion_point(field_set:pdpb.IsBootstrappedResponse.bootstrapped)
}

inline const IsBootstrappedResponse* IsBootstrappedResponse::internal_default_instance() {
  return &IsBootstrappedResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllocIdRequest::AllocIdRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.AllocIdRequest)
}

void AllocIdRequest::InitAsDefaultInstance() {
}

AllocIdRequest::AllocIdRequest(const AllocIdRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.AllocIdRequest)
}

void AllocIdRequest::SharedCtor() {
  _cached_size_ = 0;
}

AllocIdRequest::~AllocIdRequest() {
  // @@protoc_insertion_point(destructor:pdpb.AllocIdRequest)
  SharedDtor();
}

void AllocIdRequest::SharedDtor() {
}

void AllocIdRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllocIdRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AllocIdRequest_descriptor_;
}

const AllocIdRequest& AllocIdRequest::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AllocIdRequest> AllocIdRequest_default_instance_;

AllocIdRequest* AllocIdRequest::New(::google::protobuf::Arena* arena) const {
  AllocIdRequest* n = new AllocIdRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllocIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.AllocIdRequest)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AllocIdRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.AllocIdRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.AllocIdRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.AllocIdRequest)
  return false;
#undef DO_
}

void AllocIdRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.AllocIdRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.AllocIdRequest)
}

::google::protobuf::uint8* AllocIdRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.AllocIdRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.AllocIdRequest)
  return target;
}

size_t AllocIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.AllocIdRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllocIdRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.AllocIdRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AllocIdRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllocIdRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.AllocIdRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.AllocIdRequest)
    UnsafeMergeFrom(*source);
  }
}

void AllocIdRequest::MergeFrom(const AllocIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.AllocIdRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AllocIdRequest::UnsafeMergeFrom(const AllocIdRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void AllocIdRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.AllocIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllocIdRequest::CopyFrom(const AllocIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.AllocIdRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AllocIdRequest::IsInitialized() const {

  return true;
}

void AllocIdRequest::Swap(AllocIdRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllocIdRequest::InternalSwap(AllocIdRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllocIdRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AllocIdRequest_descriptor_;
  metadata.reflection = AllocIdRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllocIdRequest

inline const AllocIdRequest* AllocIdRequest::internal_default_instance() {
  return &AllocIdRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllocIdResponse::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllocIdResponse::AllocIdResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.AllocIdResponse)
}

void AllocIdResponse::InitAsDefaultInstance() {
}

AllocIdResponse::AllocIdResponse(const AllocIdResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.AllocIdResponse)
}

void AllocIdResponse::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_ULONGLONG(0);
}

AllocIdResponse::~AllocIdResponse() {
  // @@protoc_insertion_point(destructor:pdpb.AllocIdResponse)
  SharedDtor();
}

void AllocIdResponse::SharedDtor() {
}

void AllocIdResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllocIdResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AllocIdResponse_descriptor_;
}

const AllocIdResponse& AllocIdResponse::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AllocIdResponse> AllocIdResponse_default_instance_;

AllocIdResponse* AllocIdResponse::New(::google::protobuf::Arena* arena) const {
  AllocIdResponse* n = new AllocIdResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllocIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.AllocIdResponse)
  id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AllocIdResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.AllocIdResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 id = 1;
      case 1: {
        if (tag == 8) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.AllocIdResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.AllocIdResponse)
  return false;
#undef DO_
}

void AllocIdResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.AllocIdResponse)
  // optional uint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.AllocIdResponse)
}

::google::protobuf::uint8* AllocIdResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.AllocIdResponse)
  // optional uint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.AllocIdResponse)
  return target;
}

size_t AllocIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.AllocIdResponse)
  size_t total_size = 0;

  // optional uint64 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllocIdResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.AllocIdResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AllocIdResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllocIdResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.AllocIdResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.AllocIdResponse)
    UnsafeMergeFrom(*source);
  }
}

void AllocIdResponse::MergeFrom(const AllocIdResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.AllocIdResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AllocIdResponse::UnsafeMergeFrom(const AllocIdResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void AllocIdResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.AllocIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllocIdResponse::CopyFrom(const AllocIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.AllocIdResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AllocIdResponse::IsInitialized() const {

  return true;
}

void AllocIdResponse::Swap(AllocIdResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllocIdResponse::InternalSwap(AllocIdResponse* other) {
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllocIdResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AllocIdResponse_descriptor_;
  metadata.reflection = AllocIdResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllocIdResponse

// optional uint64 id = 1;
bool AllocIdResponse::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AllocIdResponse::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void AllocIdResponse::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void AllocIdResponse::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
::google::protobuf::uint64 AllocIdResponse::id() const {
  // @@protoc_insertion_point(field_get:pdpb.AllocIdResponse.id)
  return id_;
}
void AllocIdResponse::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pdpb.AllocIdResponse.id)
}

inline const AllocIdResponse* AllocIdResponse::internal_default_instance() {
  return &AllocIdResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetStoreRequest::kStoreIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetStoreRequest::GetStoreRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.GetStoreRequest)
}

void GetStoreRequest::InitAsDefaultInstance() {
}

GetStoreRequest::GetStoreRequest(const GetStoreRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.GetStoreRequest)
}

void GetStoreRequest::SharedCtor() {
  _cached_size_ = 0;
  store_id_ = GOOGLE_ULONGLONG(0);
}

GetStoreRequest::~GetStoreRequest() {
  // @@protoc_insertion_point(destructor:pdpb.GetStoreRequest)
  SharedDtor();
}

void GetStoreRequest::SharedDtor() {
}

void GetStoreRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStoreRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStoreRequest_descriptor_;
}

const GetStoreRequest& GetStoreRequest::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetStoreRequest> GetStoreRequest_default_instance_;

GetStoreRequest* GetStoreRequest::New(::google::protobuf::Arena* arena) const {
  GetStoreRequest* n = new GetStoreRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetStoreRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.GetStoreRequest)
  store_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetStoreRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.GetStoreRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 store_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_store_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &store_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.GetStoreRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.GetStoreRequest)
  return false;
#undef DO_
}

void GetStoreRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.GetStoreRequest)
  // optional uint64 store_id = 1;
  if (has_store_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->store_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.GetStoreRequest)
}

::google::protobuf::uint8* GetStoreRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.GetStoreRequest)
  // optional uint64 store_id = 1;
  if (has_store_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->store_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.GetStoreRequest)
  return target;
}

size_t GetStoreRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.GetStoreRequest)
  size_t total_size = 0;

  // optional uint64 store_id = 1;
  if (has_store_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->store_id());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetStoreRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.GetStoreRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetStoreRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetStoreRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.GetStoreRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.GetStoreRequest)
    UnsafeMergeFrom(*source);
  }
}

void GetStoreRequest::MergeFrom(const GetStoreRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.GetStoreRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetStoreRequest::UnsafeMergeFrom(const GetStoreRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_store_id()) {
      set_store_id(from.store_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void GetStoreRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.GetStoreRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStoreRequest::CopyFrom(const GetStoreRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.GetStoreRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetStoreRequest::IsInitialized() const {

  return true;
}

void GetStoreRequest::Swap(GetStoreRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetStoreRequest::InternalSwap(GetStoreRequest* other) {
  std::swap(store_id_, other->store_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetStoreRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStoreRequest_descriptor_;
  metadata.reflection = GetStoreRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetStoreRequest

// optional uint64 store_id = 1;
bool GetStoreRequest::has_store_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetStoreRequest::set_has_store_id() {
  _has_bits_[0] |= 0x00000001u;
}
void GetStoreRequest::clear_has_store_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetStoreRequest::clear_store_id() {
  store_id_ = GOOGLE_ULONGLONG(0);
  clear_has_store_id();
}
::google::protobuf::uint64 GetStoreRequest::store_id() const {
  // @@protoc_insertion_point(field_get:pdpb.GetStoreRequest.store_id)
  return store_id_;
}
void GetStoreRequest::set_store_id(::google::protobuf::uint64 value) {
  set_has_store_id();
  store_id_ = value;
  // @@protoc_insertion_point(field_set:pdpb.GetStoreRequest.store_id)
}

inline const GetStoreRequest* GetStoreRequest::internal_default_instance() {
  return &GetStoreRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetStoreResponse::kStoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetStoreResponse::GetStoreResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.GetStoreResponse)
}

void GetStoreResponse::InitAsDefaultInstance() {
  store_ = const_cast< ::metapb::Store*>(
      ::metapb::Store::internal_default_instance());
}

GetStoreResponse::GetStoreResponse(const GetStoreResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.GetStoreResponse)
}

void GetStoreResponse::SharedCtor() {
  _cached_size_ = 0;
  store_ = NULL;
}

GetStoreResponse::~GetStoreResponse() {
  // @@protoc_insertion_point(destructor:pdpb.GetStoreResponse)
  SharedDtor();
}

void GetStoreResponse::SharedDtor() {
  if (this != &GetStoreResponse_default_instance_.get()) {
    delete store_;
  }
}

void GetStoreResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStoreResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStoreResponse_descriptor_;
}

const GetStoreResponse& GetStoreResponse::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetStoreResponse> GetStoreResponse_default_instance_;

GetStoreResponse* GetStoreResponse::New(::google::protobuf::Arena* arena) const {
  GetStoreResponse* n = new GetStoreResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetStoreResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.GetStoreResponse)
  if (has_store()) {
    if (store_ != NULL) store_->::metapb::Store::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetStoreResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.GetStoreResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .metapb.Store store = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_store()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.GetStoreResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.GetStoreResponse)
  return false;
#undef DO_
}

void GetStoreResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.GetStoreResponse)
  // optional .metapb.Store store = 1;
  if (has_store()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->store_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.GetStoreResponse)
}

::google::protobuf::uint8* GetStoreResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.GetStoreResponse)
  // optional .metapb.Store store = 1;
  if (has_store()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->store_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.GetStoreResponse)
  return target;
}

size_t GetStoreResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.GetStoreResponse)
  size_t total_size = 0;

  // optional .metapb.Store store = 1;
  if (has_store()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->store_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetStoreResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.GetStoreResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetStoreResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetStoreResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.GetStoreResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.GetStoreResponse)
    UnsafeMergeFrom(*source);
  }
}

void GetStoreResponse::MergeFrom(const GetStoreResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.GetStoreResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetStoreResponse::UnsafeMergeFrom(const GetStoreResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_store()) {
      mutable_store()->::metapb::Store::MergeFrom(from.store());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void GetStoreResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.GetStoreResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStoreResponse::CopyFrom(const GetStoreResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.GetStoreResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetStoreResponse::IsInitialized() const {

  return true;
}

void GetStoreResponse::Swap(GetStoreResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetStoreResponse::InternalSwap(GetStoreResponse* other) {
  std::swap(store_, other->store_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetStoreResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStoreResponse_descriptor_;
  metadata.reflection = GetStoreResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetStoreResponse

// optional .metapb.Store store = 1;
bool GetStoreResponse::has_store() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetStoreResponse::set_has_store() {
  _has_bits_[0] |= 0x00000001u;
}
void GetStoreResponse::clear_has_store() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetStoreResponse::clear_store() {
  if (store_ != NULL) store_->::metapb::Store::Clear();
  clear_has_store();
}
const ::metapb::Store& GetStoreResponse::store() const {
  // @@protoc_insertion_point(field_get:pdpb.GetStoreResponse.store)
  return store_ != NULL ? *store_
                         : *::metapb::Store::internal_default_instance();
}
::metapb::Store* GetStoreResponse::mutable_store() {
  set_has_store();
  if (store_ == NULL) {
    store_ = new ::metapb::Store;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.GetStoreResponse.store)
  return store_;
}
::metapb::Store* GetStoreResponse::release_store() {
  // @@protoc_insertion_point(field_release:pdpb.GetStoreResponse.store)
  clear_has_store();
  ::metapb::Store* temp = store_;
  store_ = NULL;
  return temp;
}
void GetStoreResponse::set_allocated_store(::metapb::Store* store) {
  delete store_;
  store_ = store;
  if (store) {
    set_has_store();
  } else {
    clear_has_store();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.GetStoreResponse.store)
}

inline const GetStoreResponse* GetStoreResponse::internal_default_instance() {
  return &GetStoreResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRegionRequest::kRegionKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRegionRequest::GetRegionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.GetRegionRequest)
}

void GetRegionRequest::InitAsDefaultInstance() {
}

GetRegionRequest::GetRegionRequest(const GetRegionRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.GetRegionRequest)
}

void GetRegionRequest::SharedCtor() {
  _cached_size_ = 0;
  region_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetRegionRequest::~GetRegionRequest() {
  // @@protoc_insertion_point(destructor:pdpb.GetRegionRequest)
  SharedDtor();
}

void GetRegionRequest::SharedDtor() {
  region_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetRegionRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRegionRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetRegionRequest_descriptor_;
}

const GetRegionRequest& GetRegionRequest::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetRegionRequest> GetRegionRequest_default_instance_;

GetRegionRequest* GetRegionRequest::New(::google::protobuf::Arena* arena) const {
  GetRegionRequest* n = new GetRegionRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRegionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.GetRegionRequest)
  if (has_region_key()) {
    region_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetRegionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.GetRegionRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes region_key = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_region_key()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.GetRegionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.GetRegionRequest)
  return false;
#undef DO_
}

void GetRegionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.GetRegionRequest)
  // optional bytes region_key = 1;
  if (has_region_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->region_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.GetRegionRequest)
}

::google::protobuf::uint8* GetRegionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.GetRegionRequest)
  // optional bytes region_key = 1;
  if (has_region_key()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->region_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.GetRegionRequest)
  return target;
}

size_t GetRegionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.GetRegionRequest)
  size_t total_size = 0;

  // optional bytes region_key = 1;
  if (has_region_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->region_key());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRegionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.GetRegionRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetRegionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRegionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.GetRegionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.GetRegionRequest)
    UnsafeMergeFrom(*source);
  }
}

void GetRegionRequest::MergeFrom(const GetRegionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.GetRegionRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetRegionRequest::UnsafeMergeFrom(const GetRegionRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_region_key()) {
      set_has_region_key();
      region_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_key_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void GetRegionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.GetRegionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRegionRequest::CopyFrom(const GetRegionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.GetRegionRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetRegionRequest::IsInitialized() const {

  return true;
}

void GetRegionRequest::Swap(GetRegionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRegionRequest::InternalSwap(GetRegionRequest* other) {
  region_key_.Swap(&other->region_key_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRegionRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetRegionRequest_descriptor_;
  metadata.reflection = GetRegionRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRegionRequest

// optional bytes region_key = 1;
bool GetRegionRequest::has_region_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetRegionRequest::set_has_region_key() {
  _has_bits_[0] |= 0x00000001u;
}
void GetRegionRequest::clear_has_region_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetRegionRequest::clear_region_key() {
  region_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_region_key();
}
const ::std::string& GetRegionRequest::region_key() const {
  // @@protoc_insertion_point(field_get:pdpb.GetRegionRequest.region_key)
  return region_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetRegionRequest::set_region_key(const ::std::string& value) {
  set_has_region_key();
  region_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pdpb.GetRegionRequest.region_key)
}
void GetRegionRequest::set_region_key(const char* value) {
  set_has_region_key();
  region_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pdpb.GetRegionRequest.region_key)
}
void GetRegionRequest::set_region_key(const void* value, size_t size) {
  set_has_region_key();
  region_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pdpb.GetRegionRequest.region_key)
}
::std::string* GetRegionRequest::mutable_region_key() {
  set_has_region_key();
  // @@protoc_insertion_point(field_mutable:pdpb.GetRegionRequest.region_key)
  return region_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetRegionRequest::release_region_key() {
  // @@protoc_insertion_point(field_release:pdpb.GetRegionRequest.region_key)
  clear_has_region_key();
  return region_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetRegionRequest::set_allocated_region_key(::std::string* region_key) {
  if (region_key != NULL) {
    set_has_region_key();
  } else {
    clear_has_region_key();
  }
  region_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region_key);
  // @@protoc_insertion_point(field_set_allocated:pdpb.GetRegionRequest.region_key)
}

inline const GetRegionRequest* GetRegionRequest::internal_default_instance() {
  return &GetRegionRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRegionResponse::kRegionFieldNumber;
const int GetRegionResponse::kLeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRegionResponse::GetRegionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.GetRegionResponse)
}

void GetRegionResponse::InitAsDefaultInstance() {
  region_ = const_cast< ::metapb::Region*>(
      ::metapb::Region::internal_default_instance());
  leader_ = const_cast< ::metapb::Peer*>(
      ::metapb::Peer::internal_default_instance());
}

GetRegionResponse::GetRegionResponse(const GetRegionResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.GetRegionResponse)
}

void GetRegionResponse::SharedCtor() {
  _cached_size_ = 0;
  region_ = NULL;
  leader_ = NULL;
}

GetRegionResponse::~GetRegionResponse() {
  // @@protoc_insertion_point(destructor:pdpb.GetRegionResponse)
  SharedDtor();
}

void GetRegionResponse::SharedDtor() {
  if (this != &GetRegionResponse_default_instance_.get()) {
    delete region_;
    delete leader_;
  }
}

void GetRegionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRegionResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetRegionResponse_descriptor_;
}

const GetRegionResponse& GetRegionResponse::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetRegionResponse> GetRegionResponse_default_instance_;

GetRegionResponse* GetRegionResponse::New(::google::protobuf::Arena* arena) const {
  GetRegionResponse* n = new GetRegionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRegionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.GetRegionResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_region()) {
      if (region_ != NULL) region_->::metapb::Region::Clear();
    }
    if (has_leader()) {
      if (leader_ != NULL) leader_->::metapb::Peer::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetRegionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.GetRegionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .metapb.Region region = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_region()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_leader;
        break;
      }

      // optional .metapb.Peer leader = 2;
      case 2: {
        if (tag == 18) {
         parse_leader:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_leader()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.GetRegionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.GetRegionResponse)
  return false;
#undef DO_
}

void GetRegionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.GetRegionResponse)
  // optional .metapb.Region region = 1;
  if (has_region()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->region_, output);
  }

  // optional .metapb.Peer leader = 2;
  if (has_leader()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->leader_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.GetRegionResponse)
}

::google::protobuf::uint8* GetRegionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.GetRegionResponse)
  // optional .metapb.Region region = 1;
  if (has_region()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->region_, false, target);
  }

  // optional .metapb.Peer leader = 2;
  if (has_leader()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->leader_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.GetRegionResponse)
  return target;
}

size_t GetRegionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.GetRegionResponse)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .metapb.Region region = 1;
    if (has_region()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->region_);
    }

    // optional .metapb.Peer leader = 2;
    if (has_leader()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->leader_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRegionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.GetRegionResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetRegionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRegionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.GetRegionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.GetRegionResponse)
    UnsafeMergeFrom(*source);
  }
}

void GetRegionResponse::MergeFrom(const GetRegionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.GetRegionResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetRegionResponse::UnsafeMergeFrom(const GetRegionResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_region()) {
      mutable_region()->::metapb::Region::MergeFrom(from.region());
    }
    if (from.has_leader()) {
      mutable_leader()->::metapb::Peer::MergeFrom(from.leader());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void GetRegionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.GetRegionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRegionResponse::CopyFrom(const GetRegionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.GetRegionResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetRegionResponse::IsInitialized() const {

  return true;
}

void GetRegionResponse::Swap(GetRegionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRegionResponse::InternalSwap(GetRegionResponse* other) {
  std::swap(region_, other->region_);
  std::swap(leader_, other->leader_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRegionResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetRegionResponse_descriptor_;
  metadata.reflection = GetRegionResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRegionResponse

// optional .metapb.Region region = 1;
bool GetRegionResponse::has_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetRegionResponse::set_has_region() {
  _has_bits_[0] |= 0x00000001u;
}
void GetRegionResponse::clear_has_region() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetRegionResponse::clear_region() {
  if (region_ != NULL) region_->::metapb::Region::Clear();
  clear_has_region();
}
const ::metapb::Region& GetRegionResponse::region() const {
  // @@protoc_insertion_point(field_get:pdpb.GetRegionResponse.region)
  return region_ != NULL ? *region_
                         : *::metapb::Region::internal_default_instance();
}
::metapb::Region* GetRegionResponse::mutable_region() {
  set_has_region();
  if (region_ == NULL) {
    region_ = new ::metapb::Region;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.GetRegionResponse.region)
  return region_;
}
::metapb::Region* GetRegionResponse::release_region() {
  // @@protoc_insertion_point(field_release:pdpb.GetRegionResponse.region)
  clear_has_region();
  ::metapb::Region* temp = region_;
  region_ = NULL;
  return temp;
}
void GetRegionResponse::set_allocated_region(::metapb::Region* region) {
  delete region_;
  region_ = region;
  if (region) {
    set_has_region();
  } else {
    clear_has_region();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.GetRegionResponse.region)
}

// optional .metapb.Peer leader = 2;
bool GetRegionResponse::has_leader() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetRegionResponse::set_has_leader() {
  _has_bits_[0] |= 0x00000002u;
}
void GetRegionResponse::clear_has_leader() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetRegionResponse::clear_leader() {
  if (leader_ != NULL) leader_->::metapb::Peer::Clear();
  clear_has_leader();
}
const ::metapb::Peer& GetRegionResponse::leader() const {
  // @@protoc_insertion_point(field_get:pdpb.GetRegionResponse.leader)
  return leader_ != NULL ? *leader_
                         : *::metapb::Peer::internal_default_instance();
}
::metapb::Peer* GetRegionResponse::mutable_leader() {
  set_has_leader();
  if (leader_ == NULL) {
    leader_ = new ::metapb::Peer;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.GetRegionResponse.leader)
  return leader_;
}
::metapb::Peer* GetRegionResponse::release_leader() {
  // @@protoc_insertion_point(field_release:pdpb.GetRegionResponse.leader)
  clear_has_leader();
  ::metapb::Peer* temp = leader_;
  leader_ = NULL;
  return temp;
}
void GetRegionResponse::set_allocated_leader(::metapb::Peer* leader) {
  delete leader_;
  leader_ = leader;
  if (leader) {
    set_has_leader();
  } else {
    clear_has_leader();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.GetRegionResponse.leader)
}

inline const GetRegionResponse* GetRegionResponse::internal_default_instance() {
  return &GetRegionResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRegionByIDRequest::kRegionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRegionByIDRequest::GetRegionByIDRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.GetRegionByIDRequest)
}

void GetRegionByIDRequest::InitAsDefaultInstance() {
}

GetRegionByIDRequest::GetRegionByIDRequest(const GetRegionByIDRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.GetRegionByIDRequest)
}

void GetRegionByIDRequest::SharedCtor() {
  _cached_size_ = 0;
  region_id_ = GOOGLE_ULONGLONG(0);
}

GetRegionByIDRequest::~GetRegionByIDRequest() {
  // @@protoc_insertion_point(destructor:pdpb.GetRegionByIDRequest)
  SharedDtor();
}

void GetRegionByIDRequest::SharedDtor() {
}

void GetRegionByIDRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRegionByIDRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetRegionByIDRequest_descriptor_;
}

const GetRegionByIDRequest& GetRegionByIDRequest::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetRegionByIDRequest> GetRegionByIDRequest_default_instance_;

GetRegionByIDRequest* GetRegionByIDRequest::New(::google::protobuf::Arena* arena) const {
  GetRegionByIDRequest* n = new GetRegionByIDRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRegionByIDRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.GetRegionByIDRequest)
  region_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetRegionByIDRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.GetRegionByIDRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 region_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_region_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &region_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.GetRegionByIDRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.GetRegionByIDRequest)
  return false;
#undef DO_
}

void GetRegionByIDRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.GetRegionByIDRequest)
  // optional uint64 region_id = 1;
  if (has_region_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->region_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.GetRegionByIDRequest)
}

::google::protobuf::uint8* GetRegionByIDRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.GetRegionByIDRequest)
  // optional uint64 region_id = 1;
  if (has_region_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->region_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.GetRegionByIDRequest)
  return target;
}

size_t GetRegionByIDRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.GetRegionByIDRequest)
  size_t total_size = 0;

  // optional uint64 region_id = 1;
  if (has_region_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->region_id());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRegionByIDRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.GetRegionByIDRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetRegionByIDRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRegionByIDRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.GetRegionByIDRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.GetRegionByIDRequest)
    UnsafeMergeFrom(*source);
  }
}

void GetRegionByIDRequest::MergeFrom(const GetRegionByIDRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.GetRegionByIDRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetRegionByIDRequest::UnsafeMergeFrom(const GetRegionByIDRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_region_id()) {
      set_region_id(from.region_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void GetRegionByIDRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.GetRegionByIDRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRegionByIDRequest::CopyFrom(const GetRegionByIDRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.GetRegionByIDRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetRegionByIDRequest::IsInitialized() const {

  return true;
}

void GetRegionByIDRequest::Swap(GetRegionByIDRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRegionByIDRequest::InternalSwap(GetRegionByIDRequest* other) {
  std::swap(region_id_, other->region_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRegionByIDRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetRegionByIDRequest_descriptor_;
  metadata.reflection = GetRegionByIDRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRegionByIDRequest

// optional uint64 region_id = 1;
bool GetRegionByIDRequest::has_region_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetRegionByIDRequest::set_has_region_id() {
  _has_bits_[0] |= 0x00000001u;
}
void GetRegionByIDRequest::clear_has_region_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetRegionByIDRequest::clear_region_id() {
  region_id_ = GOOGLE_ULONGLONG(0);
  clear_has_region_id();
}
::google::protobuf::uint64 GetRegionByIDRequest::region_id() const {
  // @@protoc_insertion_point(field_get:pdpb.GetRegionByIDRequest.region_id)
  return region_id_;
}
void GetRegionByIDRequest::set_region_id(::google::protobuf::uint64 value) {
  set_has_region_id();
  region_id_ = value;
  // @@protoc_insertion_point(field_set:pdpb.GetRegionByIDRequest.region_id)
}

inline const GetRegionByIDRequest* GetRegionByIDRequest::internal_default_instance() {
  return &GetRegionByIDRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetClusterConfigRequest::GetClusterConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.GetClusterConfigRequest)
}

void GetClusterConfigRequest::InitAsDefaultInstance() {
}

GetClusterConfigRequest::GetClusterConfigRequest(const GetClusterConfigRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.GetClusterConfigRequest)
}

void GetClusterConfigRequest::SharedCtor() {
  _cached_size_ = 0;
}

GetClusterConfigRequest::~GetClusterConfigRequest() {
  // @@protoc_insertion_point(destructor:pdpb.GetClusterConfigRequest)
  SharedDtor();
}

void GetClusterConfigRequest::SharedDtor() {
}

void GetClusterConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetClusterConfigRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetClusterConfigRequest_descriptor_;
}

const GetClusterConfigRequest& GetClusterConfigRequest::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetClusterConfigRequest> GetClusterConfigRequest_default_instance_;

GetClusterConfigRequest* GetClusterConfigRequest::New(::google::protobuf::Arena* arena) const {
  GetClusterConfigRequest* n = new GetClusterConfigRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetClusterConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.GetClusterConfigRequest)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetClusterConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.GetClusterConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.GetClusterConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.GetClusterConfigRequest)
  return false;
#undef DO_
}

void GetClusterConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.GetClusterConfigRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.GetClusterConfigRequest)
}

::google::protobuf::uint8* GetClusterConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.GetClusterConfigRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.GetClusterConfigRequest)
  return target;
}

size_t GetClusterConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.GetClusterConfigRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetClusterConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.GetClusterConfigRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetClusterConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetClusterConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.GetClusterConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.GetClusterConfigRequest)
    UnsafeMergeFrom(*source);
  }
}

void GetClusterConfigRequest::MergeFrom(const GetClusterConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.GetClusterConfigRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetClusterConfigRequest::UnsafeMergeFrom(const GetClusterConfigRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void GetClusterConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.GetClusterConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetClusterConfigRequest::CopyFrom(const GetClusterConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.GetClusterConfigRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetClusterConfigRequest::IsInitialized() const {

  return true;
}

void GetClusterConfigRequest::Swap(GetClusterConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetClusterConfigRequest::InternalSwap(GetClusterConfigRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetClusterConfigRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetClusterConfigRequest_descriptor_;
  metadata.reflection = GetClusterConfigRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetClusterConfigRequest

inline const GetClusterConfigRequest* GetClusterConfigRequest::internal_default_instance() {
  return &GetClusterConfigRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetClusterConfigResponse::kClusterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetClusterConfigResponse::GetClusterConfigResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.GetClusterConfigResponse)
}

void GetClusterConfigResponse::InitAsDefaultInstance() {
  cluster_ = const_cast< ::metapb::Cluster*>(
      ::metapb::Cluster::internal_default_instance());
}

GetClusterConfigResponse::GetClusterConfigResponse(const GetClusterConfigResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.GetClusterConfigResponse)
}

void GetClusterConfigResponse::SharedCtor() {
  _cached_size_ = 0;
  cluster_ = NULL;
}

GetClusterConfigResponse::~GetClusterConfigResponse() {
  // @@protoc_insertion_point(destructor:pdpb.GetClusterConfigResponse)
  SharedDtor();
}

void GetClusterConfigResponse::SharedDtor() {
  if (this != &GetClusterConfigResponse_default_instance_.get()) {
    delete cluster_;
  }
}

void GetClusterConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetClusterConfigResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetClusterConfigResponse_descriptor_;
}

const GetClusterConfigResponse& GetClusterConfigResponse::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetClusterConfigResponse> GetClusterConfigResponse_default_instance_;

GetClusterConfigResponse* GetClusterConfigResponse::New(::google::protobuf::Arena* arena) const {
  GetClusterConfigResponse* n = new GetClusterConfigResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetClusterConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.GetClusterConfigResponse)
  if (has_cluster()) {
    if (cluster_ != NULL) cluster_->::metapb::Cluster::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetClusterConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.GetClusterConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .metapb.Cluster cluster = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cluster()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.GetClusterConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.GetClusterConfigResponse)
  return false;
#undef DO_
}

void GetClusterConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.GetClusterConfigResponse)
  // optional .metapb.Cluster cluster = 1;
  if (has_cluster()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->cluster_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.GetClusterConfigResponse)
}

::google::protobuf::uint8* GetClusterConfigResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.GetClusterConfigResponse)
  // optional .metapb.Cluster cluster = 1;
  if (has_cluster()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->cluster_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.GetClusterConfigResponse)
  return target;
}

size_t GetClusterConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.GetClusterConfigResponse)
  size_t total_size = 0;

  // optional .metapb.Cluster cluster = 1;
  if (has_cluster()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cluster_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetClusterConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.GetClusterConfigResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetClusterConfigResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetClusterConfigResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.GetClusterConfigResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.GetClusterConfigResponse)
    UnsafeMergeFrom(*source);
  }
}

void GetClusterConfigResponse::MergeFrom(const GetClusterConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.GetClusterConfigResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetClusterConfigResponse::UnsafeMergeFrom(const GetClusterConfigResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cluster()) {
      mutable_cluster()->::metapb::Cluster::MergeFrom(from.cluster());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void GetClusterConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.GetClusterConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetClusterConfigResponse::CopyFrom(const GetClusterConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.GetClusterConfigResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetClusterConfigResponse::IsInitialized() const {

  return true;
}

void GetClusterConfigResponse::Swap(GetClusterConfigResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetClusterConfigResponse::InternalSwap(GetClusterConfigResponse* other) {
  std::swap(cluster_, other->cluster_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetClusterConfigResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetClusterConfigResponse_descriptor_;
  metadata.reflection = GetClusterConfigResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetClusterConfigResponse

// optional .metapb.Cluster cluster = 1;
bool GetClusterConfigResponse::has_cluster() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetClusterConfigResponse::set_has_cluster() {
  _has_bits_[0] |= 0x00000001u;
}
void GetClusterConfigResponse::clear_has_cluster() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetClusterConfigResponse::clear_cluster() {
  if (cluster_ != NULL) cluster_->::metapb::Cluster::Clear();
  clear_has_cluster();
}
const ::metapb::Cluster& GetClusterConfigResponse::cluster() const {
  // @@protoc_insertion_point(field_get:pdpb.GetClusterConfigResponse.cluster)
  return cluster_ != NULL ? *cluster_
                         : *::metapb::Cluster::internal_default_instance();
}
::metapb::Cluster* GetClusterConfigResponse::mutable_cluster() {
  set_has_cluster();
  if (cluster_ == NULL) {
    cluster_ = new ::metapb::Cluster;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.GetClusterConfigResponse.cluster)
  return cluster_;
}
::metapb::Cluster* GetClusterConfigResponse::release_cluster() {
  // @@protoc_insertion_point(field_release:pdpb.GetClusterConfigResponse.cluster)
  clear_has_cluster();
  ::metapb::Cluster* temp = cluster_;
  cluster_ = NULL;
  return temp;
}
void GetClusterConfigResponse::set_allocated_cluster(::metapb::Cluster* cluster) {
  delete cluster_;
  cluster_ = cluster;
  if (cluster) {
    set_has_cluster();
  } else {
    clear_has_cluster();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.GetClusterConfigResponse.cluster)
}

inline const GetClusterConfigResponse* GetClusterConfigResponse::internal_default_instance() {
  return &GetClusterConfigResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutStoreRequest::kStoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutStoreRequest::PutStoreRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.PutStoreRequest)
}

void PutStoreRequest::InitAsDefaultInstance() {
  store_ = const_cast< ::metapb::Store*>(
      ::metapb::Store::internal_default_instance());
}

PutStoreRequest::PutStoreRequest(const PutStoreRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.PutStoreRequest)
}

void PutStoreRequest::SharedCtor() {
  _cached_size_ = 0;
  store_ = NULL;
}

PutStoreRequest::~PutStoreRequest() {
  // @@protoc_insertion_point(destructor:pdpb.PutStoreRequest)
  SharedDtor();
}

void PutStoreRequest::SharedDtor() {
  if (this != &PutStoreRequest_default_instance_.get()) {
    delete store_;
  }
}

void PutStoreRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutStoreRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PutStoreRequest_descriptor_;
}

const PutStoreRequest& PutStoreRequest::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PutStoreRequest> PutStoreRequest_default_instance_;

PutStoreRequest* PutStoreRequest::New(::google::protobuf::Arena* arena) const {
  PutStoreRequest* n = new PutStoreRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PutStoreRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.PutStoreRequest)
  if (has_store()) {
    if (store_ != NULL) store_->::metapb::Store::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PutStoreRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.PutStoreRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .metapb.Store store = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_store()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.PutStoreRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.PutStoreRequest)
  return false;
#undef DO_
}

void PutStoreRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.PutStoreRequest)
  // optional .metapb.Store store = 1;
  if (has_store()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->store_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.PutStoreRequest)
}

::google::protobuf::uint8* PutStoreRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.PutStoreRequest)
  // optional .metapb.Store store = 1;
  if (has_store()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->store_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.PutStoreRequest)
  return target;
}

size_t PutStoreRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.PutStoreRequest)
  size_t total_size = 0;

  // optional .metapb.Store store = 1;
  if (has_store()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->store_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutStoreRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.PutStoreRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PutStoreRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PutStoreRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.PutStoreRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.PutStoreRequest)
    UnsafeMergeFrom(*source);
  }
}

void PutStoreRequest::MergeFrom(const PutStoreRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.PutStoreRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PutStoreRequest::UnsafeMergeFrom(const PutStoreRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_store()) {
      mutable_store()->::metapb::Store::MergeFrom(from.store());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void PutStoreRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.PutStoreRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutStoreRequest::CopyFrom(const PutStoreRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.PutStoreRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PutStoreRequest::IsInitialized() const {

  return true;
}

void PutStoreRequest::Swap(PutStoreRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutStoreRequest::InternalSwap(PutStoreRequest* other) {
  std::swap(store_, other->store_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PutStoreRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PutStoreRequest_descriptor_;
  metadata.reflection = PutStoreRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PutStoreRequest

// optional .metapb.Store store = 1;
bool PutStoreRequest::has_store() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PutStoreRequest::set_has_store() {
  _has_bits_[0] |= 0x00000001u;
}
void PutStoreRequest::clear_has_store() {
  _has_bits_[0] &= ~0x00000001u;
}
void PutStoreRequest::clear_store() {
  if (store_ != NULL) store_->::metapb::Store::Clear();
  clear_has_store();
}
const ::metapb::Store& PutStoreRequest::store() const {
  // @@protoc_insertion_point(field_get:pdpb.PutStoreRequest.store)
  return store_ != NULL ? *store_
                         : *::metapb::Store::internal_default_instance();
}
::metapb::Store* PutStoreRequest::mutable_store() {
  set_has_store();
  if (store_ == NULL) {
    store_ = new ::metapb::Store;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.PutStoreRequest.store)
  return store_;
}
::metapb::Store* PutStoreRequest::release_store() {
  // @@protoc_insertion_point(field_release:pdpb.PutStoreRequest.store)
  clear_has_store();
  ::metapb::Store* temp = store_;
  store_ = NULL;
  return temp;
}
void PutStoreRequest::set_allocated_store(::metapb::Store* store) {
  delete store_;
  store_ = store;
  if (store) {
    set_has_store();
  } else {
    clear_has_store();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.PutStoreRequest.store)
}

inline const PutStoreRequest* PutStoreRequest::internal_default_instance() {
  return &PutStoreRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutStoreResponse::PutStoreResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.PutStoreResponse)
}

void PutStoreResponse::InitAsDefaultInstance() {
}

PutStoreResponse::PutStoreResponse(const PutStoreResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.PutStoreResponse)
}

void PutStoreResponse::SharedCtor() {
  _cached_size_ = 0;
}

PutStoreResponse::~PutStoreResponse() {
  // @@protoc_insertion_point(destructor:pdpb.PutStoreResponse)
  SharedDtor();
}

void PutStoreResponse::SharedDtor() {
}

void PutStoreResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutStoreResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PutStoreResponse_descriptor_;
}

const PutStoreResponse& PutStoreResponse::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PutStoreResponse> PutStoreResponse_default_instance_;

PutStoreResponse* PutStoreResponse::New(::google::protobuf::Arena* arena) const {
  PutStoreResponse* n = new PutStoreResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PutStoreResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.PutStoreResponse)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PutStoreResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.PutStoreResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.PutStoreResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.PutStoreResponse)
  return false;
#undef DO_
}

void PutStoreResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.PutStoreResponse)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.PutStoreResponse)
}

::google::protobuf::uint8* PutStoreResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.PutStoreResponse)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.PutStoreResponse)
  return target;
}

size_t PutStoreResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.PutStoreResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutStoreResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.PutStoreResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PutStoreResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PutStoreResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.PutStoreResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.PutStoreResponse)
    UnsafeMergeFrom(*source);
  }
}

void PutStoreResponse::MergeFrom(const PutStoreResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.PutStoreResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PutStoreResponse::UnsafeMergeFrom(const PutStoreResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void PutStoreResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.PutStoreResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutStoreResponse::CopyFrom(const PutStoreResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.PutStoreResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PutStoreResponse::IsInitialized() const {

  return true;
}

void PutStoreResponse::Swap(PutStoreResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutStoreResponse::InternalSwap(PutStoreResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PutStoreResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PutStoreResponse_descriptor_;
  metadata.reflection = PutStoreResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PutStoreResponse

inline const PutStoreResponse* PutStoreResponse::internal_default_instance() {
  return &PutStoreResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PDMember::kNameFieldNumber;
const int PDMember::kClientUrlsFieldNumber;
const int PDMember::kPeerUrlsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PDMember::PDMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.PDMember)
}

void PDMember::InitAsDefaultInstance() {
}

PDMember::PDMember(const PDMember& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.PDMember)
}

void PDMember::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PDMember::~PDMember() {
  // @@protoc_insertion_point(destructor:pdpb.PDMember)
  SharedDtor();
}

void PDMember::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PDMember::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PDMember::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PDMember_descriptor_;
}

const PDMember& PDMember::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PDMember> PDMember_default_instance_;

PDMember* PDMember::New(::google::protobuf::Arena* arena) const {
  PDMember* n = new PDMember;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PDMember::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.PDMember)
  if (has_name()) {
    name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  client_urls_.Clear();
  peer_urls_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PDMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.PDMember)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pdpb.PDMember.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_client_urls;
        break;
      }

      // repeated string client_urls = 2;
      case 2: {
        if (tag == 18) {
         parse_client_urls:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_client_urls()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->client_urls(this->client_urls_size() - 1).data(),
            this->client_urls(this->client_urls_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pdpb.PDMember.client_urls");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_client_urls;
        if (input->ExpectTag(26)) goto parse_peer_urls;
        break;
      }

      // repeated string peer_urls = 3;
      case 3: {
        if (tag == 26) {
         parse_peer_urls:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_peer_urls()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->peer_urls(this->peer_urls_size() - 1).data(),
            this->peer_urls(this->peer_urls_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pdpb.PDMember.peer_urls");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_peer_urls;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.PDMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.PDMember)
  return false;
#undef DO_
}

void PDMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.PDMember)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pdpb.PDMember.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated string client_urls = 2;
  for (int i = 0; i < this->client_urls_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->client_urls(i).data(), this->client_urls(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pdpb.PDMember.client_urls");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->client_urls(i), output);
  }

  // repeated string peer_urls = 3;
  for (int i = 0; i < this->peer_urls_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->peer_urls(i).data(), this->peer_urls(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pdpb.PDMember.peer_urls");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->peer_urls(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.PDMember)
}

::google::protobuf::uint8* PDMember::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.PDMember)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pdpb.PDMember.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated string client_urls = 2;
  for (int i = 0; i < this->client_urls_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->client_urls(i).data(), this->client_urls(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pdpb.PDMember.client_urls");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->client_urls(i), target);
  }

  // repeated string peer_urls = 3;
  for (int i = 0; i < this->peer_urls_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->peer_urls(i).data(), this->peer_urls(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pdpb.PDMember.peer_urls");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->peer_urls(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.PDMember)
  return target;
}

size_t PDMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.PDMember)
  size_t total_size = 0;

  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // repeated string client_urls = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->client_urls_size());
  for (int i = 0; i < this->client_urls_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->client_urls(i));
  }

  // repeated string peer_urls = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->peer_urls_size());
  for (int i = 0; i < this->peer_urls_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->peer_urls(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PDMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.PDMember)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PDMember* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PDMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.PDMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.PDMember)
    UnsafeMergeFrom(*source);
  }
}

void PDMember::MergeFrom(const PDMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.PDMember)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PDMember::UnsafeMergeFrom(const PDMember& from) {
  GOOGLE_DCHECK(&from != this);
  client_urls_.UnsafeMergeFrom(from.client_urls_);
  peer_urls_.UnsafeMergeFrom(from.peer_urls_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void PDMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.PDMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PDMember::CopyFrom(const PDMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.PDMember)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PDMember::IsInitialized() const {

  return true;
}

void PDMember::Swap(PDMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PDMember::InternalSwap(PDMember* other) {
  name_.Swap(&other->name_);
  client_urls_.UnsafeArenaSwap(&other->client_urls_);
  peer_urls_.UnsafeArenaSwap(&other->peer_urls_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PDMember::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PDMember_descriptor_;
  metadata.reflection = PDMember_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PDMember

// optional string name = 1;
bool PDMember::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PDMember::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void PDMember::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void PDMember::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& PDMember::name() const {
  // @@protoc_insertion_point(field_get:pdpb.PDMember.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PDMember::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pdpb.PDMember.name)
}
void PDMember::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pdpb.PDMember.name)
}
void PDMember::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pdpb.PDMember.name)
}
::std::string* PDMember::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:pdpb.PDMember.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PDMember::release_name() {
  // @@protoc_insertion_point(field_release:pdpb.PDMember.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PDMember::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pdpb.PDMember.name)
}

// repeated string client_urls = 2;
int PDMember::client_urls_size() const {
  return client_urls_.size();
}
void PDMember::clear_client_urls() {
  client_urls_.Clear();
}
const ::std::string& PDMember::client_urls(int index) const {
  // @@protoc_insertion_point(field_get:pdpb.PDMember.client_urls)
  return client_urls_.Get(index);
}
::std::string* PDMember::mutable_client_urls(int index) {
  // @@protoc_insertion_point(field_mutable:pdpb.PDMember.client_urls)
  return client_urls_.Mutable(index);
}
void PDMember::set_client_urls(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pdpb.PDMember.client_urls)
  client_urls_.Mutable(index)->assign(value);
}
void PDMember::set_client_urls(int index, const char* value) {
  client_urls_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pdpb.PDMember.client_urls)
}
void PDMember::set_client_urls(int index, const char* value, size_t size) {
  client_urls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pdpb.PDMember.client_urls)
}
::std::string* PDMember::add_client_urls() {
  // @@protoc_insertion_point(field_add_mutable:pdpb.PDMember.client_urls)
  return client_urls_.Add();
}
void PDMember::add_client_urls(const ::std::string& value) {
  client_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pdpb.PDMember.client_urls)
}
void PDMember::add_client_urls(const char* value) {
  client_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pdpb.PDMember.client_urls)
}
void PDMember::add_client_urls(const char* value, size_t size) {
  client_urls_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pdpb.PDMember.client_urls)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
PDMember::client_urls() const {
  // @@protoc_insertion_point(field_list:pdpb.PDMember.client_urls)
  return client_urls_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
PDMember::mutable_client_urls() {
  // @@protoc_insertion_point(field_mutable_list:pdpb.PDMember.client_urls)
  return &client_urls_;
}

// repeated string peer_urls = 3;
int PDMember::peer_urls_size() const {
  return peer_urls_.size();
}
void PDMember::clear_peer_urls() {
  peer_urls_.Clear();
}
const ::std::string& PDMember::peer_urls(int index) const {
  // @@protoc_insertion_point(field_get:pdpb.PDMember.peer_urls)
  return peer_urls_.Get(index);
}
::std::string* PDMember::mutable_peer_urls(int index) {
  // @@protoc_insertion_point(field_mutable:pdpb.PDMember.peer_urls)
  return peer_urls_.Mutable(index);
}
void PDMember::set_peer_urls(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pdpb.PDMember.peer_urls)
  peer_urls_.Mutable(index)->assign(value);
}
void PDMember::set_peer_urls(int index, const char* value) {
  peer_urls_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pdpb.PDMember.peer_urls)
}
void PDMember::set_peer_urls(int index, const char* value, size_t size) {
  peer_urls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pdpb.PDMember.peer_urls)
}
::std::string* PDMember::add_peer_urls() {
  // @@protoc_insertion_point(field_add_mutable:pdpb.PDMember.peer_urls)
  return peer_urls_.Add();
}
void PDMember::add_peer_urls(const ::std::string& value) {
  peer_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pdpb.PDMember.peer_urls)
}
void PDMember::add_peer_urls(const char* value) {
  peer_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pdpb.PDMember.peer_urls)
}
void PDMember::add_peer_urls(const char* value, size_t size) {
  peer_urls_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pdpb.PDMember.peer_urls)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
PDMember::peer_urls() const {
  // @@protoc_insertion_point(field_list:pdpb.PDMember.peer_urls)
  return peer_urls_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
PDMember::mutable_peer_urls() {
  // @@protoc_insertion_point(field_mutable_list:pdpb.PDMember.peer_urls)
  return &peer_urls_;
}

inline const PDMember* PDMember::internal_default_instance() {
  return &PDMember_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPDMembersRequest::GetPDMembersRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.GetPDMembersRequest)
}

void GetPDMembersRequest::InitAsDefaultInstance() {
}

GetPDMembersRequest::GetPDMembersRequest(const GetPDMembersRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.GetPDMembersRequest)
}

void GetPDMembersRequest::SharedCtor() {
  _cached_size_ = 0;
}

GetPDMembersRequest::~GetPDMembersRequest() {
  // @@protoc_insertion_point(destructor:pdpb.GetPDMembersRequest)
  SharedDtor();
}

void GetPDMembersRequest::SharedDtor() {
}

void GetPDMembersRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPDMembersRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetPDMembersRequest_descriptor_;
}

const GetPDMembersRequest& GetPDMembersRequest::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetPDMembersRequest> GetPDMembersRequest_default_instance_;

GetPDMembersRequest* GetPDMembersRequest::New(::google::protobuf::Arena* arena) const {
  GetPDMembersRequest* n = new GetPDMembersRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPDMembersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.GetPDMembersRequest)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetPDMembersRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.GetPDMembersRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.GetPDMembersRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.GetPDMembersRequest)
  return false;
#undef DO_
}

void GetPDMembersRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.GetPDMembersRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.GetPDMembersRequest)
}

::google::protobuf::uint8* GetPDMembersRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.GetPDMembersRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.GetPDMembersRequest)
  return target;
}

size_t GetPDMembersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.GetPDMembersRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPDMembersRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.GetPDMembersRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetPDMembersRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPDMembersRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.GetPDMembersRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.GetPDMembersRequest)
    UnsafeMergeFrom(*source);
  }
}

void GetPDMembersRequest::MergeFrom(const GetPDMembersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.GetPDMembersRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetPDMembersRequest::UnsafeMergeFrom(const GetPDMembersRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void GetPDMembersRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.GetPDMembersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPDMembersRequest::CopyFrom(const GetPDMembersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.GetPDMembersRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetPDMembersRequest::IsInitialized() const {

  return true;
}

void GetPDMembersRequest::Swap(GetPDMembersRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPDMembersRequest::InternalSwap(GetPDMembersRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPDMembersRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetPDMembersRequest_descriptor_;
  metadata.reflection = GetPDMembersRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPDMembersRequest

inline const GetPDMembersRequest* GetPDMembersRequest::internal_default_instance() {
  return &GetPDMembersRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPDMembersResponse::kMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPDMembersResponse::GetPDMembersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.GetPDMembersResponse)
}

void GetPDMembersResponse::InitAsDefaultInstance() {
}

GetPDMembersResponse::GetPDMembersResponse(const GetPDMembersResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.GetPDMembersResponse)
}

void GetPDMembersResponse::SharedCtor() {
  _cached_size_ = 0;
}

GetPDMembersResponse::~GetPDMembersResponse() {
  // @@protoc_insertion_point(destructor:pdpb.GetPDMembersResponse)
  SharedDtor();
}

void GetPDMembersResponse::SharedDtor() {
}

void GetPDMembersResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPDMembersResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetPDMembersResponse_descriptor_;
}

const GetPDMembersResponse& GetPDMembersResponse::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetPDMembersResponse> GetPDMembersResponse_default_instance_;

GetPDMembersResponse* GetPDMembersResponse::New(::google::protobuf::Arena* arena) const {
  GetPDMembersResponse* n = new GetPDMembersResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPDMembersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.GetPDMembersResponse)
  members_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GetPDMembersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.GetPDMembersResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pdpb.PDMember members = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_members:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_members;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.GetPDMembersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.GetPDMembersResponse)
  return false;
#undef DO_
}

void GetPDMembersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.GetPDMembersResponse)
  // repeated .pdpb.PDMember members = 1;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->members(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.GetPDMembersResponse)
}

::google::protobuf::uint8* GetPDMembersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.GetPDMembersResponse)
  // repeated .pdpb.PDMember members = 1;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->members(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.GetPDMembersResponse)
  return target;
}

size_t GetPDMembersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.GetPDMembersResponse)
  size_t total_size = 0;

  // repeated .pdpb.PDMember members = 1;
  {
    unsigned int count = this->members_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->members(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPDMembersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.GetPDMembersResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetPDMembersResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPDMembersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.GetPDMembersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.GetPDMembersResponse)
    UnsafeMergeFrom(*source);
  }
}

void GetPDMembersResponse::MergeFrom(const GetPDMembersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.GetPDMembersResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetPDMembersResponse::UnsafeMergeFrom(const GetPDMembersResponse& from) {
  GOOGLE_DCHECK(&from != this);
  members_.MergeFrom(from.members_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void GetPDMembersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.GetPDMembersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPDMembersResponse::CopyFrom(const GetPDMembersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.GetPDMembersResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetPDMembersResponse::IsInitialized() const {

  return true;
}

void GetPDMembersResponse::Swap(GetPDMembersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPDMembersResponse::InternalSwap(GetPDMembersResponse* other) {
  members_.UnsafeArenaSwap(&other->members_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPDMembersResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetPDMembersResponse_descriptor_;
  metadata.reflection = GetPDMembersResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPDMembersResponse

// repeated .pdpb.PDMember members = 1;
int GetPDMembersResponse::members_size() const {
  return members_.size();
}
void GetPDMembersResponse::clear_members() {
  members_.Clear();
}
const ::pdpb::PDMember& GetPDMembersResponse::members(int index) const {
  // @@protoc_insertion_point(field_get:pdpb.GetPDMembersResponse.members)
  return members_.Get(index);
}
::pdpb::PDMember* GetPDMembersResponse::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:pdpb.GetPDMembersResponse.members)
  return members_.Mutable(index);
}
::pdpb::PDMember* GetPDMembersResponse::add_members() {
  // @@protoc_insertion_point(field_add:pdpb.GetPDMembersResponse.members)
  return members_.Add();
}
::google::protobuf::RepeatedPtrField< ::pdpb::PDMember >*
GetPDMembersResponse::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:pdpb.GetPDMembersResponse.members)
  return &members_;
}
const ::google::protobuf::RepeatedPtrField< ::pdpb::PDMember >&
GetPDMembersResponse::members() const {
  // @@protoc_insertion_point(field_list:pdpb.GetPDMembersResponse.members)
  return members_;
}

inline const GetPDMembersResponse* GetPDMembersResponse::internal_default_instance() {
  return &GetPDMembersResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PeerStats::kPeerFieldNumber;
const int PeerStats::kDownSecondsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PeerStats::PeerStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.PeerStats)
}

void PeerStats::InitAsDefaultInstance() {
  peer_ = const_cast< ::metapb::Peer*>(
      ::metapb::Peer::internal_default_instance());
}

PeerStats::PeerStats(const PeerStats& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.PeerStats)
}

void PeerStats::SharedCtor() {
  _cached_size_ = 0;
  peer_ = NULL;
  down_seconds_ = GOOGLE_ULONGLONG(0);
}

PeerStats::~PeerStats() {
  // @@protoc_insertion_point(destructor:pdpb.PeerStats)
  SharedDtor();
}

void PeerStats::SharedDtor() {
  if (this != &PeerStats_default_instance_.get()) {
    delete peer_;
  }
}

void PeerStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PeerStats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PeerStats_descriptor_;
}

const PeerStats& PeerStats::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PeerStats> PeerStats_default_instance_;

PeerStats* PeerStats::New(::google::protobuf::Arena* arena) const {
  PeerStats* n = new PeerStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PeerStats::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.PeerStats)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_peer()) {
      if (peer_ != NULL) peer_->::metapb::Peer::Clear();
    }
    down_seconds_ = GOOGLE_ULONGLONG(0);
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PeerStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.PeerStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .metapb.Peer peer = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_peer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_down_seconds;
        break;
      }

      // optional uint64 down_seconds = 2;
      case 2: {
        if (tag == 16) {
         parse_down_seconds:
          set_has_down_seconds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &down_seconds_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.PeerStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.PeerStats)
  return false;
#undef DO_
}

void PeerStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.PeerStats)
  // optional .metapb.Peer peer = 1;
  if (has_peer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->peer_, output);
  }

  // optional uint64 down_seconds = 2;
  if (has_down_seconds()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->down_seconds(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.PeerStats)
}

::google::protobuf::uint8* PeerStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.PeerStats)
  // optional .metapb.Peer peer = 1;
  if (has_peer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->peer_, false, target);
  }

  // optional uint64 down_seconds = 2;
  if (has_down_seconds()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->down_seconds(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.PeerStats)
  return target;
}

size_t PeerStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.PeerStats)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .metapb.Peer peer = 1;
    if (has_peer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->peer_);
    }

    // optional uint64 down_seconds = 2;
    if (has_down_seconds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->down_seconds());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PeerStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.PeerStats)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PeerStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PeerStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.PeerStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.PeerStats)
    UnsafeMergeFrom(*source);
  }
}

void PeerStats::MergeFrom(const PeerStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.PeerStats)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PeerStats::UnsafeMergeFrom(const PeerStats& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_peer()) {
      mutable_peer()->::metapb::Peer::MergeFrom(from.peer());
    }
    if (from.has_down_seconds()) {
      set_down_seconds(from.down_seconds());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void PeerStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.PeerStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PeerStats::CopyFrom(const PeerStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.PeerStats)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PeerStats::IsInitialized() const {

  return true;
}

void PeerStats::Swap(PeerStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PeerStats::InternalSwap(PeerStats* other) {
  std::swap(peer_, other->peer_);
  std::swap(down_seconds_, other->down_seconds_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PeerStats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PeerStats_descriptor_;
  metadata.reflection = PeerStats_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PeerStats

// optional .metapb.Peer peer = 1;
bool PeerStats::has_peer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PeerStats::set_has_peer() {
  _has_bits_[0] |= 0x00000001u;
}
void PeerStats::clear_has_peer() {
  _has_bits_[0] &= ~0x00000001u;
}
void PeerStats::clear_peer() {
  if (peer_ != NULL) peer_->::metapb::Peer::Clear();
  clear_has_peer();
}
const ::metapb::Peer& PeerStats::peer() const {
  // @@protoc_insertion_point(field_get:pdpb.PeerStats.peer)
  return peer_ != NULL ? *peer_
                         : *::metapb::Peer::internal_default_instance();
}
::metapb::Peer* PeerStats::mutable_peer() {
  set_has_peer();
  if (peer_ == NULL) {
    peer_ = new ::metapb::Peer;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.PeerStats.peer)
  return peer_;
}
::metapb::Peer* PeerStats::release_peer() {
  // @@protoc_insertion_point(field_release:pdpb.PeerStats.peer)
  clear_has_peer();
  ::metapb::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void PeerStats::set_allocated_peer(::metapb::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    set_has_peer();
  } else {
    clear_has_peer();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.PeerStats.peer)
}

// optional uint64 down_seconds = 2;
bool PeerStats::has_down_seconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PeerStats::set_has_down_seconds() {
  _has_bits_[0] |= 0x00000002u;
}
void PeerStats::clear_has_down_seconds() {
  _has_bits_[0] &= ~0x00000002u;
}
void PeerStats::clear_down_seconds() {
  down_seconds_ = GOOGLE_ULONGLONG(0);
  clear_has_down_seconds();
}
::google::protobuf::uint64 PeerStats::down_seconds() const {
  // @@protoc_insertion_point(field_get:pdpb.PeerStats.down_seconds)
  return down_seconds_;
}
void PeerStats::set_down_seconds(::google::protobuf::uint64 value) {
  set_has_down_seconds();
  down_seconds_ = value;
  // @@protoc_insertion_point(field_set:pdpb.PeerStats.down_seconds)
}

inline const PeerStats* PeerStats::internal_default_instance() {
  return &PeerStats_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionHeartbeatRequest::kRegionFieldNumber;
const int RegionHeartbeatRequest::kLeaderFieldNumber;
const int RegionHeartbeatRequest::kDownPeersFieldNumber;
const int RegionHeartbeatRequest::kPendingPeersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionHeartbeatRequest::RegionHeartbeatRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.RegionHeartbeatRequest)
}

void RegionHeartbeatRequest::InitAsDefaultInstance() {
  region_ = const_cast< ::metapb::Region*>(
      ::metapb::Region::internal_default_instance());
  leader_ = const_cast< ::metapb::Peer*>(
      ::metapb::Peer::internal_default_instance());
}

RegionHeartbeatRequest::RegionHeartbeatRequest(const RegionHeartbeatRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.RegionHeartbeatRequest)
}

void RegionHeartbeatRequest::SharedCtor() {
  _cached_size_ = 0;
  region_ = NULL;
  leader_ = NULL;
}

RegionHeartbeatRequest::~RegionHeartbeatRequest() {
  // @@protoc_insertion_point(destructor:pdpb.RegionHeartbeatRequest)
  SharedDtor();
}

void RegionHeartbeatRequest::SharedDtor() {
  if (this != &RegionHeartbeatRequest_default_instance_.get()) {
    delete region_;
    delete leader_;
  }
}

void RegionHeartbeatRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegionHeartbeatRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegionHeartbeatRequest_descriptor_;
}

const RegionHeartbeatRequest& RegionHeartbeatRequest::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RegionHeartbeatRequest> RegionHeartbeatRequest_default_instance_;

RegionHeartbeatRequest* RegionHeartbeatRequest::New(::google::protobuf::Arena* arena) const {
  RegionHeartbeatRequest* n = new RegionHeartbeatRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegionHeartbeatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.RegionHeartbeatRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_region()) {
      if (region_ != NULL) region_->::metapb::Region::Clear();
    }
    if (has_leader()) {
      if (leader_ != NULL) leader_->::metapb::Peer::Clear();
    }
  }
  down_peers_.Clear();
  pending_peers_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RegionHeartbeatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.RegionHeartbeatRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .metapb.Region region = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_region()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_leader;
        break;
      }

      // optional .metapb.Peer leader = 2;
      case 2: {
        if (tag == 18) {
         parse_leader:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_leader()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_down_peers;
        break;
      }

      // repeated .pdpb.PeerStats down_peers = 3;
      case 3: {
        if (tag == 26) {
         parse_down_peers:
          DO_(input->IncrementRecursionDepth());
         parse_loop_down_peers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_down_peers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_down_peers;
        if (input->ExpectTag(34)) goto parse_loop_pending_peers;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .metapb.Peer pending_peers = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_pending_peers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_pending_peers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_pending_peers;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.RegionHeartbeatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.RegionHeartbeatRequest)
  return false;
#undef DO_
}

void RegionHeartbeatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.RegionHeartbeatRequest)
  // optional .metapb.Region region = 1;
  if (has_region()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->region_, output);
  }

  // optional .metapb.Peer leader = 2;
  if (has_leader()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->leader_, output);
  }

  // repeated .pdpb.PeerStats down_peers = 3;
  for (unsigned int i = 0, n = this->down_peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->down_peers(i), output);
  }

  // repeated .metapb.Peer pending_peers = 4;
  for (unsigned int i = 0, n = this->pending_peers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->pending_peers(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.RegionHeartbeatRequest)
}

::google::protobuf::uint8* RegionHeartbeatRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.RegionHeartbeatRequest)
  // optional .metapb.Region region = 1;
  if (has_region()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->region_, false, target);
  }

  // optional .metapb.Peer leader = 2;
  if (has_leader()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->leader_, false, target);
  }

  // repeated .pdpb.PeerStats down_peers = 3;
  for (unsigned int i = 0, n = this->down_peers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->down_peers(i), false, target);
  }

  // repeated .metapb.Peer pending_peers = 4;
  for (unsigned int i = 0, n = this->pending_peers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->pending_peers(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.RegionHeartbeatRequest)
  return target;
}

size_t RegionHeartbeatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.RegionHeartbeatRequest)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .metapb.Region region = 1;
    if (has_region()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->region_);
    }

    // optional .metapb.Peer leader = 2;
    if (has_leader()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->leader_);
    }

  }
  // repeated .pdpb.PeerStats down_peers = 3;
  {
    unsigned int count = this->down_peers_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->down_peers(i));
    }
  }

  // repeated .metapb.Peer pending_peers = 4;
  {
    unsigned int count = this->pending_peers_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pending_peers(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegionHeartbeatRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.RegionHeartbeatRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RegionHeartbeatRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionHeartbeatRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.RegionHeartbeatRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.RegionHeartbeatRequest)
    UnsafeMergeFrom(*source);
  }
}

void RegionHeartbeatRequest::MergeFrom(const RegionHeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.RegionHeartbeatRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RegionHeartbeatRequest::UnsafeMergeFrom(const RegionHeartbeatRequest& from) {
  GOOGLE_DCHECK(&from != this);
  down_peers_.MergeFrom(from.down_peers_);
  pending_peers_.MergeFrom(from.pending_peers_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_region()) {
      mutable_region()->::metapb::Region::MergeFrom(from.region());
    }
    if (from.has_leader()) {
      mutable_leader()->::metapb::Peer::MergeFrom(from.leader());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RegionHeartbeatRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.RegionHeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionHeartbeatRequest::CopyFrom(const RegionHeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.RegionHeartbeatRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RegionHeartbeatRequest::IsInitialized() const {

  return true;
}

void RegionHeartbeatRequest::Swap(RegionHeartbeatRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionHeartbeatRequest::InternalSwap(RegionHeartbeatRequest* other) {
  std::swap(region_, other->region_);
  std::swap(leader_, other->leader_);
  down_peers_.UnsafeArenaSwap(&other->down_peers_);
  pending_peers_.UnsafeArenaSwap(&other->pending_peers_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegionHeartbeatRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegionHeartbeatRequest_descriptor_;
  metadata.reflection = RegionHeartbeatRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegionHeartbeatRequest

// optional .metapb.Region region = 1;
bool RegionHeartbeatRequest::has_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RegionHeartbeatRequest::set_has_region() {
  _has_bits_[0] |= 0x00000001u;
}
void RegionHeartbeatRequest::clear_has_region() {
  _has_bits_[0] &= ~0x00000001u;
}
void RegionHeartbeatRequest::clear_region() {
  if (region_ != NULL) region_->::metapb::Region::Clear();
  clear_has_region();
}
const ::metapb::Region& RegionHeartbeatRequest::region() const {
  // @@protoc_insertion_point(field_get:pdpb.RegionHeartbeatRequest.region)
  return region_ != NULL ? *region_
                         : *::metapb::Region::internal_default_instance();
}
::metapb::Region* RegionHeartbeatRequest::mutable_region() {
  set_has_region();
  if (region_ == NULL) {
    region_ = new ::metapb::Region;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.RegionHeartbeatRequest.region)
  return region_;
}
::metapb::Region* RegionHeartbeatRequest::release_region() {
  // @@protoc_insertion_point(field_release:pdpb.RegionHeartbeatRequest.region)
  clear_has_region();
  ::metapb::Region* temp = region_;
  region_ = NULL;
  return temp;
}
void RegionHeartbeatRequest::set_allocated_region(::metapb::Region* region) {
  delete region_;
  region_ = region;
  if (region) {
    set_has_region();
  } else {
    clear_has_region();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.RegionHeartbeatRequest.region)
}

// optional .metapb.Peer leader = 2;
bool RegionHeartbeatRequest::has_leader() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RegionHeartbeatRequest::set_has_leader() {
  _has_bits_[0] |= 0x00000002u;
}
void RegionHeartbeatRequest::clear_has_leader() {
  _has_bits_[0] &= ~0x00000002u;
}
void RegionHeartbeatRequest::clear_leader() {
  if (leader_ != NULL) leader_->::metapb::Peer::Clear();
  clear_has_leader();
}
const ::metapb::Peer& RegionHeartbeatRequest::leader() const {
  // @@protoc_insertion_point(field_get:pdpb.RegionHeartbeatRequest.leader)
  return leader_ != NULL ? *leader_
                         : *::metapb::Peer::internal_default_instance();
}
::metapb::Peer* RegionHeartbeatRequest::mutable_leader() {
  set_has_leader();
  if (leader_ == NULL) {
    leader_ = new ::metapb::Peer;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.RegionHeartbeatRequest.leader)
  return leader_;
}
::metapb::Peer* RegionHeartbeatRequest::release_leader() {
  // @@protoc_insertion_point(field_release:pdpb.RegionHeartbeatRequest.leader)
  clear_has_leader();
  ::metapb::Peer* temp = leader_;
  leader_ = NULL;
  return temp;
}
void RegionHeartbeatRequest::set_allocated_leader(::metapb::Peer* leader) {
  delete leader_;
  leader_ = leader;
  if (leader) {
    set_has_leader();
  } else {
    clear_has_leader();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.RegionHeartbeatRequest.leader)
}

// repeated .pdpb.PeerStats down_peers = 3;
int RegionHeartbeatRequest::down_peers_size() const {
  return down_peers_.size();
}
void RegionHeartbeatRequest::clear_down_peers() {
  down_peers_.Clear();
}
const ::pdpb::PeerStats& RegionHeartbeatRequest::down_peers(int index) const {
  // @@protoc_insertion_point(field_get:pdpb.RegionHeartbeatRequest.down_peers)
  return down_peers_.Get(index);
}
::pdpb::PeerStats* RegionHeartbeatRequest::mutable_down_peers(int index) {
  // @@protoc_insertion_point(field_mutable:pdpb.RegionHeartbeatRequest.down_peers)
  return down_peers_.Mutable(index);
}
::pdpb::PeerStats* RegionHeartbeatRequest::add_down_peers() {
  // @@protoc_insertion_point(field_add:pdpb.RegionHeartbeatRequest.down_peers)
  return down_peers_.Add();
}
::google::protobuf::RepeatedPtrField< ::pdpb::PeerStats >*
RegionHeartbeatRequest::mutable_down_peers() {
  // @@protoc_insertion_point(field_mutable_list:pdpb.RegionHeartbeatRequest.down_peers)
  return &down_peers_;
}
const ::google::protobuf::RepeatedPtrField< ::pdpb::PeerStats >&
RegionHeartbeatRequest::down_peers() const {
  // @@protoc_insertion_point(field_list:pdpb.RegionHeartbeatRequest.down_peers)
  return down_peers_;
}

// repeated .metapb.Peer pending_peers = 4;
int RegionHeartbeatRequest::pending_peers_size() const {
  return pending_peers_.size();
}
void RegionHeartbeatRequest::clear_pending_peers() {
  pending_peers_.Clear();
}
const ::metapb::Peer& RegionHeartbeatRequest::pending_peers(int index) const {
  // @@protoc_insertion_point(field_get:pdpb.RegionHeartbeatRequest.pending_peers)
  return pending_peers_.Get(index);
}
::metapb::Peer* RegionHeartbeatRequest::mutable_pending_peers(int index) {
  // @@protoc_insertion_point(field_mutable:pdpb.RegionHeartbeatRequest.pending_peers)
  return pending_peers_.Mutable(index);
}
::metapb::Peer* RegionHeartbeatRequest::add_pending_peers() {
  // @@protoc_insertion_point(field_add:pdpb.RegionHeartbeatRequest.pending_peers)
  return pending_peers_.Add();
}
::google::protobuf::RepeatedPtrField< ::metapb::Peer >*
RegionHeartbeatRequest::mutable_pending_peers() {
  // @@protoc_insertion_point(field_mutable_list:pdpb.RegionHeartbeatRequest.pending_peers)
  return &pending_peers_;
}
const ::google::protobuf::RepeatedPtrField< ::metapb::Peer >&
RegionHeartbeatRequest::pending_peers() const {
  // @@protoc_insertion_point(field_list:pdpb.RegionHeartbeatRequest.pending_peers)
  return pending_peers_;
}

inline const RegionHeartbeatRequest* RegionHeartbeatRequest::internal_default_instance() {
  return &RegionHeartbeatRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangePeer::kChangeTypeFieldNumber;
const int ChangePeer::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangePeer::ChangePeer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.ChangePeer)
}

void ChangePeer::InitAsDefaultInstance() {
  peer_ = const_cast< ::metapb::Peer*>(
      ::metapb::Peer::internal_default_instance());
}

ChangePeer::ChangePeer(const ChangePeer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.ChangePeer)
}

void ChangePeer::SharedCtor() {
  _cached_size_ = 0;
  peer_ = NULL;
  change_type_ = 0;
}

ChangePeer::~ChangePeer() {
  // @@protoc_insertion_point(destructor:pdpb.ChangePeer)
  SharedDtor();
}

void ChangePeer::SharedDtor() {
  if (this != &ChangePeer_default_instance_.get()) {
    delete peer_;
  }
}

void ChangePeer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangePeer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChangePeer_descriptor_;
}

const ChangePeer& ChangePeer::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ChangePeer> ChangePeer_default_instance_;

ChangePeer* ChangePeer::New(::google::protobuf::Arena* arena) const {
  ChangePeer* n = new ChangePeer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangePeer::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.ChangePeer)
  if (_has_bits_[0 / 32] & 3u) {
    change_type_ = 0;
    if (has_peer()) {
      if (peer_ != NULL) peer_->::metapb::Peer::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ChangePeer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.ChangePeer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .eraftpb.ConfChangeType change_type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::eraftpb::ConfChangeType_IsValid(value)) {
            set_change_type(static_cast< ::eraftpb::ConfChangeType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_peer;
        break;
      }

      // optional .metapb.Peer peer = 2;
      case 2: {
        if (tag == 18) {
         parse_peer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_peer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.ChangePeer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.ChangePeer)
  return false;
#undef DO_
}

void ChangePeer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.ChangePeer)
  // optional .eraftpb.ConfChangeType change_type = 1;
  if (has_change_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->change_type(), output);
  }

  // optional .metapb.Peer peer = 2;
  if (has_peer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->peer_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.ChangePeer)
}

::google::protobuf::uint8* ChangePeer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.ChangePeer)
  // optional .eraftpb.ConfChangeType change_type = 1;
  if (has_change_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->change_type(), target);
  }

  // optional .metapb.Peer peer = 2;
  if (has_peer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->peer_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.ChangePeer)
  return target;
}

size_t ChangePeer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.ChangePeer)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .eraftpb.ConfChangeType change_type = 1;
    if (has_change_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->change_type());
    }

    // optional .metapb.Peer peer = 2;
    if (has_peer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->peer_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangePeer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.ChangePeer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ChangePeer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangePeer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.ChangePeer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.ChangePeer)
    UnsafeMergeFrom(*source);
  }
}

void ChangePeer::MergeFrom(const ChangePeer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.ChangePeer)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ChangePeer::UnsafeMergeFrom(const ChangePeer& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_change_type()) {
      set_change_type(from.change_type());
    }
    if (from.has_peer()) {
      mutable_peer()->::metapb::Peer::MergeFrom(from.peer());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ChangePeer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.ChangePeer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangePeer::CopyFrom(const ChangePeer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.ChangePeer)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ChangePeer::IsInitialized() const {

  return true;
}

void ChangePeer::Swap(ChangePeer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangePeer::InternalSwap(ChangePeer* other) {
  std::swap(change_type_, other->change_type_);
  std::swap(peer_, other->peer_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangePeer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChangePeer_descriptor_;
  metadata.reflection = ChangePeer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChangePeer

// optional .eraftpb.ConfChangeType change_type = 1;
bool ChangePeer::has_change_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ChangePeer::set_has_change_type() {
  _has_bits_[0] |= 0x00000001u;
}
void ChangePeer::clear_has_change_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void ChangePeer::clear_change_type() {
  change_type_ = 0;
  clear_has_change_type();
}
::eraftpb::ConfChangeType ChangePeer::change_type() const {
  // @@protoc_insertion_point(field_get:pdpb.ChangePeer.change_type)
  return static_cast< ::eraftpb::ConfChangeType >(change_type_);
}
void ChangePeer::set_change_type(::eraftpb::ConfChangeType value) {
  assert(::eraftpb::ConfChangeType_IsValid(value));
  set_has_change_type();
  change_type_ = value;
  // @@protoc_insertion_point(field_set:pdpb.ChangePeer.change_type)
}

// optional .metapb.Peer peer = 2;
bool ChangePeer::has_peer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ChangePeer::set_has_peer() {
  _has_bits_[0] |= 0x00000002u;
}
void ChangePeer::clear_has_peer() {
  _has_bits_[0] &= ~0x00000002u;
}
void ChangePeer::clear_peer() {
  if (peer_ != NULL) peer_->::metapb::Peer::Clear();
  clear_has_peer();
}
const ::metapb::Peer& ChangePeer::peer() const {
  // @@protoc_insertion_point(field_get:pdpb.ChangePeer.peer)
  return peer_ != NULL ? *peer_
                         : *::metapb::Peer::internal_default_instance();
}
::metapb::Peer* ChangePeer::mutable_peer() {
  set_has_peer();
  if (peer_ == NULL) {
    peer_ = new ::metapb::Peer;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.ChangePeer.peer)
  return peer_;
}
::metapb::Peer* ChangePeer::release_peer() {
  // @@protoc_insertion_point(field_release:pdpb.ChangePeer.peer)
  clear_has_peer();
  ::metapb::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void ChangePeer::set_allocated_peer(::metapb::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    set_has_peer();
  } else {
    clear_has_peer();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.ChangePeer.peer)
}

inline const ChangePeer* ChangePeer::internal_default_instance() {
  return &ChangePeer_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferLeader::kPeerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferLeader::TransferLeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.TransferLeader)
}

void TransferLeader::InitAsDefaultInstance() {
  peer_ = const_cast< ::metapb::Peer*>(
      ::metapb::Peer::internal_default_instance());
}

TransferLeader::TransferLeader(const TransferLeader& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.TransferLeader)
}

void TransferLeader::SharedCtor() {
  _cached_size_ = 0;
  peer_ = NULL;
}

TransferLeader::~TransferLeader() {
  // @@protoc_insertion_point(destructor:pdpb.TransferLeader)
  SharedDtor();
}

void TransferLeader::SharedDtor() {
  if (this != &TransferLeader_default_instance_.get()) {
    delete peer_;
  }
}

void TransferLeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferLeader::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransferLeader_descriptor_;
}

const TransferLeader& TransferLeader::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TransferLeader> TransferLeader_default_instance_;

TransferLeader* TransferLeader::New(::google::protobuf::Arena* arena) const {
  TransferLeader* n = new TransferLeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransferLeader::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.TransferLeader)
  if (has_peer()) {
    if (peer_ != NULL) peer_->::metapb::Peer::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TransferLeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.TransferLeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .metapb.Peer peer = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_peer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.TransferLeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.TransferLeader)
  return false;
#undef DO_
}

void TransferLeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.TransferLeader)
  // optional .metapb.Peer peer = 1;
  if (has_peer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->peer_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.TransferLeader)
}

::google::protobuf::uint8* TransferLeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.TransferLeader)
  // optional .metapb.Peer peer = 1;
  if (has_peer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->peer_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.TransferLeader)
  return target;
}

size_t TransferLeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.TransferLeader)
  size_t total_size = 0;

  // optional .metapb.Peer peer = 1;
  if (has_peer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->peer_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferLeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.TransferLeader)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TransferLeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferLeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.TransferLeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.TransferLeader)
    UnsafeMergeFrom(*source);
  }
}

void TransferLeader::MergeFrom(const TransferLeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.TransferLeader)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TransferLeader::UnsafeMergeFrom(const TransferLeader& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_peer()) {
      mutable_peer()->::metapb::Peer::MergeFrom(from.peer());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TransferLeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.TransferLeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferLeader::CopyFrom(const TransferLeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.TransferLeader)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TransferLeader::IsInitialized() const {

  return true;
}

void TransferLeader::Swap(TransferLeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferLeader::InternalSwap(TransferLeader* other) {
  std::swap(peer_, other->peer_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransferLeader::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransferLeader_descriptor_;
  metadata.reflection = TransferLeader_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransferLeader

// optional .metapb.Peer peer = 1;
bool TransferLeader::has_peer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TransferLeader::set_has_peer() {
  _has_bits_[0] |= 0x00000001u;
}
void TransferLeader::clear_has_peer() {
  _has_bits_[0] &= ~0x00000001u;
}
void TransferLeader::clear_peer() {
  if (peer_ != NULL) peer_->::metapb::Peer::Clear();
  clear_has_peer();
}
const ::metapb::Peer& TransferLeader::peer() const {
  // @@protoc_insertion_point(field_get:pdpb.TransferLeader.peer)
  return peer_ != NULL ? *peer_
                         : *::metapb::Peer::internal_default_instance();
}
::metapb::Peer* TransferLeader::mutable_peer() {
  set_has_peer();
  if (peer_ == NULL) {
    peer_ = new ::metapb::Peer;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.TransferLeader.peer)
  return peer_;
}
::metapb::Peer* TransferLeader::release_peer() {
  // @@protoc_insertion_point(field_release:pdpb.TransferLeader.peer)
  clear_has_peer();
  ::metapb::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
void TransferLeader::set_allocated_peer(::metapb::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    set_has_peer();
  } else {
    clear_has_peer();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.TransferLeader.peer)
}

inline const TransferLeader* TransferLeader::internal_default_instance() {
  return &TransferLeader_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegionHeartbeatResponse::kChangePeerFieldNumber;
const int RegionHeartbeatResponse::kTransferLeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegionHeartbeatResponse::RegionHeartbeatResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.RegionHeartbeatResponse)
}

void RegionHeartbeatResponse::InitAsDefaultInstance() {
  change_peer_ = const_cast< ::pdpb::ChangePeer*>(
      ::pdpb::ChangePeer::internal_default_instance());
  transfer_leader_ = const_cast< ::pdpb::TransferLeader*>(
      ::pdpb::TransferLeader::internal_default_instance());
}

RegionHeartbeatResponse::RegionHeartbeatResponse(const RegionHeartbeatResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.RegionHeartbeatResponse)
}

void RegionHeartbeatResponse::SharedCtor() {
  _cached_size_ = 0;
  change_peer_ = NULL;
  transfer_leader_ = NULL;
}

RegionHeartbeatResponse::~RegionHeartbeatResponse() {
  // @@protoc_insertion_point(destructor:pdpb.RegionHeartbeatResponse)
  SharedDtor();
}

void RegionHeartbeatResponse::SharedDtor() {
  if (this != &RegionHeartbeatResponse_default_instance_.get()) {
    delete change_peer_;
    delete transfer_leader_;
  }
}

void RegionHeartbeatResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegionHeartbeatResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegionHeartbeatResponse_descriptor_;
}

const RegionHeartbeatResponse& RegionHeartbeatResponse::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RegionHeartbeatResponse> RegionHeartbeatResponse_default_instance_;

RegionHeartbeatResponse* RegionHeartbeatResponse::New(::google::protobuf::Arena* arena) const {
  RegionHeartbeatResponse* n = new RegionHeartbeatResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegionHeartbeatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.RegionHeartbeatResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_change_peer()) {
      if (change_peer_ != NULL) change_peer_->::pdpb::ChangePeer::Clear();
    }
    if (has_transfer_leader()) {
      if (transfer_leader_ != NULL) transfer_leader_->::pdpb::TransferLeader::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RegionHeartbeatResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.RegionHeartbeatResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pdpb.ChangePeer change_peer = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_change_peer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_transfer_leader;
        break;
      }

      // optional .pdpb.TransferLeader transfer_leader = 2;
      case 2: {
        if (tag == 18) {
         parse_transfer_leader:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_transfer_leader()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.RegionHeartbeatResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.RegionHeartbeatResponse)
  return false;
#undef DO_
}

void RegionHeartbeatResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.RegionHeartbeatResponse)
  // optional .pdpb.ChangePeer change_peer = 1;
  if (has_change_peer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->change_peer_, output);
  }

  // optional .pdpb.TransferLeader transfer_leader = 2;
  if (has_transfer_leader()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->transfer_leader_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.RegionHeartbeatResponse)
}

::google::protobuf::uint8* RegionHeartbeatResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.RegionHeartbeatResponse)
  // optional .pdpb.ChangePeer change_peer = 1;
  if (has_change_peer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->change_peer_, false, target);
  }

  // optional .pdpb.TransferLeader transfer_leader = 2;
  if (has_transfer_leader()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->transfer_leader_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.RegionHeartbeatResponse)
  return target;
}

size_t RegionHeartbeatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.RegionHeartbeatResponse)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .pdpb.ChangePeer change_peer = 1;
    if (has_change_peer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->change_peer_);
    }

    // optional .pdpb.TransferLeader transfer_leader = 2;
    if (has_transfer_leader()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->transfer_leader_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegionHeartbeatResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.RegionHeartbeatResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RegionHeartbeatResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegionHeartbeatResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.RegionHeartbeatResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.RegionHeartbeatResponse)
    UnsafeMergeFrom(*source);
  }
}

void RegionHeartbeatResponse::MergeFrom(const RegionHeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.RegionHeartbeatResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RegionHeartbeatResponse::UnsafeMergeFrom(const RegionHeartbeatResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_change_peer()) {
      mutable_change_peer()->::pdpb::ChangePeer::MergeFrom(from.change_peer());
    }
    if (from.has_transfer_leader()) {
      mutable_transfer_leader()->::pdpb::TransferLeader::MergeFrom(from.transfer_leader());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RegionHeartbeatResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.RegionHeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegionHeartbeatResponse::CopyFrom(const RegionHeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.RegionHeartbeatResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RegionHeartbeatResponse::IsInitialized() const {

  return true;
}

void RegionHeartbeatResponse::Swap(RegionHeartbeatResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegionHeartbeatResponse::InternalSwap(RegionHeartbeatResponse* other) {
  std::swap(change_peer_, other->change_peer_);
  std::swap(transfer_leader_, other->transfer_leader_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegionHeartbeatResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegionHeartbeatResponse_descriptor_;
  metadata.reflection = RegionHeartbeatResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegionHeartbeatResponse

// optional .pdpb.ChangePeer change_peer = 1;
bool RegionHeartbeatResponse::has_change_peer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RegionHeartbeatResponse::set_has_change_peer() {
  _has_bits_[0] |= 0x00000001u;
}
void RegionHeartbeatResponse::clear_has_change_peer() {
  _has_bits_[0] &= ~0x00000001u;
}
void RegionHeartbeatResponse::clear_change_peer() {
  if (change_peer_ != NULL) change_peer_->::pdpb::ChangePeer::Clear();
  clear_has_change_peer();
}
const ::pdpb::ChangePeer& RegionHeartbeatResponse::change_peer() const {
  // @@protoc_insertion_point(field_get:pdpb.RegionHeartbeatResponse.change_peer)
  return change_peer_ != NULL ? *change_peer_
                         : *::pdpb::ChangePeer::internal_default_instance();
}
::pdpb::ChangePeer* RegionHeartbeatResponse::mutable_change_peer() {
  set_has_change_peer();
  if (change_peer_ == NULL) {
    change_peer_ = new ::pdpb::ChangePeer;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.RegionHeartbeatResponse.change_peer)
  return change_peer_;
}
::pdpb::ChangePeer* RegionHeartbeatResponse::release_change_peer() {
  // @@protoc_insertion_point(field_release:pdpb.RegionHeartbeatResponse.change_peer)
  clear_has_change_peer();
  ::pdpb::ChangePeer* temp = change_peer_;
  change_peer_ = NULL;
  return temp;
}
void RegionHeartbeatResponse::set_allocated_change_peer(::pdpb::ChangePeer* change_peer) {
  delete change_peer_;
  change_peer_ = change_peer;
  if (change_peer) {
    set_has_change_peer();
  } else {
    clear_has_change_peer();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.RegionHeartbeatResponse.change_peer)
}

// optional .pdpb.TransferLeader transfer_leader = 2;
bool RegionHeartbeatResponse::has_transfer_leader() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RegionHeartbeatResponse::set_has_transfer_leader() {
  _has_bits_[0] |= 0x00000002u;
}
void RegionHeartbeatResponse::clear_has_transfer_leader() {
  _has_bits_[0] &= ~0x00000002u;
}
void RegionHeartbeatResponse::clear_transfer_leader() {
  if (transfer_leader_ != NULL) transfer_leader_->::pdpb::TransferLeader::Clear();
  clear_has_transfer_leader();
}
const ::pdpb::TransferLeader& RegionHeartbeatResponse::transfer_leader() const {
  // @@protoc_insertion_point(field_get:pdpb.RegionHeartbeatResponse.transfer_leader)
  return transfer_leader_ != NULL ? *transfer_leader_
                         : *::pdpb::TransferLeader::internal_default_instance();
}
::pdpb::TransferLeader* RegionHeartbeatResponse::mutable_transfer_leader() {
  set_has_transfer_leader();
  if (transfer_leader_ == NULL) {
    transfer_leader_ = new ::pdpb::TransferLeader;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.RegionHeartbeatResponse.transfer_leader)
  return transfer_leader_;
}
::pdpb::TransferLeader* RegionHeartbeatResponse::release_transfer_leader() {
  // @@protoc_insertion_point(field_release:pdpb.RegionHeartbeatResponse.transfer_leader)
  clear_has_transfer_leader();
  ::pdpb::TransferLeader* temp = transfer_leader_;
  transfer_leader_ = NULL;
  return temp;
}
void RegionHeartbeatResponse::set_allocated_transfer_leader(::pdpb::TransferLeader* transfer_leader) {
  delete transfer_leader_;
  transfer_leader_ = transfer_leader;
  if (transfer_leader) {
    set_has_transfer_leader();
  } else {
    clear_has_transfer_leader();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.RegionHeartbeatResponse.transfer_leader)
}

inline const RegionHeartbeatResponse* RegionHeartbeatResponse::internal_default_instance() {
  return &RegionHeartbeatResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutClusterConfigRequest::kClusterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutClusterConfigRequest::PutClusterConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.PutClusterConfigRequest)
}

void PutClusterConfigRequest::InitAsDefaultInstance() {
  cluster_ = const_cast< ::metapb::Cluster*>(
      ::metapb::Cluster::internal_default_instance());
}

PutClusterConfigRequest::PutClusterConfigRequest(const PutClusterConfigRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.PutClusterConfigRequest)
}

void PutClusterConfigRequest::SharedCtor() {
  _cached_size_ = 0;
  cluster_ = NULL;
}

PutClusterConfigRequest::~PutClusterConfigRequest() {
  // @@protoc_insertion_point(destructor:pdpb.PutClusterConfigRequest)
  SharedDtor();
}

void PutClusterConfigRequest::SharedDtor() {
  if (this != &PutClusterConfigRequest_default_instance_.get()) {
    delete cluster_;
  }
}

void PutClusterConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutClusterConfigRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PutClusterConfigRequest_descriptor_;
}

const PutClusterConfigRequest& PutClusterConfigRequest::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PutClusterConfigRequest> PutClusterConfigRequest_default_instance_;

PutClusterConfigRequest* PutClusterConfigRequest::New(::google::protobuf::Arena* arena) const {
  PutClusterConfigRequest* n = new PutClusterConfigRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PutClusterConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.PutClusterConfigRequest)
  if (has_cluster()) {
    if (cluster_ != NULL) cluster_->::metapb::Cluster::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PutClusterConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.PutClusterConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .metapb.Cluster cluster = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cluster()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.PutClusterConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.PutClusterConfigRequest)
  return false;
#undef DO_
}

void PutClusterConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.PutClusterConfigRequest)
  // optional .metapb.Cluster cluster = 1;
  if (has_cluster()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->cluster_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.PutClusterConfigRequest)
}

::google::protobuf::uint8* PutClusterConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.PutClusterConfigRequest)
  // optional .metapb.Cluster cluster = 1;
  if (has_cluster()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->cluster_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.PutClusterConfigRequest)
  return target;
}

size_t PutClusterConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.PutClusterConfigRequest)
  size_t total_size = 0;

  // optional .metapb.Cluster cluster = 1;
  if (has_cluster()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cluster_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutClusterConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.PutClusterConfigRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PutClusterConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PutClusterConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.PutClusterConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.PutClusterConfigRequest)
    UnsafeMergeFrom(*source);
  }
}

void PutClusterConfigRequest::MergeFrom(const PutClusterConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.PutClusterConfigRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PutClusterConfigRequest::UnsafeMergeFrom(const PutClusterConfigRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cluster()) {
      mutable_cluster()->::metapb::Cluster::MergeFrom(from.cluster());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void PutClusterConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.PutClusterConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutClusterConfigRequest::CopyFrom(const PutClusterConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.PutClusterConfigRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PutClusterConfigRequest::IsInitialized() const {

  return true;
}

void PutClusterConfigRequest::Swap(PutClusterConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutClusterConfigRequest::InternalSwap(PutClusterConfigRequest* other) {
  std::swap(cluster_, other->cluster_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PutClusterConfigRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PutClusterConfigRequest_descriptor_;
  metadata.reflection = PutClusterConfigRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PutClusterConfigRequest

// optional .metapb.Cluster cluster = 1;
bool PutClusterConfigRequest::has_cluster() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PutClusterConfigRequest::set_has_cluster() {
  _has_bits_[0] |= 0x00000001u;
}
void PutClusterConfigRequest::clear_has_cluster() {
  _has_bits_[0] &= ~0x00000001u;
}
void PutClusterConfigRequest::clear_cluster() {
  if (cluster_ != NULL) cluster_->::metapb::Cluster::Clear();
  clear_has_cluster();
}
const ::metapb::Cluster& PutClusterConfigRequest::cluster() const {
  // @@protoc_insertion_point(field_get:pdpb.PutClusterConfigRequest.cluster)
  return cluster_ != NULL ? *cluster_
                         : *::metapb::Cluster::internal_default_instance();
}
::metapb::Cluster* PutClusterConfigRequest::mutable_cluster() {
  set_has_cluster();
  if (cluster_ == NULL) {
    cluster_ = new ::metapb::Cluster;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.PutClusterConfigRequest.cluster)
  return cluster_;
}
::metapb::Cluster* PutClusterConfigRequest::release_cluster() {
  // @@protoc_insertion_point(field_release:pdpb.PutClusterConfigRequest.cluster)
  clear_has_cluster();
  ::metapb::Cluster* temp = cluster_;
  cluster_ = NULL;
  return temp;
}
void PutClusterConfigRequest::set_allocated_cluster(::metapb::Cluster* cluster) {
  delete cluster_;
  cluster_ = cluster;
  if (cluster) {
    set_has_cluster();
  } else {
    clear_has_cluster();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.PutClusterConfigRequest.cluster)
}

inline const PutClusterConfigRequest* PutClusterConfigRequest::internal_default_instance() {
  return &PutClusterConfigRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutClusterConfigResponse::PutClusterConfigResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.PutClusterConfigResponse)
}

void PutClusterConfigResponse::InitAsDefaultInstance() {
}

PutClusterConfigResponse::PutClusterConfigResponse(const PutClusterConfigResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.PutClusterConfigResponse)
}

void PutClusterConfigResponse::SharedCtor() {
  _cached_size_ = 0;
}

PutClusterConfigResponse::~PutClusterConfigResponse() {
  // @@protoc_insertion_point(destructor:pdpb.PutClusterConfigResponse)
  SharedDtor();
}

void PutClusterConfigResponse::SharedDtor() {
}

void PutClusterConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutClusterConfigResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PutClusterConfigResponse_descriptor_;
}

const PutClusterConfigResponse& PutClusterConfigResponse::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PutClusterConfigResponse> PutClusterConfigResponse_default_instance_;

PutClusterConfigResponse* PutClusterConfigResponse::New(::google::protobuf::Arena* arena) const {
  PutClusterConfigResponse* n = new PutClusterConfigResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PutClusterConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.PutClusterConfigResponse)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PutClusterConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.PutClusterConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.PutClusterConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.PutClusterConfigResponse)
  return false;
#undef DO_
}

void PutClusterConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.PutClusterConfigResponse)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.PutClusterConfigResponse)
}

::google::protobuf::uint8* PutClusterConfigResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.PutClusterConfigResponse)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.PutClusterConfigResponse)
  return target;
}

size_t PutClusterConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.PutClusterConfigResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutClusterConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.PutClusterConfigResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PutClusterConfigResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PutClusterConfigResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.PutClusterConfigResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.PutClusterConfigResponse)
    UnsafeMergeFrom(*source);
  }
}

void PutClusterConfigResponse::MergeFrom(const PutClusterConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.PutClusterConfigResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PutClusterConfigResponse::UnsafeMergeFrom(const PutClusterConfigResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void PutClusterConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.PutClusterConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutClusterConfigResponse::CopyFrom(const PutClusterConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.PutClusterConfigResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PutClusterConfigResponse::IsInitialized() const {

  return true;
}

void PutClusterConfigResponse::Swap(PutClusterConfigResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutClusterConfigResponse::InternalSwap(PutClusterConfigResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PutClusterConfigResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PutClusterConfigResponse_descriptor_;
  metadata.reflection = PutClusterConfigResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PutClusterConfigResponse

inline const PutClusterConfigResponse* PutClusterConfigResponse::internal_default_instance() {
  return &PutClusterConfigResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AskSplitRequest::kRegionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AskSplitRequest::AskSplitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.AskSplitRequest)
}

void AskSplitRequest::InitAsDefaultInstance() {
  region_ = const_cast< ::metapb::Region*>(
      ::metapb::Region::internal_default_instance());
}

AskSplitRequest::AskSplitRequest(const AskSplitRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.AskSplitRequest)
}

void AskSplitRequest::SharedCtor() {
  _cached_size_ = 0;
  region_ = NULL;
}

AskSplitRequest::~AskSplitRequest() {
  // @@protoc_insertion_point(destructor:pdpb.AskSplitRequest)
  SharedDtor();
}

void AskSplitRequest::SharedDtor() {
  if (this != &AskSplitRequest_default_instance_.get()) {
    delete region_;
  }
}

void AskSplitRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AskSplitRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AskSplitRequest_descriptor_;
}

const AskSplitRequest& AskSplitRequest::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AskSplitRequest> AskSplitRequest_default_instance_;

AskSplitRequest* AskSplitRequest::New(::google::protobuf::Arena* arena) const {
  AskSplitRequest* n = new AskSplitRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AskSplitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.AskSplitRequest)
  if (has_region()) {
    if (region_ != NULL) region_->::metapb::Region::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AskSplitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.AskSplitRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .metapb.Region region = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_region()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.AskSplitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.AskSplitRequest)
  return false;
#undef DO_
}

void AskSplitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.AskSplitRequest)
  // optional .metapb.Region region = 1;
  if (has_region()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->region_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.AskSplitRequest)
}

::google::protobuf::uint8* AskSplitRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.AskSplitRequest)
  // optional .metapb.Region region = 1;
  if (has_region()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->region_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.AskSplitRequest)
  return target;
}

size_t AskSplitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.AskSplitRequest)
  size_t total_size = 0;

  // optional .metapb.Region region = 1;
  if (has_region()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->region_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AskSplitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.AskSplitRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AskSplitRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AskSplitRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.AskSplitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.AskSplitRequest)
    UnsafeMergeFrom(*source);
  }
}

void AskSplitRequest::MergeFrom(const AskSplitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.AskSplitRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AskSplitRequest::UnsafeMergeFrom(const AskSplitRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_region()) {
      mutable_region()->::metapb::Region::MergeFrom(from.region());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void AskSplitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.AskSplitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AskSplitRequest::CopyFrom(const AskSplitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.AskSplitRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AskSplitRequest::IsInitialized() const {

  return true;
}

void AskSplitRequest::Swap(AskSplitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AskSplitRequest::InternalSwap(AskSplitRequest* other) {
  std::swap(region_, other->region_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AskSplitRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AskSplitRequest_descriptor_;
  metadata.reflection = AskSplitRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AskSplitRequest

// optional .metapb.Region region = 1;
bool AskSplitRequest::has_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AskSplitRequest::set_has_region() {
  _has_bits_[0] |= 0x00000001u;
}
void AskSplitRequest::clear_has_region() {
  _has_bits_[0] &= ~0x00000001u;
}
void AskSplitRequest::clear_region() {
  if (region_ != NULL) region_->::metapb::Region::Clear();
  clear_has_region();
}
const ::metapb::Region& AskSplitRequest::region() const {
  // @@protoc_insertion_point(field_get:pdpb.AskSplitRequest.region)
  return region_ != NULL ? *region_
                         : *::metapb::Region::internal_default_instance();
}
::metapb::Region* AskSplitRequest::mutable_region() {
  set_has_region();
  if (region_ == NULL) {
    region_ = new ::metapb::Region;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.AskSplitRequest.region)
  return region_;
}
::metapb::Region* AskSplitRequest::release_region() {
  // @@protoc_insertion_point(field_release:pdpb.AskSplitRequest.region)
  clear_has_region();
  ::metapb::Region* temp = region_;
  region_ = NULL;
  return temp;
}
void AskSplitRequest::set_allocated_region(::metapb::Region* region) {
  delete region_;
  region_ = region;
  if (region) {
    set_has_region();
  } else {
    clear_has_region();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.AskSplitRequest.region)
}

inline const AskSplitRequest* AskSplitRequest::internal_default_instance() {
  return &AskSplitRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AskSplitResponse::kNewRegionIdFieldNumber;
const int AskSplitResponse::kNewPeerIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AskSplitResponse::AskSplitResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.AskSplitResponse)
}

void AskSplitResponse::InitAsDefaultInstance() {
}

AskSplitResponse::AskSplitResponse(const AskSplitResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.AskSplitResponse)
}

void AskSplitResponse::SharedCtor() {
  _cached_size_ = 0;
  new_region_id_ = GOOGLE_ULONGLONG(0);
}

AskSplitResponse::~AskSplitResponse() {
  // @@protoc_insertion_point(destructor:pdpb.AskSplitResponse)
  SharedDtor();
}

void AskSplitResponse::SharedDtor() {
}

void AskSplitResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AskSplitResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AskSplitResponse_descriptor_;
}

const AskSplitResponse& AskSplitResponse::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AskSplitResponse> AskSplitResponse_default_instance_;

AskSplitResponse* AskSplitResponse::New(::google::protobuf::Arena* arena) const {
  AskSplitResponse* n = new AskSplitResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AskSplitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.AskSplitResponse)
  new_region_id_ = GOOGLE_ULONGLONG(0);
  new_peer_ids_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AskSplitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.AskSplitResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 new_region_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_new_region_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &new_region_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_new_peer_ids;
        break;
      }

      // repeated uint64 new_peer_ids = 2;
      case 2: {
        if (tag == 16) {
         parse_new_peer_ids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16, input, this->mutable_new_peer_ids())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_new_peer_ids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_new_peer_ids;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.AskSplitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.AskSplitResponse)
  return false;
#undef DO_
}

void AskSplitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.AskSplitResponse)
  // optional uint64 new_region_id = 1;
  if (has_new_region_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->new_region_id(), output);
  }

  // repeated uint64 new_peer_ids = 2;
  for (int i = 0; i < this->new_peer_ids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->new_peer_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.AskSplitResponse)
}

::google::protobuf::uint8* AskSplitResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.AskSplitResponse)
  // optional uint64 new_region_id = 1;
  if (has_new_region_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->new_region_id(), target);
  }

  // repeated uint64 new_peer_ids = 2;
  for (int i = 0; i < this->new_peer_ids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(2, this->new_peer_ids(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.AskSplitResponse)
  return target;
}

size_t AskSplitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.AskSplitResponse)
  size_t total_size = 0;

  // optional uint64 new_region_id = 1;
  if (has_new_region_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->new_region_id());
  }

  // repeated uint64 new_peer_ids = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->new_peer_ids_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->new_peer_ids(i));
    }
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->new_peer_ids_size());
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AskSplitResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.AskSplitResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AskSplitResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AskSplitResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.AskSplitResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.AskSplitResponse)
    UnsafeMergeFrom(*source);
  }
}

void AskSplitResponse::MergeFrom(const AskSplitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.AskSplitResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AskSplitResponse::UnsafeMergeFrom(const AskSplitResponse& from) {
  GOOGLE_DCHECK(&from != this);
  new_peer_ids_.UnsafeMergeFrom(from.new_peer_ids_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_new_region_id()) {
      set_new_region_id(from.new_region_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void AskSplitResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.AskSplitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AskSplitResponse::CopyFrom(const AskSplitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.AskSplitResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AskSplitResponse::IsInitialized() const {

  return true;
}

void AskSplitResponse::Swap(AskSplitResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AskSplitResponse::InternalSwap(AskSplitResponse* other) {
  std::swap(new_region_id_, other->new_region_id_);
  new_peer_ids_.UnsafeArenaSwap(&other->new_peer_ids_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AskSplitResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AskSplitResponse_descriptor_;
  metadata.reflection = AskSplitResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AskSplitResponse

// optional uint64 new_region_id = 1;
bool AskSplitResponse::has_new_region_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AskSplitResponse::set_has_new_region_id() {
  _has_bits_[0] |= 0x00000001u;
}
void AskSplitResponse::clear_has_new_region_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void AskSplitResponse::clear_new_region_id() {
  new_region_id_ = GOOGLE_ULONGLONG(0);
  clear_has_new_region_id();
}
::google::protobuf::uint64 AskSplitResponse::new_region_id() const {
  // @@protoc_insertion_point(field_get:pdpb.AskSplitResponse.new_region_id)
  return new_region_id_;
}
void AskSplitResponse::set_new_region_id(::google::protobuf::uint64 value) {
  set_has_new_region_id();
  new_region_id_ = value;
  // @@protoc_insertion_point(field_set:pdpb.AskSplitResponse.new_region_id)
}

// repeated uint64 new_peer_ids = 2;
int AskSplitResponse::new_peer_ids_size() const {
  return new_peer_ids_.size();
}
void AskSplitResponse::clear_new_peer_ids() {
  new_peer_ids_.Clear();
}
::google::protobuf::uint64 AskSplitResponse::new_peer_ids(int index) const {
  // @@protoc_insertion_point(field_get:pdpb.AskSplitResponse.new_peer_ids)
  return new_peer_ids_.Get(index);
}
void AskSplitResponse::set_new_peer_ids(int index, ::google::protobuf::uint64 value) {
  new_peer_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:pdpb.AskSplitResponse.new_peer_ids)
}
void AskSplitResponse::add_new_peer_ids(::google::protobuf::uint64 value) {
  new_peer_ids_.Add(value);
  // @@protoc_insertion_point(field_add:pdpb.AskSplitResponse.new_peer_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
AskSplitResponse::new_peer_ids() const {
  // @@protoc_insertion_point(field_list:pdpb.AskSplitResponse.new_peer_ids)
  return new_peer_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
AskSplitResponse::mutable_new_peer_ids() {
  // @@protoc_insertion_point(field_mutable_list:pdpb.AskSplitResponse.new_peer_ids)
  return &new_peer_ids_;
}

inline const AskSplitResponse* AskSplitResponse::internal_default_instance() {
  return &AskSplitResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreStats::kStoreIdFieldNumber;
const int StoreStats::kCapacityFieldNumber;
const int StoreStats::kAvailableFieldNumber;
const int StoreStats::kRegionCountFieldNumber;
const int StoreStats::kSendingSnapCountFieldNumber;
const int StoreStats::kReceivingSnapCountFieldNumber;
const int StoreStats::kStartTimeFieldNumber;
const int StoreStats::kApplyingSnapCountFieldNumber;
const int StoreStats::kIsBusyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreStats::StoreStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.StoreStats)
}

void StoreStats::InitAsDefaultInstance() {
}

StoreStats::StoreStats(const StoreStats& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.StoreStats)
}

void StoreStats::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&store_id_, 0, reinterpret_cast<char*>(&is_busy_) -
    reinterpret_cast<char*>(&store_id_) + sizeof(is_busy_));
}

StoreStats::~StoreStats() {
  // @@protoc_insertion_point(destructor:pdpb.StoreStats)
  SharedDtor();
}

void StoreStats::SharedDtor() {
}

void StoreStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreStats::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StoreStats_descriptor_;
}

const StoreStats& StoreStats::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<StoreStats> StoreStats_default_instance_;

StoreStats* StoreStats::New(::google::protobuf::Arena* arena) const {
  StoreStats* n = new StoreStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoreStats::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.StoreStats)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(StoreStats, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<StoreStats*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(store_id_, applying_snap_count_);
  is_busy_ = false;

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool StoreStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.StoreStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 store_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_store_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &store_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_capacity;
        break;
      }

      // optional uint64 capacity = 2;
      case 2: {
        if (tag == 16) {
         parse_capacity:
          set_has_capacity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &capacity_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_available;
        break;
      }

      // optional uint64 available = 3;
      case 3: {
        if (tag == 24) {
         parse_available:
          set_has_available();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &available_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_region_count;
        break;
      }

      // optional uint32 region_count = 4;
      case 4: {
        if (tag == 32) {
         parse_region_count:
          set_has_region_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &region_count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_sending_snap_count;
        break;
      }

      // optional uint32 sending_snap_count = 5;
      case 5: {
        if (tag == 40) {
         parse_sending_snap_count:
          set_has_sending_snap_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sending_snap_count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_receiving_snap_count;
        break;
      }

      // optional uint32 receiving_snap_count = 6;
      case 6: {
        if (tag == 48) {
         parse_receiving_snap_count:
          set_has_receiving_snap_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &receiving_snap_count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_start_time;
        break;
      }

      // optional uint32 start_time = 7;
      case 7: {
        if (tag == 56) {
         parse_start_time:
          set_has_start_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_applying_snap_count;
        break;
      }

      // optional uint32 applying_snap_count = 8;
      case 8: {
        if (tag == 64) {
         parse_applying_snap_count:
          set_has_applying_snap_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &applying_snap_count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_is_busy;
        break;
      }

      // optional bool is_busy = 9;
      case 9: {
        if (tag == 72) {
         parse_is_busy:
          set_has_is_busy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_busy_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.StoreStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.StoreStats)
  return false;
#undef DO_
}

void StoreStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.StoreStats)
  // optional uint64 store_id = 1;
  if (has_store_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->store_id(), output);
  }

  // optional uint64 capacity = 2;
  if (has_capacity()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->capacity(), output);
  }

  // optional uint64 available = 3;
  if (has_available()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->available(), output);
  }

  // optional uint32 region_count = 4;
  if (has_region_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->region_count(), output);
  }

  // optional uint32 sending_snap_count = 5;
  if (has_sending_snap_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->sending_snap_count(), output);
  }

  // optional uint32 receiving_snap_count = 6;
  if (has_receiving_snap_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->receiving_snap_count(), output);
  }

  // optional uint32 start_time = 7;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->start_time(), output);
  }

  // optional uint32 applying_snap_count = 8;
  if (has_applying_snap_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->applying_snap_count(), output);
  }

  // optional bool is_busy = 9;
  if (has_is_busy()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_busy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.StoreStats)
}

::google::protobuf::uint8* StoreStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.StoreStats)
  // optional uint64 store_id = 1;
  if (has_store_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->store_id(), target);
  }

  // optional uint64 capacity = 2;
  if (has_capacity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->capacity(), target);
  }

  // optional uint64 available = 3;
  if (has_available()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->available(), target);
  }

  // optional uint32 region_count = 4;
  if (has_region_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->region_count(), target);
  }

  // optional uint32 sending_snap_count = 5;
  if (has_sending_snap_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->sending_snap_count(), target);
  }

  // optional uint32 receiving_snap_count = 6;
  if (has_receiving_snap_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->receiving_snap_count(), target);
  }

  // optional uint32 start_time = 7;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->start_time(), target);
  }

  // optional uint32 applying_snap_count = 8;
  if (has_applying_snap_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->applying_snap_count(), target);
  }

  // optional bool is_busy = 9;
  if (has_is_busy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_busy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.StoreStats)
  return target;
}

size_t StoreStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.StoreStats)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint64 store_id = 1;
    if (has_store_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->store_id());
    }

    // optional uint64 capacity = 2;
    if (has_capacity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->capacity());
    }

    // optional uint64 available = 3;
    if (has_available()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->available());
    }

    // optional uint32 region_count = 4;
    if (has_region_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->region_count());
    }

    // optional uint32 sending_snap_count = 5;
    if (has_sending_snap_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sending_snap_count());
    }

    // optional uint32 receiving_snap_count = 6;
    if (has_receiving_snap_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->receiving_snap_count());
    }

    // optional uint32 start_time = 7;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_time());
    }

    // optional uint32 applying_snap_count = 8;
    if (has_applying_snap_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->applying_snap_count());
    }

  }
  // optional bool is_busy = 9;
  if (has_is_busy()) {
    total_size += 1 + 1;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.StoreStats)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const StoreStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.StoreStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.StoreStats)
    UnsafeMergeFrom(*source);
  }
}

void StoreStats::MergeFrom(const StoreStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.StoreStats)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void StoreStats::UnsafeMergeFrom(const StoreStats& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_store_id()) {
      set_store_id(from.store_id());
    }
    if (from.has_capacity()) {
      set_capacity(from.capacity());
    }
    if (from.has_available()) {
      set_available(from.available());
    }
    if (from.has_region_count()) {
      set_region_count(from.region_count());
    }
    if (from.has_sending_snap_count()) {
      set_sending_snap_count(from.sending_snap_count());
    }
    if (from.has_receiving_snap_count()) {
      set_receiving_snap_count(from.receiving_snap_count());
    }
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_applying_snap_count()) {
      set_applying_snap_count(from.applying_snap_count());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_is_busy()) {
      set_is_busy(from.is_busy());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void StoreStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.StoreStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreStats::CopyFrom(const StoreStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.StoreStats)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool StoreStats::IsInitialized() const {

  return true;
}

void StoreStats::Swap(StoreStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreStats::InternalSwap(StoreStats* other) {
  std::swap(store_id_, other->store_id_);
  std::swap(capacity_, other->capacity_);
  std::swap(available_, other->available_);
  std::swap(region_count_, other->region_count_);
  std::swap(sending_snap_count_, other->sending_snap_count_);
  std::swap(receiving_snap_count_, other->receiving_snap_count_);
  std::swap(start_time_, other->start_time_);
  std::swap(applying_snap_count_, other->applying_snap_count_);
  std::swap(is_busy_, other->is_busy_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoreStats::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StoreStats_descriptor_;
  metadata.reflection = StoreStats_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoreStats

// optional uint64 store_id = 1;
bool StoreStats::has_store_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StoreStats::set_has_store_id() {
  _has_bits_[0] |= 0x00000001u;
}
void StoreStats::clear_has_store_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void StoreStats::clear_store_id() {
  store_id_ = GOOGLE_ULONGLONG(0);
  clear_has_store_id();
}
::google::protobuf::uint64 StoreStats::store_id() const {
  // @@protoc_insertion_point(field_get:pdpb.StoreStats.store_id)
  return store_id_;
}
void StoreStats::set_store_id(::google::protobuf::uint64 value) {
  set_has_store_id();
  store_id_ = value;
  // @@protoc_insertion_point(field_set:pdpb.StoreStats.store_id)
}

// optional uint64 capacity = 2;
bool StoreStats::has_capacity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void StoreStats::set_has_capacity() {
  _has_bits_[0] |= 0x00000002u;
}
void StoreStats::clear_has_capacity() {
  _has_bits_[0] &= ~0x00000002u;
}
void StoreStats::clear_capacity() {
  capacity_ = GOOGLE_ULONGLONG(0);
  clear_has_capacity();
}
::google::protobuf::uint64 StoreStats::capacity() const {
  // @@protoc_insertion_point(field_get:pdpb.StoreStats.capacity)
  return capacity_;
}
void StoreStats::set_capacity(::google::protobuf::uint64 value) {
  set_has_capacity();
  capacity_ = value;
  // @@protoc_insertion_point(field_set:pdpb.StoreStats.capacity)
}

// optional uint64 available = 3;
bool StoreStats::has_available() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void StoreStats::set_has_available() {
  _has_bits_[0] |= 0x00000004u;
}
void StoreStats::clear_has_available() {
  _has_bits_[0] &= ~0x00000004u;
}
void StoreStats::clear_available() {
  available_ = GOOGLE_ULONGLONG(0);
  clear_has_available();
}
::google::protobuf::uint64 StoreStats::available() const {
  // @@protoc_insertion_point(field_get:pdpb.StoreStats.available)
  return available_;
}
void StoreStats::set_available(::google::protobuf::uint64 value) {
  set_has_available();
  available_ = value;
  // @@protoc_insertion_point(field_set:pdpb.StoreStats.available)
}

// optional uint32 region_count = 4;
bool StoreStats::has_region_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void StoreStats::set_has_region_count() {
  _has_bits_[0] |= 0x00000008u;
}
void StoreStats::clear_has_region_count() {
  _has_bits_[0] &= ~0x00000008u;
}
void StoreStats::clear_region_count() {
  region_count_ = 0u;
  clear_has_region_count();
}
::google::protobuf::uint32 StoreStats::region_count() const {
  // @@protoc_insertion_point(field_get:pdpb.StoreStats.region_count)
  return region_count_;
}
void StoreStats::set_region_count(::google::protobuf::uint32 value) {
  set_has_region_count();
  region_count_ = value;
  // @@protoc_insertion_point(field_set:pdpb.StoreStats.region_count)
}

// optional uint32 sending_snap_count = 5;
bool StoreStats::has_sending_snap_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void StoreStats::set_has_sending_snap_count() {
  _has_bits_[0] |= 0x00000010u;
}
void StoreStats::clear_has_sending_snap_count() {
  _has_bits_[0] &= ~0x00000010u;
}
void StoreStats::clear_sending_snap_count() {
  sending_snap_count_ = 0u;
  clear_has_sending_snap_count();
}
::google::protobuf::uint32 StoreStats::sending_snap_count() const {
  // @@protoc_insertion_point(field_get:pdpb.StoreStats.sending_snap_count)
  return sending_snap_count_;
}
void StoreStats::set_sending_snap_count(::google::protobuf::uint32 value) {
  set_has_sending_snap_count();
  sending_snap_count_ = value;
  // @@protoc_insertion_point(field_set:pdpb.StoreStats.sending_snap_count)
}

// optional uint32 receiving_snap_count = 6;
bool StoreStats::has_receiving_snap_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void StoreStats::set_has_receiving_snap_count() {
  _has_bits_[0] |= 0x00000020u;
}
void StoreStats::clear_has_receiving_snap_count() {
  _has_bits_[0] &= ~0x00000020u;
}
void StoreStats::clear_receiving_snap_count() {
  receiving_snap_count_ = 0u;
  clear_has_receiving_snap_count();
}
::google::protobuf::uint32 StoreStats::receiving_snap_count() const {
  // @@protoc_insertion_point(field_get:pdpb.StoreStats.receiving_snap_count)
  return receiving_snap_count_;
}
void StoreStats::set_receiving_snap_count(::google::protobuf::uint32 value) {
  set_has_receiving_snap_count();
  receiving_snap_count_ = value;
  // @@protoc_insertion_point(field_set:pdpb.StoreStats.receiving_snap_count)
}

// optional uint32 start_time = 7;
bool StoreStats::has_start_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void StoreStats::set_has_start_time() {
  _has_bits_[0] |= 0x00000040u;
}
void StoreStats::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000040u;
}
void StoreStats::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
::google::protobuf::uint32 StoreStats::start_time() const {
  // @@protoc_insertion_point(field_get:pdpb.StoreStats.start_time)
  return start_time_;
}
void StoreStats::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:pdpb.StoreStats.start_time)
}

// optional uint32 applying_snap_count = 8;
bool StoreStats::has_applying_snap_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void StoreStats::set_has_applying_snap_count() {
  _has_bits_[0] |= 0x00000080u;
}
void StoreStats::clear_has_applying_snap_count() {
  _has_bits_[0] &= ~0x00000080u;
}
void StoreStats::clear_applying_snap_count() {
  applying_snap_count_ = 0u;
  clear_has_applying_snap_count();
}
::google::protobuf::uint32 StoreStats::applying_snap_count() const {
  // @@protoc_insertion_point(field_get:pdpb.StoreStats.applying_snap_count)
  return applying_snap_count_;
}
void StoreStats::set_applying_snap_count(::google::protobuf::uint32 value) {
  set_has_applying_snap_count();
  applying_snap_count_ = value;
  // @@protoc_insertion_point(field_set:pdpb.StoreStats.applying_snap_count)
}

// optional bool is_busy = 9;
bool StoreStats::has_is_busy() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void StoreStats::set_has_is_busy() {
  _has_bits_[0] |= 0x00000100u;
}
void StoreStats::clear_has_is_busy() {
  _has_bits_[0] &= ~0x00000100u;
}
void StoreStats::clear_is_busy() {
  is_busy_ = false;
  clear_has_is_busy();
}
bool StoreStats::is_busy() const {
  // @@protoc_insertion_point(field_get:pdpb.StoreStats.is_busy)
  return is_busy_;
}
void StoreStats::set_is_busy(bool value) {
  set_has_is_busy();
  is_busy_ = value;
  // @@protoc_insertion_point(field_set:pdpb.StoreStats.is_busy)
}

inline const StoreStats* StoreStats::internal_default_instance() {
  return &StoreStats_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StoreHeartbeatRequest::kStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreHeartbeatRequest::StoreHeartbeatRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.StoreHeartbeatRequest)
}

void StoreHeartbeatRequest::InitAsDefaultInstance() {
  stats_ = const_cast< ::pdpb::StoreStats*>(
      ::pdpb::StoreStats::internal_default_instance());
}

StoreHeartbeatRequest::StoreHeartbeatRequest(const StoreHeartbeatRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.StoreHeartbeatRequest)
}

void StoreHeartbeatRequest::SharedCtor() {
  _cached_size_ = 0;
  stats_ = NULL;
}

StoreHeartbeatRequest::~StoreHeartbeatRequest() {
  // @@protoc_insertion_point(destructor:pdpb.StoreHeartbeatRequest)
  SharedDtor();
}

void StoreHeartbeatRequest::SharedDtor() {
  if (this != &StoreHeartbeatRequest_default_instance_.get()) {
    delete stats_;
  }
}

void StoreHeartbeatRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreHeartbeatRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StoreHeartbeatRequest_descriptor_;
}

const StoreHeartbeatRequest& StoreHeartbeatRequest::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<StoreHeartbeatRequest> StoreHeartbeatRequest_default_instance_;

StoreHeartbeatRequest* StoreHeartbeatRequest::New(::google::protobuf::Arena* arena) const {
  StoreHeartbeatRequest* n = new StoreHeartbeatRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoreHeartbeatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.StoreHeartbeatRequest)
  if (has_stats()) {
    if (stats_ != NULL) stats_->::pdpb::StoreStats::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool StoreHeartbeatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.StoreHeartbeatRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pdpb.StoreStats stats = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stats()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.StoreHeartbeatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.StoreHeartbeatRequest)
  return false;
#undef DO_
}

void StoreHeartbeatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.StoreHeartbeatRequest)
  // optional .pdpb.StoreStats stats = 1;
  if (has_stats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->stats_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.StoreHeartbeatRequest)
}

::google::protobuf::uint8* StoreHeartbeatRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.StoreHeartbeatRequest)
  // optional .pdpb.StoreStats stats = 1;
  if (has_stats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->stats_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.StoreHeartbeatRequest)
  return target;
}

size_t StoreHeartbeatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.StoreHeartbeatRequest)
  size_t total_size = 0;

  // optional .pdpb.StoreStats stats = 1;
  if (has_stats()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->stats_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreHeartbeatRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.StoreHeartbeatRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const StoreHeartbeatRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreHeartbeatRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.StoreHeartbeatRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.StoreHeartbeatRequest)
    UnsafeMergeFrom(*source);
  }
}

void StoreHeartbeatRequest::MergeFrom(const StoreHeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.StoreHeartbeatRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void StoreHeartbeatRequest::UnsafeMergeFrom(const StoreHeartbeatRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stats()) {
      mutable_stats()->::pdpb::StoreStats::MergeFrom(from.stats());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void StoreHeartbeatRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.StoreHeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreHeartbeatRequest::CopyFrom(const StoreHeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.StoreHeartbeatRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool StoreHeartbeatRequest::IsInitialized() const {

  return true;
}

void StoreHeartbeatRequest::Swap(StoreHeartbeatRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreHeartbeatRequest::InternalSwap(StoreHeartbeatRequest* other) {
  std::swap(stats_, other->stats_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoreHeartbeatRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StoreHeartbeatRequest_descriptor_;
  metadata.reflection = StoreHeartbeatRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoreHeartbeatRequest

// optional .pdpb.StoreStats stats = 1;
bool StoreHeartbeatRequest::has_stats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void StoreHeartbeatRequest::set_has_stats() {
  _has_bits_[0] |= 0x00000001u;
}
void StoreHeartbeatRequest::clear_has_stats() {
  _has_bits_[0] &= ~0x00000001u;
}
void StoreHeartbeatRequest::clear_stats() {
  if (stats_ != NULL) stats_->::pdpb::StoreStats::Clear();
  clear_has_stats();
}
const ::pdpb::StoreStats& StoreHeartbeatRequest::stats() const {
  // @@protoc_insertion_point(field_get:pdpb.StoreHeartbeatRequest.stats)
  return stats_ != NULL ? *stats_
                         : *::pdpb::StoreStats::internal_default_instance();
}
::pdpb::StoreStats* StoreHeartbeatRequest::mutable_stats() {
  set_has_stats();
  if (stats_ == NULL) {
    stats_ = new ::pdpb::StoreStats;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.StoreHeartbeatRequest.stats)
  return stats_;
}
::pdpb::StoreStats* StoreHeartbeatRequest::release_stats() {
  // @@protoc_insertion_point(field_release:pdpb.StoreHeartbeatRequest.stats)
  clear_has_stats();
  ::pdpb::StoreStats* temp = stats_;
  stats_ = NULL;
  return temp;
}
void StoreHeartbeatRequest::set_allocated_stats(::pdpb::StoreStats* stats) {
  delete stats_;
  stats_ = stats;
  if (stats) {
    set_has_stats();
  } else {
    clear_has_stats();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.StoreHeartbeatRequest.stats)
}

inline const StoreHeartbeatRequest* StoreHeartbeatRequest::internal_default_instance() {
  return &StoreHeartbeatRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreHeartbeatResponse::StoreHeartbeatResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.StoreHeartbeatResponse)
}

void StoreHeartbeatResponse::InitAsDefaultInstance() {
}

StoreHeartbeatResponse::StoreHeartbeatResponse(const StoreHeartbeatResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.StoreHeartbeatResponse)
}

void StoreHeartbeatResponse::SharedCtor() {
  _cached_size_ = 0;
}

StoreHeartbeatResponse::~StoreHeartbeatResponse() {
  // @@protoc_insertion_point(destructor:pdpb.StoreHeartbeatResponse)
  SharedDtor();
}

void StoreHeartbeatResponse::SharedDtor() {
}

void StoreHeartbeatResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreHeartbeatResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StoreHeartbeatResponse_descriptor_;
}

const StoreHeartbeatResponse& StoreHeartbeatResponse::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<StoreHeartbeatResponse> StoreHeartbeatResponse_default_instance_;

StoreHeartbeatResponse* StoreHeartbeatResponse::New(::google::protobuf::Arena* arena) const {
  StoreHeartbeatResponse* n = new StoreHeartbeatResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoreHeartbeatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.StoreHeartbeatResponse)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool StoreHeartbeatResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.StoreHeartbeatResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.StoreHeartbeatResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.StoreHeartbeatResponse)
  return false;
#undef DO_
}

void StoreHeartbeatResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.StoreHeartbeatResponse)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.StoreHeartbeatResponse)
}

::google::protobuf::uint8* StoreHeartbeatResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.StoreHeartbeatResponse)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.StoreHeartbeatResponse)
  return target;
}

size_t StoreHeartbeatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.StoreHeartbeatResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreHeartbeatResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.StoreHeartbeatResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const StoreHeartbeatResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreHeartbeatResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.StoreHeartbeatResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.StoreHeartbeatResponse)
    UnsafeMergeFrom(*source);
  }
}

void StoreHeartbeatResponse::MergeFrom(const StoreHeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.StoreHeartbeatResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void StoreHeartbeatResponse::UnsafeMergeFrom(const StoreHeartbeatResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void StoreHeartbeatResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.StoreHeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreHeartbeatResponse::CopyFrom(const StoreHeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.StoreHeartbeatResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool StoreHeartbeatResponse::IsInitialized() const {

  return true;
}

void StoreHeartbeatResponse::Swap(StoreHeartbeatResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreHeartbeatResponse::InternalSwap(StoreHeartbeatResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoreHeartbeatResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StoreHeartbeatResponse_descriptor_;
  metadata.reflection = StoreHeartbeatResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoreHeartbeatResponse

inline const StoreHeartbeatResponse* StoreHeartbeatResponse::internal_default_instance() {
  return &StoreHeartbeatResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportSplitRequest::kLeftFieldNumber;
const int ReportSplitRequest::kRightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportSplitRequest::ReportSplitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.ReportSplitRequest)
}

void ReportSplitRequest::InitAsDefaultInstance() {
  left_ = const_cast< ::metapb::Region*>(
      ::metapb::Region::internal_default_instance());
  right_ = const_cast< ::metapb::Region*>(
      ::metapb::Region::internal_default_instance());
}

ReportSplitRequest::ReportSplitRequest(const ReportSplitRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.ReportSplitRequest)
}

void ReportSplitRequest::SharedCtor() {
  _cached_size_ = 0;
  left_ = NULL;
  right_ = NULL;
}

ReportSplitRequest::~ReportSplitRequest() {
  // @@protoc_insertion_point(destructor:pdpb.ReportSplitRequest)
  SharedDtor();
}

void ReportSplitRequest::SharedDtor() {
  if (this != &ReportSplitRequest_default_instance_.get()) {
    delete left_;
    delete right_;
  }
}

void ReportSplitRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReportSplitRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReportSplitRequest_descriptor_;
}

const ReportSplitRequest& ReportSplitRequest::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReportSplitRequest> ReportSplitRequest_default_instance_;

ReportSplitRequest* ReportSplitRequest::New(::google::protobuf::Arena* arena) const {
  ReportSplitRequest* n = new ReportSplitRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReportSplitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.ReportSplitRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_left()) {
      if (left_ != NULL) left_->::metapb::Region::Clear();
    }
    if (has_right()) {
      if (right_ != NULL) right_->::metapb::Region::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReportSplitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.ReportSplitRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .metapb.Region left = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_left()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_right;
        break;
      }

      // optional .metapb.Region right = 2;
      case 2: {
        if (tag == 18) {
         parse_right:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_right()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.ReportSplitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.ReportSplitRequest)
  return false;
#undef DO_
}

void ReportSplitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.ReportSplitRequest)
  // optional .metapb.Region left = 1;
  if (has_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->left_, output);
  }

  // optional .metapb.Region right = 2;
  if (has_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->right_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.ReportSplitRequest)
}

::google::protobuf::uint8* ReportSplitRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.ReportSplitRequest)
  // optional .metapb.Region left = 1;
  if (has_left()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->left_, false, target);
  }

  // optional .metapb.Region right = 2;
  if (has_right()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->right_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.ReportSplitRequest)
  return target;
}

size_t ReportSplitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.ReportSplitRequest)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .metapb.Region left = 1;
    if (has_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->left_);
    }

    // optional .metapb.Region right = 2;
    if (has_right()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->right_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReportSplitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.ReportSplitRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReportSplitRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportSplitRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.ReportSplitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.ReportSplitRequest)
    UnsafeMergeFrom(*source);
  }
}

void ReportSplitRequest::MergeFrom(const ReportSplitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.ReportSplitRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReportSplitRequest::UnsafeMergeFrom(const ReportSplitRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left()) {
      mutable_left()->::metapb::Region::MergeFrom(from.left());
    }
    if (from.has_right()) {
      mutable_right()->::metapb::Region::MergeFrom(from.right());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ReportSplitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.ReportSplitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportSplitRequest::CopyFrom(const ReportSplitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.ReportSplitRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReportSplitRequest::IsInitialized() const {

  return true;
}

void ReportSplitRequest::Swap(ReportSplitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportSplitRequest::InternalSwap(ReportSplitRequest* other) {
  std::swap(left_, other->left_);
  std::swap(right_, other->right_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReportSplitRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReportSplitRequest_descriptor_;
  metadata.reflection = ReportSplitRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReportSplitRequest

// optional .metapb.Region left = 1;
bool ReportSplitRequest::has_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReportSplitRequest::set_has_left() {
  _has_bits_[0] |= 0x00000001u;
}
void ReportSplitRequest::clear_has_left() {
  _has_bits_[0] &= ~0x00000001u;
}
void ReportSplitRequest::clear_left() {
  if (left_ != NULL) left_->::metapb::Region::Clear();
  clear_has_left();
}
const ::metapb::Region& ReportSplitRequest::left() const {
  // @@protoc_insertion_point(field_get:pdpb.ReportSplitRequest.left)
  return left_ != NULL ? *left_
                         : *::metapb::Region::internal_default_instance();
}
::metapb::Region* ReportSplitRequest::mutable_left() {
  set_has_left();
  if (left_ == NULL) {
    left_ = new ::metapb::Region;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.ReportSplitRequest.left)
  return left_;
}
::metapb::Region* ReportSplitRequest::release_left() {
  // @@protoc_insertion_point(field_release:pdpb.ReportSplitRequest.left)
  clear_has_left();
  ::metapb::Region* temp = left_;
  left_ = NULL;
  return temp;
}
void ReportSplitRequest::set_allocated_left(::metapb::Region* left) {
  delete left_;
  left_ = left;
  if (left) {
    set_has_left();
  } else {
    clear_has_left();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.ReportSplitRequest.left)
}

// optional .metapb.Region right = 2;
bool ReportSplitRequest::has_right() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ReportSplitRequest::set_has_right() {
  _has_bits_[0] |= 0x00000002u;
}
void ReportSplitRequest::clear_has_right() {
  _has_bits_[0] &= ~0x00000002u;
}
void ReportSplitRequest::clear_right() {
  if (right_ != NULL) right_->::metapb::Region::Clear();
  clear_has_right();
}
const ::metapb::Region& ReportSplitRequest::right() const {
  // @@protoc_insertion_point(field_get:pdpb.ReportSplitRequest.right)
  return right_ != NULL ? *right_
                         : *::metapb::Region::internal_default_instance();
}
::metapb::Region* ReportSplitRequest::mutable_right() {
  set_has_right();
  if (right_ == NULL) {
    right_ = new ::metapb::Region;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.ReportSplitRequest.right)
  return right_;
}
::metapb::Region* ReportSplitRequest::release_right() {
  // @@protoc_insertion_point(field_release:pdpb.ReportSplitRequest.right)
  clear_has_right();
  ::metapb::Region* temp = right_;
  right_ = NULL;
  return temp;
}
void ReportSplitRequest::set_allocated_right(::metapb::Region* right) {
  delete right_;
  right_ = right;
  if (right) {
    set_has_right();
  } else {
    clear_has_right();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.ReportSplitRequest.right)
}

inline const ReportSplitRequest* ReportSplitRequest::internal_default_instance() {
  return &ReportSplitRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportSplitResponse::ReportSplitResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.ReportSplitResponse)
}

void ReportSplitResponse::InitAsDefaultInstance() {
}

ReportSplitResponse::ReportSplitResponse(const ReportSplitResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.ReportSplitResponse)
}

void ReportSplitResponse::SharedCtor() {
  _cached_size_ = 0;
}

ReportSplitResponse::~ReportSplitResponse() {
  // @@protoc_insertion_point(destructor:pdpb.ReportSplitResponse)
  SharedDtor();
}

void ReportSplitResponse::SharedDtor() {
}

void ReportSplitResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReportSplitResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReportSplitResponse_descriptor_;
}

const ReportSplitResponse& ReportSplitResponse::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReportSplitResponse> ReportSplitResponse_default_instance_;

ReportSplitResponse* ReportSplitResponse::New(::google::protobuf::Arena* arena) const {
  ReportSplitResponse* n = new ReportSplitResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReportSplitResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.ReportSplitResponse)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReportSplitResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.ReportSplitResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.ReportSplitResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.ReportSplitResponse)
  return false;
#undef DO_
}

void ReportSplitResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.ReportSplitResponse)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.ReportSplitResponse)
}

::google::protobuf::uint8* ReportSplitResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.ReportSplitResponse)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.ReportSplitResponse)
  return target;
}

size_t ReportSplitResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.ReportSplitResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReportSplitResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.ReportSplitResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReportSplitResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportSplitResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.ReportSplitResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.ReportSplitResponse)
    UnsafeMergeFrom(*source);
  }
}

void ReportSplitResponse::MergeFrom(const ReportSplitResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.ReportSplitResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReportSplitResponse::UnsafeMergeFrom(const ReportSplitResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ReportSplitResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.ReportSplitResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportSplitResponse::CopyFrom(const ReportSplitResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.ReportSplitResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReportSplitResponse::IsInitialized() const {

  return true;
}

void ReportSplitResponse::Swap(ReportSplitResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReportSplitResponse::InternalSwap(ReportSplitResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReportSplitResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReportSplitResponse_descriptor_;
  metadata.reflection = ReportSplitResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReportSplitResponse

inline const ReportSplitResponse* ReportSplitResponse::internal_default_instance() {
  return &ReportSplitResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestHeader::kUuidFieldNumber;
const int RequestHeader::kClusterIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestHeader::RequestHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.RequestHeader)
}

void RequestHeader::InitAsDefaultInstance() {
}

RequestHeader::RequestHeader(const RequestHeader& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.RequestHeader)
}

void RequestHeader::SharedCtor() {
  _cached_size_ = 0;
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cluster_id_ = GOOGLE_ULONGLONG(0);
}

RequestHeader::~RequestHeader() {
  // @@protoc_insertion_point(destructor:pdpb.RequestHeader)
  SharedDtor();
}

void RequestHeader::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RequestHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestHeader::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestHeader_descriptor_;
}

const RequestHeader& RequestHeader::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RequestHeader> RequestHeader_default_instance_;

RequestHeader* RequestHeader::New(::google::protobuf::Arena* arena) const {
  RequestHeader* n = new RequestHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RequestHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.RequestHeader)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_uuid()) {
      uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    cluster_id_ = GOOGLE_ULONGLONG(0);
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RequestHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.RequestHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes uuid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_cluster_id;
        break;
      }

      // optional uint64 cluster_id = 2;
      case 2: {
        if (tag == 16) {
         parse_cluster_id:
          set_has_cluster_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cluster_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.RequestHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.RequestHeader)
  return false;
#undef DO_
}

void RequestHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.RequestHeader)
  // optional bytes uuid = 1;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uuid(), output);
  }

  // optional uint64 cluster_id = 2;
  if (has_cluster_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->cluster_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.RequestHeader)
}

::google::protobuf::uint8* RequestHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.RequestHeader)
  // optional bytes uuid = 1;
  if (has_uuid()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uuid(), target);
  }

  // optional uint64 cluster_id = 2;
  if (has_cluster_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->cluster_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.RequestHeader)
  return target;
}

size_t RequestHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.RequestHeader)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes uuid = 1;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->uuid());
    }

    // optional uint64 cluster_id = 2;
    if (has_cluster_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->cluster_id());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.RequestHeader)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RequestHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.RequestHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.RequestHeader)
    UnsafeMergeFrom(*source);
  }
}

void RequestHeader::MergeFrom(const RequestHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.RequestHeader)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RequestHeader::UnsafeMergeFrom(const RequestHeader& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uuid()) {
      set_has_uuid();
      uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
    }
    if (from.has_cluster_id()) {
      set_cluster_id(from.cluster_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RequestHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.RequestHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestHeader::CopyFrom(const RequestHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.RequestHeader)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RequestHeader::IsInitialized() const {

  return true;
}

void RequestHeader::Swap(RequestHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestHeader::InternalSwap(RequestHeader* other) {
  uuid_.Swap(&other->uuid_);
  std::swap(cluster_id_, other->cluster_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RequestHeader::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestHeader_descriptor_;
  metadata.reflection = RequestHeader_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestHeader

// optional bytes uuid = 1;
bool RequestHeader::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RequestHeader::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
void RequestHeader::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
void RequestHeader::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uuid();
}
const ::std::string& RequestHeader::uuid() const {
  // @@protoc_insertion_point(field_get:pdpb.RequestHeader.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestHeader::set_uuid(const ::std::string& value) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pdpb.RequestHeader.uuid)
}
void RequestHeader::set_uuid(const char* value) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pdpb.RequestHeader.uuid)
}
void RequestHeader::set_uuid(const void* value, size_t size) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pdpb.RequestHeader.uuid)
}
::std::string* RequestHeader::mutable_uuid() {
  set_has_uuid();
  // @@protoc_insertion_point(field_mutable:pdpb.RequestHeader.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestHeader::release_uuid() {
  // @@protoc_insertion_point(field_release:pdpb.RequestHeader.uuid)
  clear_has_uuid();
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestHeader::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    set_has_uuid();
  } else {
    clear_has_uuid();
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:pdpb.RequestHeader.uuid)
}

// optional uint64 cluster_id = 2;
bool RequestHeader::has_cluster_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RequestHeader::set_has_cluster_id() {
  _has_bits_[0] |= 0x00000002u;
}
void RequestHeader::clear_has_cluster_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void RequestHeader::clear_cluster_id() {
  cluster_id_ = GOOGLE_ULONGLONG(0);
  clear_has_cluster_id();
}
::google::protobuf::uint64 RequestHeader::cluster_id() const {
  // @@protoc_insertion_point(field_get:pdpb.RequestHeader.cluster_id)
  return cluster_id_;
}
void RequestHeader::set_cluster_id(::google::protobuf::uint64 value) {
  set_has_cluster_id();
  cluster_id_ = value;
  // @@protoc_insertion_point(field_set:pdpb.RequestHeader.cluster_id)
}

inline const RequestHeader* RequestHeader::internal_default_instance() {
  return &RequestHeader_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResponseHeader::kUuidFieldNumber;
const int ResponseHeader::kClusterIdFieldNumber;
const int ResponseHeader::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResponseHeader::ResponseHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.ResponseHeader)
}

void ResponseHeader::InitAsDefaultInstance() {
  error_ = const_cast< ::pdpb::Error*>(
      ::pdpb::Error::internal_default_instance());
}

ResponseHeader::ResponseHeader(const ResponseHeader& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.ResponseHeader)
}

void ResponseHeader::SharedCtor() {
  _cached_size_ = 0;
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = NULL;
  cluster_id_ = GOOGLE_ULONGLONG(0);
}

ResponseHeader::~ResponseHeader() {
  // @@protoc_insertion_point(destructor:pdpb.ResponseHeader)
  SharedDtor();
}

void ResponseHeader::SharedDtor() {
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ResponseHeader_default_instance_.get()) {
    delete error_;
  }
}

void ResponseHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResponseHeader::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResponseHeader_descriptor_;
}

const ResponseHeader& ResponseHeader::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ResponseHeader> ResponseHeader_default_instance_;

ResponseHeader* ResponseHeader::New(::google::protobuf::Arena* arena) const {
  ResponseHeader* n = new ResponseHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResponseHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.ResponseHeader)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_uuid()) {
      uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    cluster_id_ = GOOGLE_ULONGLONG(0);
    if (has_error()) {
      if (error_ != NULL) error_->::pdpb::Error::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ResponseHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.ResponseHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes uuid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_cluster_id;
        break;
      }

      // optional uint64 cluster_id = 2;
      case 2: {
        if (tag == 16) {
         parse_cluster_id:
          set_has_cluster_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &cluster_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_error;
        break;
      }

      // optional .pdpb.Error error = 3;
      case 3: {
        if (tag == 26) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.ResponseHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.ResponseHeader)
  return false;
#undef DO_
}

void ResponseHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.ResponseHeader)
  // optional bytes uuid = 1;
  if (has_uuid()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->uuid(), output);
  }

  // optional uint64 cluster_id = 2;
  if (has_cluster_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->cluster_id(), output);
  }

  // optional .pdpb.Error error = 3;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->error_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.ResponseHeader)
}

::google::protobuf::uint8* ResponseHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.ResponseHeader)
  // optional bytes uuid = 1;
  if (has_uuid()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->uuid(), target);
  }

  // optional uint64 cluster_id = 2;
  if (has_cluster_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->cluster_id(), target);
  }

  // optional .pdpb.Error error = 3;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->error_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.ResponseHeader)
  return target;
}

size_t ResponseHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.ResponseHeader)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes uuid = 1;
    if (has_uuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->uuid());
    }

    // optional uint64 cluster_id = 2;
    if (has_cluster_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->cluster_id());
    }

    // optional .pdpb.Error error = 3;
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->error_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResponseHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.ResponseHeader)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ResponseHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResponseHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.ResponseHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.ResponseHeader)
    UnsafeMergeFrom(*source);
  }
}

void ResponseHeader::MergeFrom(const ResponseHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.ResponseHeader)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ResponseHeader::UnsafeMergeFrom(const ResponseHeader& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uuid()) {
      set_has_uuid();
      uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
    }
    if (from.has_cluster_id()) {
      set_cluster_id(from.cluster_id());
    }
    if (from.has_error()) {
      mutable_error()->::pdpb::Error::MergeFrom(from.error());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ResponseHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.ResponseHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResponseHeader::CopyFrom(const ResponseHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.ResponseHeader)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ResponseHeader::IsInitialized() const {

  return true;
}

void ResponseHeader::Swap(ResponseHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResponseHeader::InternalSwap(ResponseHeader* other) {
  uuid_.Swap(&other->uuid_);
  std::swap(cluster_id_, other->cluster_id_);
  std::swap(error_, other->error_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResponseHeader::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResponseHeader_descriptor_;
  metadata.reflection = ResponseHeader_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponseHeader

// optional bytes uuid = 1;
bool ResponseHeader::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ResponseHeader::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
void ResponseHeader::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
void ResponseHeader::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uuid();
}
const ::std::string& ResponseHeader::uuid() const {
  // @@protoc_insertion_point(field_get:pdpb.ResponseHeader.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseHeader::set_uuid(const ::std::string& value) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pdpb.ResponseHeader.uuid)
}
void ResponseHeader::set_uuid(const char* value) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pdpb.ResponseHeader.uuid)
}
void ResponseHeader::set_uuid(const void* value, size_t size) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pdpb.ResponseHeader.uuid)
}
::std::string* ResponseHeader::mutable_uuid() {
  set_has_uuid();
  // @@protoc_insertion_point(field_mutable:pdpb.ResponseHeader.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResponseHeader::release_uuid() {
  // @@protoc_insertion_point(field_release:pdpb.ResponseHeader.uuid)
  clear_has_uuid();
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResponseHeader::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    set_has_uuid();
  } else {
    clear_has_uuid();
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:pdpb.ResponseHeader.uuid)
}

// optional uint64 cluster_id = 2;
bool ResponseHeader::has_cluster_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ResponseHeader::set_has_cluster_id() {
  _has_bits_[0] |= 0x00000002u;
}
void ResponseHeader::clear_has_cluster_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void ResponseHeader::clear_cluster_id() {
  cluster_id_ = GOOGLE_ULONGLONG(0);
  clear_has_cluster_id();
}
::google::protobuf::uint64 ResponseHeader::cluster_id() const {
  // @@protoc_insertion_point(field_get:pdpb.ResponseHeader.cluster_id)
  return cluster_id_;
}
void ResponseHeader::set_cluster_id(::google::protobuf::uint64 value) {
  set_has_cluster_id();
  cluster_id_ = value;
  // @@protoc_insertion_point(field_set:pdpb.ResponseHeader.cluster_id)
}

// optional .pdpb.Error error = 3;
bool ResponseHeader::has_error() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ResponseHeader::set_has_error() {
  _has_bits_[0] |= 0x00000004u;
}
void ResponseHeader::clear_has_error() {
  _has_bits_[0] &= ~0x00000004u;
}
void ResponseHeader::clear_error() {
  if (error_ != NULL) error_->::pdpb::Error::Clear();
  clear_has_error();
}
const ::pdpb::Error& ResponseHeader::error() const {
  // @@protoc_insertion_point(field_get:pdpb.ResponseHeader.error)
  return error_ != NULL ? *error_
                         : *::pdpb::Error::internal_default_instance();
}
::pdpb::Error* ResponseHeader::mutable_error() {
  set_has_error();
  if (error_ == NULL) {
    error_ = new ::pdpb::Error;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.ResponseHeader.error)
  return error_;
}
::pdpb::Error* ResponseHeader::release_error() {
  // @@protoc_insertion_point(field_release:pdpb.ResponseHeader.error)
  clear_has_error();
  ::pdpb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
void ResponseHeader::set_allocated_error(::pdpb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    set_has_error();
  } else {
    clear_has_error();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.ResponseHeader.error)
}

inline const ResponseHeader* ResponseHeader::internal_default_instance() {
  return &ResponseHeader_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kHeaderFieldNumber;
const int Request::kCmdTypeFieldNumber;
const int Request::kTsoFieldNumber;
const int Request::kBootstrapFieldNumber;
const int Request::kIsBootstrappedFieldNumber;
const int Request::kAllocIdFieldNumber;
const int Request::kGetStoreFieldNumber;
const int Request::kPutStoreFieldNumber;
const int Request::kAskSplitFieldNumber;
const int Request::kGetRegionFieldNumber;
const int Request::kRegionHeartbeatFieldNumber;
const int Request::kGetClusterConfigFieldNumber;
const int Request::kPutClusterConfigFieldNumber;
const int Request::kStoreHeartbeatFieldNumber;
const int Request::kReportSplitFieldNumber;
const int Request::kGetRegionByIdFieldNumber;
const int Request::kGetPdMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.Request)
}

void Request::InitAsDefaultInstance() {
  header_ = const_cast< ::pdpb::RequestHeader*>(
      ::pdpb::RequestHeader::internal_default_instance());
  tso_ = const_cast< ::pdpb::TsoRequest*>(
      ::pdpb::TsoRequest::internal_default_instance());
  bootstrap_ = const_cast< ::pdpb::BootstrapRequest*>(
      ::pdpb::BootstrapRequest::internal_default_instance());
  is_bootstrapped_ = const_cast< ::pdpb::IsBootstrappedRequest*>(
      ::pdpb::IsBootstrappedRequest::internal_default_instance());
  alloc_id_ = const_cast< ::pdpb::AllocIdRequest*>(
      ::pdpb::AllocIdRequest::internal_default_instance());
  get_store_ = const_cast< ::pdpb::GetStoreRequest*>(
      ::pdpb::GetStoreRequest::internal_default_instance());
  put_store_ = const_cast< ::pdpb::PutStoreRequest*>(
      ::pdpb::PutStoreRequest::internal_default_instance());
  ask_split_ = const_cast< ::pdpb::AskSplitRequest*>(
      ::pdpb::AskSplitRequest::internal_default_instance());
  get_region_ = const_cast< ::pdpb::GetRegionRequest*>(
      ::pdpb::GetRegionRequest::internal_default_instance());
  region_heartbeat_ = const_cast< ::pdpb::RegionHeartbeatRequest*>(
      ::pdpb::RegionHeartbeatRequest::internal_default_instance());
  get_cluster_config_ = const_cast< ::pdpb::GetClusterConfigRequest*>(
      ::pdpb::GetClusterConfigRequest::internal_default_instance());
  put_cluster_config_ = const_cast< ::pdpb::PutClusterConfigRequest*>(
      ::pdpb::PutClusterConfigRequest::internal_default_instance());
  store_heartbeat_ = const_cast< ::pdpb::StoreHeartbeatRequest*>(
      ::pdpb::StoreHeartbeatRequest::internal_default_instance());
  report_split_ = const_cast< ::pdpb::ReportSplitRequest*>(
      ::pdpb::ReportSplitRequest::internal_default_instance());
  get_region_by_id_ = const_cast< ::pdpb::GetRegionByIDRequest*>(
      ::pdpb::GetRegionByIDRequest::internal_default_instance());
  get_pd_members_ = const_cast< ::pdpb::GetPDMembersRequest*>(
      ::pdpb::GetPDMembersRequest::internal_default_instance());
}

Request::Request(const Request& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.Request)
}

void Request::SharedCtor() {
  _cached_size_ = 0;
  header_ = NULL;
  tso_ = NULL;
  bootstrap_ = NULL;
  is_bootstrapped_ = NULL;
  alloc_id_ = NULL;
  get_store_ = NULL;
  put_store_ = NULL;
  ask_split_ = NULL;
  get_region_ = NULL;
  region_heartbeat_ = NULL;
  get_cluster_config_ = NULL;
  put_cluster_config_ = NULL;
  store_heartbeat_ = NULL;
  report_split_ = NULL;
  get_region_by_id_ = NULL;
  get_pd_members_ = NULL;
  cmd_type_ = 0;
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:pdpb.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  if (this != &Request_default_instance_.get()) {
    delete header_;
    delete tso_;
    delete bootstrap_;
    delete is_bootstrapped_;
    delete alloc_id_;
    delete get_store_;
    delete put_store_;
    delete ask_split_;
    delete get_region_;
    delete region_heartbeat_;
    delete get_cluster_config_;
    delete put_cluster_config_;
    delete store_heartbeat_;
    delete report_split_;
    delete get_region_by_id_;
    delete get_pd_members_;
  }
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_descriptor_;
}

const Request& Request::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Request> Request_default_instance_;

Request* Request::New(::google::protobuf::Arena* arena) const {
  Request* n = new Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.Request)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_header()) {
      if (header_ != NULL) header_->::pdpb::RequestHeader::Clear();
    }
    cmd_type_ = 0;
    if (has_tso()) {
      if (tso_ != NULL) tso_->::pdpb::TsoRequest::Clear();
    }
    if (has_bootstrap()) {
      if (bootstrap_ != NULL) bootstrap_->::pdpb::BootstrapRequest::Clear();
    }
    if (has_is_bootstrapped()) {
      if (is_bootstrapped_ != NULL) is_bootstrapped_->::pdpb::IsBootstrappedRequest::Clear();
    }
    if (has_alloc_id()) {
      if (alloc_id_ != NULL) alloc_id_->::pdpb::AllocIdRequest::Clear();
    }
    if (has_get_store()) {
      if (get_store_ != NULL) get_store_->::pdpb::GetStoreRequest::Clear();
    }
    if (has_put_store()) {
      if (put_store_ != NULL) put_store_->::pdpb::PutStoreRequest::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    if (has_ask_split()) {
      if (ask_split_ != NULL) ask_split_->::pdpb::AskSplitRequest::Clear();
    }
    if (has_get_region()) {
      if (get_region_ != NULL) get_region_->::pdpb::GetRegionRequest::Clear();
    }
    if (has_region_heartbeat()) {
      if (region_heartbeat_ != NULL) region_heartbeat_->::pdpb::RegionHeartbeatRequest::Clear();
    }
    if (has_get_cluster_config()) {
      if (get_cluster_config_ != NULL) get_cluster_config_->::pdpb::GetClusterConfigRequest::Clear();
    }
    if (has_put_cluster_config()) {
      if (put_cluster_config_ != NULL) put_cluster_config_->::pdpb::PutClusterConfigRequest::Clear();
    }
    if (has_store_heartbeat()) {
      if (store_heartbeat_ != NULL) store_heartbeat_->::pdpb::StoreHeartbeatRequest::Clear();
    }
    if (has_report_split()) {
      if (report_split_ != NULL) report_split_->::pdpb::ReportSplitRequest::Clear();
    }
    if (has_get_region_by_id()) {
      if (get_region_by_id_ != NULL) get_region_by_id_->::pdpb::GetRegionByIDRequest::Clear();
    }
  }
  if (has_get_pd_members()) {
    if (get_pd_members_ != NULL) get_pd_members_->::pdpb::GetPDMembersRequest::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pdpb.RequestHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_cmd_type;
        break;
      }

      // optional .pdpb.CommandType cmd_type = 2;
      case 2: {
        if (tag == 16) {
         parse_cmd_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pdpb::CommandType_IsValid(value)) {
            set_cmd_type(static_cast< ::pdpb::CommandType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_tso;
        break;
      }

      // optional .pdpb.TsoRequest tso = 3;
      case 3: {
        if (tag == 26) {
         parse_tso:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tso()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_bootstrap;
        break;
      }

      // optional .pdpb.BootstrapRequest bootstrap = 4;
      case 4: {
        if (tag == 34) {
         parse_bootstrap:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bootstrap()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_is_bootstrapped;
        break;
      }

      // optional .pdpb.IsBootstrappedRequest is_bootstrapped = 5;
      case 5: {
        if (tag == 42) {
         parse_is_bootstrapped:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_is_bootstrapped()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_alloc_id;
        break;
      }

      // optional .pdpb.AllocIdRequest alloc_id = 6;
      case 6: {
        if (tag == 50) {
         parse_alloc_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_alloc_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_get_store;
        break;
      }

      // optional .pdpb.GetStoreRequest get_store = 7;
      case 7: {
        if (tag == 58) {
         parse_get_store:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_store()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_put_store;
        break;
      }

      // optional .pdpb.PutStoreRequest put_store = 8;
      case 8: {
        if (tag == 66) {
         parse_put_store:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_put_store()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_ask_split;
        break;
      }

      // optional .pdpb.AskSplitRequest ask_split = 9;
      case 9: {
        if (tag == 74) {
         parse_ask_split:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ask_split()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_get_region;
        break;
      }

      // optional .pdpb.GetRegionRequest get_region = 10;
      case 10: {
        if (tag == 82) {
         parse_get_region:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_region()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_region_heartbeat;
        break;
      }

      // optional .pdpb.RegionHeartbeatRequest region_heartbeat = 11;
      case 11: {
        if (tag == 90) {
         parse_region_heartbeat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_region_heartbeat()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_get_cluster_config;
        break;
      }

      // optional .pdpb.GetClusterConfigRequest get_cluster_config = 12;
      case 12: {
        if (tag == 98) {
         parse_get_cluster_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_cluster_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_put_cluster_config;
        break;
      }

      // optional .pdpb.PutClusterConfigRequest put_cluster_config = 13;
      case 13: {
        if (tag == 106) {
         parse_put_cluster_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_put_cluster_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_store_heartbeat;
        break;
      }

      // optional .pdpb.StoreHeartbeatRequest store_heartbeat = 14;
      case 14: {
        if (tag == 114) {
         parse_store_heartbeat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_store_heartbeat()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_report_split;
        break;
      }

      // optional .pdpb.ReportSplitRequest report_split = 15;
      case 15: {
        if (tag == 122) {
         parse_report_split:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_report_split()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_get_region_by_id;
        break;
      }

      // optional .pdpb.GetRegionByIDRequest get_region_by_id = 16;
      case 16: {
        if (tag == 130) {
         parse_get_region_by_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_region_by_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_get_pd_members;
        break;
      }

      // optional .pdpb.GetPDMembersRequest get_pd_members = 17;
      case 17: {
        if (tag == 138) {
         parse_get_pd_members:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_pd_members()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.Request)
  // optional .pdpb.RequestHeader header = 1;
  if (has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional .pdpb.CommandType cmd_type = 2;
  if (has_cmd_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->cmd_type(), output);
  }

  // optional .pdpb.TsoRequest tso = 3;
  if (has_tso()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->tso_, output);
  }

  // optional .pdpb.BootstrapRequest bootstrap = 4;
  if (has_bootstrap()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->bootstrap_, output);
  }

  // optional .pdpb.IsBootstrappedRequest is_bootstrapped = 5;
  if (has_is_bootstrapped()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->is_bootstrapped_, output);
  }

  // optional .pdpb.AllocIdRequest alloc_id = 6;
  if (has_alloc_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->alloc_id_, output);
  }

  // optional .pdpb.GetStoreRequest get_store = 7;
  if (has_get_store()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->get_store_, output);
  }

  // optional .pdpb.PutStoreRequest put_store = 8;
  if (has_put_store()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->put_store_, output);
  }

  // optional .pdpb.AskSplitRequest ask_split = 9;
  if (has_ask_split()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->ask_split_, output);
  }

  // optional .pdpb.GetRegionRequest get_region = 10;
  if (has_get_region()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->get_region_, output);
  }

  // optional .pdpb.RegionHeartbeatRequest region_heartbeat = 11;
  if (has_region_heartbeat()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->region_heartbeat_, output);
  }

  // optional .pdpb.GetClusterConfigRequest get_cluster_config = 12;
  if (has_get_cluster_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->get_cluster_config_, output);
  }

  // optional .pdpb.PutClusterConfigRequest put_cluster_config = 13;
  if (has_put_cluster_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->put_cluster_config_, output);
  }

  // optional .pdpb.StoreHeartbeatRequest store_heartbeat = 14;
  if (has_store_heartbeat()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->store_heartbeat_, output);
  }

  // optional .pdpb.ReportSplitRequest report_split = 15;
  if (has_report_split()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->report_split_, output);
  }

  // optional .pdpb.GetRegionByIDRequest get_region_by_id = 16;
  if (has_get_region_by_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->get_region_by_id_, output);
  }

  // optional .pdpb.GetPDMembersRequest get_pd_members = 17;
  if (has_get_pd_members()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->get_pd_members_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.Request)
  // optional .pdpb.RequestHeader header = 1;
  if (has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, false, target);
  }

  // optional .pdpb.CommandType cmd_type = 2;
  if (has_cmd_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->cmd_type(), target);
  }

  // optional .pdpb.TsoRequest tso = 3;
  if (has_tso()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->tso_, false, target);
  }

  // optional .pdpb.BootstrapRequest bootstrap = 4;
  if (has_bootstrap()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->bootstrap_, false, target);
  }

  // optional .pdpb.IsBootstrappedRequest is_bootstrapped = 5;
  if (has_is_bootstrapped()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->is_bootstrapped_, false, target);
  }

  // optional .pdpb.AllocIdRequest alloc_id = 6;
  if (has_alloc_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->alloc_id_, false, target);
  }

  // optional .pdpb.GetStoreRequest get_store = 7;
  if (has_get_store()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->get_store_, false, target);
  }

  // optional .pdpb.PutStoreRequest put_store = 8;
  if (has_put_store()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->put_store_, false, target);
  }

  // optional .pdpb.AskSplitRequest ask_split = 9;
  if (has_ask_split()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->ask_split_, false, target);
  }

  // optional .pdpb.GetRegionRequest get_region = 10;
  if (has_get_region()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->get_region_, false, target);
  }

  // optional .pdpb.RegionHeartbeatRequest region_heartbeat = 11;
  if (has_region_heartbeat()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->region_heartbeat_, false, target);
  }

  // optional .pdpb.GetClusterConfigRequest get_cluster_config = 12;
  if (has_get_cluster_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->get_cluster_config_, false, target);
  }

  // optional .pdpb.PutClusterConfigRequest put_cluster_config = 13;
  if (has_put_cluster_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->put_cluster_config_, false, target);
  }

  // optional .pdpb.StoreHeartbeatRequest store_heartbeat = 14;
  if (has_store_heartbeat()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->store_heartbeat_, false, target);
  }

  // optional .pdpb.ReportSplitRequest report_split = 15;
  if (has_report_split()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->report_split_, false, target);
  }

  // optional .pdpb.GetRegionByIDRequest get_region_by_id = 16;
  if (has_get_region_by_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *this->get_region_by_id_, false, target);
  }

  // optional .pdpb.GetPDMembersRequest get_pd_members = 17;
  if (has_get_pd_members()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, *this->get_pd_members_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.Request)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional .pdpb.RequestHeader header = 1;
    if (has_header()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->header_);
    }

    // optional .pdpb.CommandType cmd_type = 2;
    if (has_cmd_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd_type());
    }

    // optional .pdpb.TsoRequest tso = 3;
    if (has_tso()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->tso_);
    }

    // optional .pdpb.BootstrapRequest bootstrap = 4;
    if (has_bootstrap()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bootstrap_);
    }

    // optional .pdpb.IsBootstrappedRequest is_bootstrapped = 5;
    if (has_is_bootstrapped()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->is_bootstrapped_);
    }

    // optional .pdpb.AllocIdRequest alloc_id = 6;
    if (has_alloc_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->alloc_id_);
    }

    // optional .pdpb.GetStoreRequest get_store = 7;
    if (has_get_store()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->get_store_);
    }

    // optional .pdpb.PutStoreRequest put_store = 8;
    if (has_put_store()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->put_store_);
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .pdpb.AskSplitRequest ask_split = 9;
    if (has_ask_split()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->ask_split_);
    }

    // optional .pdpb.GetRegionRequest get_region = 10;
    if (has_get_region()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->get_region_);
    }

    // optional .pdpb.RegionHeartbeatRequest region_heartbeat = 11;
    if (has_region_heartbeat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->region_heartbeat_);
    }

    // optional .pdpb.GetClusterConfigRequest get_cluster_config = 12;
    if (has_get_cluster_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->get_cluster_config_);
    }

    // optional .pdpb.PutClusterConfigRequest put_cluster_config = 13;
    if (has_put_cluster_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->put_cluster_config_);
    }

    // optional .pdpb.StoreHeartbeatRequest store_heartbeat = 14;
    if (has_store_heartbeat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->store_heartbeat_);
    }

    // optional .pdpb.ReportSplitRequest report_split = 15;
    if (has_report_split()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->report_split_);
    }

    // optional .pdpb.GetRegionByIDRequest get_region_by_id = 16;
    if (has_get_region_by_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->get_region_by_id_);
    }

  }
  // optional .pdpb.GetPDMembersRequest get_pd_members = 17;
  if (has_get_pd_members()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->get_pd_members_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.Request)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.Request)
    UnsafeMergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.Request)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Request::UnsafeMergeFrom(const Request& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_header()) {
      mutable_header()->::pdpb::RequestHeader::MergeFrom(from.header());
    }
    if (from.has_cmd_type()) {
      set_cmd_type(from.cmd_type());
    }
    if (from.has_tso()) {
      mutable_tso()->::pdpb::TsoRequest::MergeFrom(from.tso());
    }
    if (from.has_bootstrap()) {
      mutable_bootstrap()->::pdpb::BootstrapRequest::MergeFrom(from.bootstrap());
    }
    if (from.has_is_bootstrapped()) {
      mutable_is_bootstrapped()->::pdpb::IsBootstrappedRequest::MergeFrom(from.is_bootstrapped());
    }
    if (from.has_alloc_id()) {
      mutable_alloc_id()->::pdpb::AllocIdRequest::MergeFrom(from.alloc_id());
    }
    if (from.has_get_store()) {
      mutable_get_store()->::pdpb::GetStoreRequest::MergeFrom(from.get_store());
    }
    if (from.has_put_store()) {
      mutable_put_store()->::pdpb::PutStoreRequest::MergeFrom(from.put_store());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_ask_split()) {
      mutable_ask_split()->::pdpb::AskSplitRequest::MergeFrom(from.ask_split());
    }
    if (from.has_get_region()) {
      mutable_get_region()->::pdpb::GetRegionRequest::MergeFrom(from.get_region());
    }
    if (from.has_region_heartbeat()) {
      mutable_region_heartbeat()->::pdpb::RegionHeartbeatRequest::MergeFrom(from.region_heartbeat());
    }
    if (from.has_get_cluster_config()) {
      mutable_get_cluster_config()->::pdpb::GetClusterConfigRequest::MergeFrom(from.get_cluster_config());
    }
    if (from.has_put_cluster_config()) {
      mutable_put_cluster_config()->::pdpb::PutClusterConfigRequest::MergeFrom(from.put_cluster_config());
    }
    if (from.has_store_heartbeat()) {
      mutable_store_heartbeat()->::pdpb::StoreHeartbeatRequest::MergeFrom(from.store_heartbeat());
    }
    if (from.has_report_split()) {
      mutable_report_split()->::pdpb::ReportSplitRequest::MergeFrom(from.report_split());
    }
    if (from.has_get_region_by_id()) {
      mutable_get_region_by_id()->::pdpb::GetRegionByIDRequest::MergeFrom(from.get_region_by_id());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_get_pd_members()) {
      mutable_get_pd_members()->::pdpb::GetPDMembersRequest::MergeFrom(from.get_pd_members());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.Request)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Request::IsInitialized() const {

  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  std::swap(header_, other->header_);
  std::swap(cmd_type_, other->cmd_type_);
  std::swap(tso_, other->tso_);
  std::swap(bootstrap_, other->bootstrap_);
  std::swap(is_bootstrapped_, other->is_bootstrapped_);
  std::swap(alloc_id_, other->alloc_id_);
  std::swap(get_store_, other->get_store_);
  std::swap(put_store_, other->put_store_);
  std::swap(ask_split_, other->ask_split_);
  std::swap(get_region_, other->get_region_);
  std::swap(region_heartbeat_, other->region_heartbeat_);
  std::swap(get_cluster_config_, other->get_cluster_config_);
  std::swap(put_cluster_config_, other->put_cluster_config_);
  std::swap(store_heartbeat_, other->store_heartbeat_);
  std::swap(report_split_, other->report_split_);
  std::swap(get_region_by_id_, other->get_region_by_id_);
  std::swap(get_pd_members_, other->get_pd_members_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_descriptor_;
  metadata.reflection = Request_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Request

// optional .pdpb.RequestHeader header = 1;
bool Request::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
void Request::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request::clear_header() {
  if (header_ != NULL) header_->::pdpb::RequestHeader::Clear();
  clear_has_header();
}
const ::pdpb::RequestHeader& Request::header() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.header)
  return header_ != NULL ? *header_
                         : *::pdpb::RequestHeader::internal_default_instance();
}
::pdpb::RequestHeader* Request::mutable_header() {
  set_has_header();
  if (header_ == NULL) {
    header_ = new ::pdpb::RequestHeader;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.header)
  return header_;
}
::pdpb::RequestHeader* Request::release_header() {
  // @@protoc_insertion_point(field_release:pdpb.Request.header)
  clear_has_header();
  ::pdpb::RequestHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void Request::set_allocated_header(::pdpb::RequestHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.header)
}

// optional .pdpb.CommandType cmd_type = 2;
bool Request::has_cmd_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Request::set_has_cmd_type() {
  _has_bits_[0] |= 0x00000002u;
}
void Request::clear_has_cmd_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void Request::clear_cmd_type() {
  cmd_type_ = 0;
  clear_has_cmd_type();
}
::pdpb::CommandType Request::cmd_type() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.cmd_type)
  return static_cast< ::pdpb::CommandType >(cmd_type_);
}
void Request::set_cmd_type(::pdpb::CommandType value) {
  assert(::pdpb::CommandType_IsValid(value));
  set_has_cmd_type();
  cmd_type_ = value;
  // @@protoc_insertion_point(field_set:pdpb.Request.cmd_type)
}

// optional .pdpb.TsoRequest tso = 3;
bool Request::has_tso() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Request::set_has_tso() {
  _has_bits_[0] |= 0x00000004u;
}
void Request::clear_has_tso() {
  _has_bits_[0] &= ~0x00000004u;
}
void Request::clear_tso() {
  if (tso_ != NULL) tso_->::pdpb::TsoRequest::Clear();
  clear_has_tso();
}
const ::pdpb::TsoRequest& Request::tso() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.tso)
  return tso_ != NULL ? *tso_
                         : *::pdpb::TsoRequest::internal_default_instance();
}
::pdpb::TsoRequest* Request::mutable_tso() {
  set_has_tso();
  if (tso_ == NULL) {
    tso_ = new ::pdpb::TsoRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.tso)
  return tso_;
}
::pdpb::TsoRequest* Request::release_tso() {
  // @@protoc_insertion_point(field_release:pdpb.Request.tso)
  clear_has_tso();
  ::pdpb::TsoRequest* temp = tso_;
  tso_ = NULL;
  return temp;
}
void Request::set_allocated_tso(::pdpb::TsoRequest* tso) {
  delete tso_;
  tso_ = tso;
  if (tso) {
    set_has_tso();
  } else {
    clear_has_tso();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.tso)
}

// optional .pdpb.BootstrapRequest bootstrap = 4;
bool Request::has_bootstrap() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Request::set_has_bootstrap() {
  _has_bits_[0] |= 0x00000008u;
}
void Request::clear_has_bootstrap() {
  _has_bits_[0] &= ~0x00000008u;
}
void Request::clear_bootstrap() {
  if (bootstrap_ != NULL) bootstrap_->::pdpb::BootstrapRequest::Clear();
  clear_has_bootstrap();
}
const ::pdpb::BootstrapRequest& Request::bootstrap() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.bootstrap)
  return bootstrap_ != NULL ? *bootstrap_
                         : *::pdpb::BootstrapRequest::internal_default_instance();
}
::pdpb::BootstrapRequest* Request::mutable_bootstrap() {
  set_has_bootstrap();
  if (bootstrap_ == NULL) {
    bootstrap_ = new ::pdpb::BootstrapRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.bootstrap)
  return bootstrap_;
}
::pdpb::BootstrapRequest* Request::release_bootstrap() {
  // @@protoc_insertion_point(field_release:pdpb.Request.bootstrap)
  clear_has_bootstrap();
  ::pdpb::BootstrapRequest* temp = bootstrap_;
  bootstrap_ = NULL;
  return temp;
}
void Request::set_allocated_bootstrap(::pdpb::BootstrapRequest* bootstrap) {
  delete bootstrap_;
  bootstrap_ = bootstrap;
  if (bootstrap) {
    set_has_bootstrap();
  } else {
    clear_has_bootstrap();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.bootstrap)
}

// optional .pdpb.IsBootstrappedRequest is_bootstrapped = 5;
bool Request::has_is_bootstrapped() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Request::set_has_is_bootstrapped() {
  _has_bits_[0] |= 0x00000010u;
}
void Request::clear_has_is_bootstrapped() {
  _has_bits_[0] &= ~0x00000010u;
}
void Request::clear_is_bootstrapped() {
  if (is_bootstrapped_ != NULL) is_bootstrapped_->::pdpb::IsBootstrappedRequest::Clear();
  clear_has_is_bootstrapped();
}
const ::pdpb::IsBootstrappedRequest& Request::is_bootstrapped() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.is_bootstrapped)
  return is_bootstrapped_ != NULL ? *is_bootstrapped_
                         : *::pdpb::IsBootstrappedRequest::internal_default_instance();
}
::pdpb::IsBootstrappedRequest* Request::mutable_is_bootstrapped() {
  set_has_is_bootstrapped();
  if (is_bootstrapped_ == NULL) {
    is_bootstrapped_ = new ::pdpb::IsBootstrappedRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.is_bootstrapped)
  return is_bootstrapped_;
}
::pdpb::IsBootstrappedRequest* Request::release_is_bootstrapped() {
  // @@protoc_insertion_point(field_release:pdpb.Request.is_bootstrapped)
  clear_has_is_bootstrapped();
  ::pdpb::IsBootstrappedRequest* temp = is_bootstrapped_;
  is_bootstrapped_ = NULL;
  return temp;
}
void Request::set_allocated_is_bootstrapped(::pdpb::IsBootstrappedRequest* is_bootstrapped) {
  delete is_bootstrapped_;
  is_bootstrapped_ = is_bootstrapped;
  if (is_bootstrapped) {
    set_has_is_bootstrapped();
  } else {
    clear_has_is_bootstrapped();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.is_bootstrapped)
}

// optional .pdpb.AllocIdRequest alloc_id = 6;
bool Request::has_alloc_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Request::set_has_alloc_id() {
  _has_bits_[0] |= 0x00000020u;
}
void Request::clear_has_alloc_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void Request::clear_alloc_id() {
  if (alloc_id_ != NULL) alloc_id_->::pdpb::AllocIdRequest::Clear();
  clear_has_alloc_id();
}
const ::pdpb::AllocIdRequest& Request::alloc_id() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.alloc_id)
  return alloc_id_ != NULL ? *alloc_id_
                         : *::pdpb::AllocIdRequest::internal_default_instance();
}
::pdpb::AllocIdRequest* Request::mutable_alloc_id() {
  set_has_alloc_id();
  if (alloc_id_ == NULL) {
    alloc_id_ = new ::pdpb::AllocIdRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.alloc_id)
  return alloc_id_;
}
::pdpb::AllocIdRequest* Request::release_alloc_id() {
  // @@protoc_insertion_point(field_release:pdpb.Request.alloc_id)
  clear_has_alloc_id();
  ::pdpb::AllocIdRequest* temp = alloc_id_;
  alloc_id_ = NULL;
  return temp;
}
void Request::set_allocated_alloc_id(::pdpb::AllocIdRequest* alloc_id) {
  delete alloc_id_;
  alloc_id_ = alloc_id;
  if (alloc_id) {
    set_has_alloc_id();
  } else {
    clear_has_alloc_id();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.alloc_id)
}

// optional .pdpb.GetStoreRequest get_store = 7;
bool Request::has_get_store() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Request::set_has_get_store() {
  _has_bits_[0] |= 0x00000040u;
}
void Request::clear_has_get_store() {
  _has_bits_[0] &= ~0x00000040u;
}
void Request::clear_get_store() {
  if (get_store_ != NULL) get_store_->::pdpb::GetStoreRequest::Clear();
  clear_has_get_store();
}
const ::pdpb::GetStoreRequest& Request::get_store() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.get_store)
  return get_store_ != NULL ? *get_store_
                         : *::pdpb::GetStoreRequest::internal_default_instance();
}
::pdpb::GetStoreRequest* Request::mutable_get_store() {
  set_has_get_store();
  if (get_store_ == NULL) {
    get_store_ = new ::pdpb::GetStoreRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.get_store)
  return get_store_;
}
::pdpb::GetStoreRequest* Request::release_get_store() {
  // @@protoc_insertion_point(field_release:pdpb.Request.get_store)
  clear_has_get_store();
  ::pdpb::GetStoreRequest* temp = get_store_;
  get_store_ = NULL;
  return temp;
}
void Request::set_allocated_get_store(::pdpb::GetStoreRequest* get_store) {
  delete get_store_;
  get_store_ = get_store;
  if (get_store) {
    set_has_get_store();
  } else {
    clear_has_get_store();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.get_store)
}

// optional .pdpb.PutStoreRequest put_store = 8;
bool Request::has_put_store() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Request::set_has_put_store() {
  _has_bits_[0] |= 0x00000080u;
}
void Request::clear_has_put_store() {
  _has_bits_[0] &= ~0x00000080u;
}
void Request::clear_put_store() {
  if (put_store_ != NULL) put_store_->::pdpb::PutStoreRequest::Clear();
  clear_has_put_store();
}
const ::pdpb::PutStoreRequest& Request::put_store() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.put_store)
  return put_store_ != NULL ? *put_store_
                         : *::pdpb::PutStoreRequest::internal_default_instance();
}
::pdpb::PutStoreRequest* Request::mutable_put_store() {
  set_has_put_store();
  if (put_store_ == NULL) {
    put_store_ = new ::pdpb::PutStoreRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.put_store)
  return put_store_;
}
::pdpb::PutStoreRequest* Request::release_put_store() {
  // @@protoc_insertion_point(field_release:pdpb.Request.put_store)
  clear_has_put_store();
  ::pdpb::PutStoreRequest* temp = put_store_;
  put_store_ = NULL;
  return temp;
}
void Request::set_allocated_put_store(::pdpb::PutStoreRequest* put_store) {
  delete put_store_;
  put_store_ = put_store;
  if (put_store) {
    set_has_put_store();
  } else {
    clear_has_put_store();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.put_store)
}

// optional .pdpb.AskSplitRequest ask_split = 9;
bool Request::has_ask_split() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Request::set_has_ask_split() {
  _has_bits_[0] |= 0x00000100u;
}
void Request::clear_has_ask_split() {
  _has_bits_[0] &= ~0x00000100u;
}
void Request::clear_ask_split() {
  if (ask_split_ != NULL) ask_split_->::pdpb::AskSplitRequest::Clear();
  clear_has_ask_split();
}
const ::pdpb::AskSplitRequest& Request::ask_split() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.ask_split)
  return ask_split_ != NULL ? *ask_split_
                         : *::pdpb::AskSplitRequest::internal_default_instance();
}
::pdpb::AskSplitRequest* Request::mutable_ask_split() {
  set_has_ask_split();
  if (ask_split_ == NULL) {
    ask_split_ = new ::pdpb::AskSplitRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.ask_split)
  return ask_split_;
}
::pdpb::AskSplitRequest* Request::release_ask_split() {
  // @@protoc_insertion_point(field_release:pdpb.Request.ask_split)
  clear_has_ask_split();
  ::pdpb::AskSplitRequest* temp = ask_split_;
  ask_split_ = NULL;
  return temp;
}
void Request::set_allocated_ask_split(::pdpb::AskSplitRequest* ask_split) {
  delete ask_split_;
  ask_split_ = ask_split;
  if (ask_split) {
    set_has_ask_split();
  } else {
    clear_has_ask_split();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.ask_split)
}

// optional .pdpb.GetRegionRequest get_region = 10;
bool Request::has_get_region() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Request::set_has_get_region() {
  _has_bits_[0] |= 0x00000200u;
}
void Request::clear_has_get_region() {
  _has_bits_[0] &= ~0x00000200u;
}
void Request::clear_get_region() {
  if (get_region_ != NULL) get_region_->::pdpb::GetRegionRequest::Clear();
  clear_has_get_region();
}
const ::pdpb::GetRegionRequest& Request::get_region() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.get_region)
  return get_region_ != NULL ? *get_region_
                         : *::pdpb::GetRegionRequest::internal_default_instance();
}
::pdpb::GetRegionRequest* Request::mutable_get_region() {
  set_has_get_region();
  if (get_region_ == NULL) {
    get_region_ = new ::pdpb::GetRegionRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.get_region)
  return get_region_;
}
::pdpb::GetRegionRequest* Request::release_get_region() {
  // @@protoc_insertion_point(field_release:pdpb.Request.get_region)
  clear_has_get_region();
  ::pdpb::GetRegionRequest* temp = get_region_;
  get_region_ = NULL;
  return temp;
}
void Request::set_allocated_get_region(::pdpb::GetRegionRequest* get_region) {
  delete get_region_;
  get_region_ = get_region;
  if (get_region) {
    set_has_get_region();
  } else {
    clear_has_get_region();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.get_region)
}

// optional .pdpb.RegionHeartbeatRequest region_heartbeat = 11;
bool Request::has_region_heartbeat() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Request::set_has_region_heartbeat() {
  _has_bits_[0] |= 0x00000400u;
}
void Request::clear_has_region_heartbeat() {
  _has_bits_[0] &= ~0x00000400u;
}
void Request::clear_region_heartbeat() {
  if (region_heartbeat_ != NULL) region_heartbeat_->::pdpb::RegionHeartbeatRequest::Clear();
  clear_has_region_heartbeat();
}
const ::pdpb::RegionHeartbeatRequest& Request::region_heartbeat() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.region_heartbeat)
  return region_heartbeat_ != NULL ? *region_heartbeat_
                         : *::pdpb::RegionHeartbeatRequest::internal_default_instance();
}
::pdpb::RegionHeartbeatRequest* Request::mutable_region_heartbeat() {
  set_has_region_heartbeat();
  if (region_heartbeat_ == NULL) {
    region_heartbeat_ = new ::pdpb::RegionHeartbeatRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.region_heartbeat)
  return region_heartbeat_;
}
::pdpb::RegionHeartbeatRequest* Request::release_region_heartbeat() {
  // @@protoc_insertion_point(field_release:pdpb.Request.region_heartbeat)
  clear_has_region_heartbeat();
  ::pdpb::RegionHeartbeatRequest* temp = region_heartbeat_;
  region_heartbeat_ = NULL;
  return temp;
}
void Request::set_allocated_region_heartbeat(::pdpb::RegionHeartbeatRequest* region_heartbeat) {
  delete region_heartbeat_;
  region_heartbeat_ = region_heartbeat;
  if (region_heartbeat) {
    set_has_region_heartbeat();
  } else {
    clear_has_region_heartbeat();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.region_heartbeat)
}

// optional .pdpb.GetClusterConfigRequest get_cluster_config = 12;
bool Request::has_get_cluster_config() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Request::set_has_get_cluster_config() {
  _has_bits_[0] |= 0x00000800u;
}
void Request::clear_has_get_cluster_config() {
  _has_bits_[0] &= ~0x00000800u;
}
void Request::clear_get_cluster_config() {
  if (get_cluster_config_ != NULL) get_cluster_config_->::pdpb::GetClusterConfigRequest::Clear();
  clear_has_get_cluster_config();
}
const ::pdpb::GetClusterConfigRequest& Request::get_cluster_config() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.get_cluster_config)
  return get_cluster_config_ != NULL ? *get_cluster_config_
                         : *::pdpb::GetClusterConfigRequest::internal_default_instance();
}
::pdpb::GetClusterConfigRequest* Request::mutable_get_cluster_config() {
  set_has_get_cluster_config();
  if (get_cluster_config_ == NULL) {
    get_cluster_config_ = new ::pdpb::GetClusterConfigRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.get_cluster_config)
  return get_cluster_config_;
}
::pdpb::GetClusterConfigRequest* Request::release_get_cluster_config() {
  // @@protoc_insertion_point(field_release:pdpb.Request.get_cluster_config)
  clear_has_get_cluster_config();
  ::pdpb::GetClusterConfigRequest* temp = get_cluster_config_;
  get_cluster_config_ = NULL;
  return temp;
}
void Request::set_allocated_get_cluster_config(::pdpb::GetClusterConfigRequest* get_cluster_config) {
  delete get_cluster_config_;
  get_cluster_config_ = get_cluster_config;
  if (get_cluster_config) {
    set_has_get_cluster_config();
  } else {
    clear_has_get_cluster_config();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.get_cluster_config)
}

// optional .pdpb.PutClusterConfigRequest put_cluster_config = 13;
bool Request::has_put_cluster_config() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Request::set_has_put_cluster_config() {
  _has_bits_[0] |= 0x00001000u;
}
void Request::clear_has_put_cluster_config() {
  _has_bits_[0] &= ~0x00001000u;
}
void Request::clear_put_cluster_config() {
  if (put_cluster_config_ != NULL) put_cluster_config_->::pdpb::PutClusterConfigRequest::Clear();
  clear_has_put_cluster_config();
}
const ::pdpb::PutClusterConfigRequest& Request::put_cluster_config() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.put_cluster_config)
  return put_cluster_config_ != NULL ? *put_cluster_config_
                         : *::pdpb::PutClusterConfigRequest::internal_default_instance();
}
::pdpb::PutClusterConfigRequest* Request::mutable_put_cluster_config() {
  set_has_put_cluster_config();
  if (put_cluster_config_ == NULL) {
    put_cluster_config_ = new ::pdpb::PutClusterConfigRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.put_cluster_config)
  return put_cluster_config_;
}
::pdpb::PutClusterConfigRequest* Request::release_put_cluster_config() {
  // @@protoc_insertion_point(field_release:pdpb.Request.put_cluster_config)
  clear_has_put_cluster_config();
  ::pdpb::PutClusterConfigRequest* temp = put_cluster_config_;
  put_cluster_config_ = NULL;
  return temp;
}
void Request::set_allocated_put_cluster_config(::pdpb::PutClusterConfigRequest* put_cluster_config) {
  delete put_cluster_config_;
  put_cluster_config_ = put_cluster_config;
  if (put_cluster_config) {
    set_has_put_cluster_config();
  } else {
    clear_has_put_cluster_config();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.put_cluster_config)
}

// optional .pdpb.StoreHeartbeatRequest store_heartbeat = 14;
bool Request::has_store_heartbeat() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void Request::set_has_store_heartbeat() {
  _has_bits_[0] |= 0x00002000u;
}
void Request::clear_has_store_heartbeat() {
  _has_bits_[0] &= ~0x00002000u;
}
void Request::clear_store_heartbeat() {
  if (store_heartbeat_ != NULL) store_heartbeat_->::pdpb::StoreHeartbeatRequest::Clear();
  clear_has_store_heartbeat();
}
const ::pdpb::StoreHeartbeatRequest& Request::store_heartbeat() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.store_heartbeat)
  return store_heartbeat_ != NULL ? *store_heartbeat_
                         : *::pdpb::StoreHeartbeatRequest::internal_default_instance();
}
::pdpb::StoreHeartbeatRequest* Request::mutable_store_heartbeat() {
  set_has_store_heartbeat();
  if (store_heartbeat_ == NULL) {
    store_heartbeat_ = new ::pdpb::StoreHeartbeatRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.store_heartbeat)
  return store_heartbeat_;
}
::pdpb::StoreHeartbeatRequest* Request::release_store_heartbeat() {
  // @@protoc_insertion_point(field_release:pdpb.Request.store_heartbeat)
  clear_has_store_heartbeat();
  ::pdpb::StoreHeartbeatRequest* temp = store_heartbeat_;
  store_heartbeat_ = NULL;
  return temp;
}
void Request::set_allocated_store_heartbeat(::pdpb::StoreHeartbeatRequest* store_heartbeat) {
  delete store_heartbeat_;
  store_heartbeat_ = store_heartbeat;
  if (store_heartbeat) {
    set_has_store_heartbeat();
  } else {
    clear_has_store_heartbeat();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.store_heartbeat)
}

// optional .pdpb.ReportSplitRequest report_split = 15;
bool Request::has_report_split() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void Request::set_has_report_split() {
  _has_bits_[0] |= 0x00004000u;
}
void Request::clear_has_report_split() {
  _has_bits_[0] &= ~0x00004000u;
}
void Request::clear_report_split() {
  if (report_split_ != NULL) report_split_->::pdpb::ReportSplitRequest::Clear();
  clear_has_report_split();
}
const ::pdpb::ReportSplitRequest& Request::report_split() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.report_split)
  return report_split_ != NULL ? *report_split_
                         : *::pdpb::ReportSplitRequest::internal_default_instance();
}
::pdpb::ReportSplitRequest* Request::mutable_report_split() {
  set_has_report_split();
  if (report_split_ == NULL) {
    report_split_ = new ::pdpb::ReportSplitRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.report_split)
  return report_split_;
}
::pdpb::ReportSplitRequest* Request::release_report_split() {
  // @@protoc_insertion_point(field_release:pdpb.Request.report_split)
  clear_has_report_split();
  ::pdpb::ReportSplitRequest* temp = report_split_;
  report_split_ = NULL;
  return temp;
}
void Request::set_allocated_report_split(::pdpb::ReportSplitRequest* report_split) {
  delete report_split_;
  report_split_ = report_split;
  if (report_split) {
    set_has_report_split();
  } else {
    clear_has_report_split();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.report_split)
}

// optional .pdpb.GetRegionByIDRequest get_region_by_id = 16;
bool Request::has_get_region_by_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void Request::set_has_get_region_by_id() {
  _has_bits_[0] |= 0x00008000u;
}
void Request::clear_has_get_region_by_id() {
  _has_bits_[0] &= ~0x00008000u;
}
void Request::clear_get_region_by_id() {
  if (get_region_by_id_ != NULL) get_region_by_id_->::pdpb::GetRegionByIDRequest::Clear();
  clear_has_get_region_by_id();
}
const ::pdpb::GetRegionByIDRequest& Request::get_region_by_id() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.get_region_by_id)
  return get_region_by_id_ != NULL ? *get_region_by_id_
                         : *::pdpb::GetRegionByIDRequest::internal_default_instance();
}
::pdpb::GetRegionByIDRequest* Request::mutable_get_region_by_id() {
  set_has_get_region_by_id();
  if (get_region_by_id_ == NULL) {
    get_region_by_id_ = new ::pdpb::GetRegionByIDRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.get_region_by_id)
  return get_region_by_id_;
}
::pdpb::GetRegionByIDRequest* Request::release_get_region_by_id() {
  // @@protoc_insertion_point(field_release:pdpb.Request.get_region_by_id)
  clear_has_get_region_by_id();
  ::pdpb::GetRegionByIDRequest* temp = get_region_by_id_;
  get_region_by_id_ = NULL;
  return temp;
}
void Request::set_allocated_get_region_by_id(::pdpb::GetRegionByIDRequest* get_region_by_id) {
  delete get_region_by_id_;
  get_region_by_id_ = get_region_by_id;
  if (get_region_by_id) {
    set_has_get_region_by_id();
  } else {
    clear_has_get_region_by_id();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.get_region_by_id)
}

// optional .pdpb.GetPDMembersRequest get_pd_members = 17;
bool Request::has_get_pd_members() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void Request::set_has_get_pd_members() {
  _has_bits_[0] |= 0x00010000u;
}
void Request::clear_has_get_pd_members() {
  _has_bits_[0] &= ~0x00010000u;
}
void Request::clear_get_pd_members() {
  if (get_pd_members_ != NULL) get_pd_members_->::pdpb::GetPDMembersRequest::Clear();
  clear_has_get_pd_members();
}
const ::pdpb::GetPDMembersRequest& Request::get_pd_members() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.get_pd_members)
  return get_pd_members_ != NULL ? *get_pd_members_
                         : *::pdpb::GetPDMembersRequest::internal_default_instance();
}
::pdpb::GetPDMembersRequest* Request::mutable_get_pd_members() {
  set_has_get_pd_members();
  if (get_pd_members_ == NULL) {
    get_pd_members_ = new ::pdpb::GetPDMembersRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.get_pd_members)
  return get_pd_members_;
}
::pdpb::GetPDMembersRequest* Request::release_get_pd_members() {
  // @@protoc_insertion_point(field_release:pdpb.Request.get_pd_members)
  clear_has_get_pd_members();
  ::pdpb::GetPDMembersRequest* temp = get_pd_members_;
  get_pd_members_ = NULL;
  return temp;
}
void Request::set_allocated_get_pd_members(::pdpb::GetPDMembersRequest* get_pd_members) {
  delete get_pd_members_;
  get_pd_members_ = get_pd_members;
  if (get_pd_members) {
    set_has_get_pd_members();
  } else {
    clear_has_get_pd_members();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.get_pd_members)
}

inline const Request* Request::internal_default_instance() {
  return &Request_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kHeaderFieldNumber;
const int Response::kCmdTypeFieldNumber;
const int Response::kTsoFieldNumber;
const int Response::kBootstrapFieldNumber;
const int Response::kIsBootstrappedFieldNumber;
const int Response::kAllocIdFieldNumber;
const int Response::kGetStoreFieldNumber;
const int Response::kPutStoreFieldNumber;
const int Response::kAskSplitFieldNumber;
const int Response::kGetRegionFieldNumber;
const int Response::kRegionHeartbeatFieldNumber;
const int Response::kGetClusterConfigFieldNumber;
const int Response::kPutClusterConfigFieldNumber;
const int Response::kStoreHeartbeatFieldNumber;
const int Response::kReportSplitFieldNumber;
const int Response::kGetRegionByIdFieldNumber;
const int Response::kGetPdMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.Response)
}

void Response::InitAsDefaultInstance() {
  header_ = const_cast< ::pdpb::ResponseHeader*>(
      ::pdpb::ResponseHeader::internal_default_instance());
  tso_ = const_cast< ::pdpb::TsoResponse*>(
      ::pdpb::TsoResponse::internal_default_instance());
  bootstrap_ = const_cast< ::pdpb::BootstrapResponse*>(
      ::pdpb::BootstrapResponse::internal_default_instance());
  is_bootstrapped_ = const_cast< ::pdpb::IsBootstrappedResponse*>(
      ::pdpb::IsBootstrappedResponse::internal_default_instance());
  alloc_id_ = const_cast< ::pdpb::AllocIdResponse*>(
      ::pdpb::AllocIdResponse::internal_default_instance());
  get_store_ = const_cast< ::pdpb::GetStoreResponse*>(
      ::pdpb::GetStoreResponse::internal_default_instance());
  put_store_ = const_cast< ::pdpb::PutStoreResponse*>(
      ::pdpb::PutStoreResponse::internal_default_instance());
  ask_split_ = const_cast< ::pdpb::AskSplitResponse*>(
      ::pdpb::AskSplitResponse::internal_default_instance());
  get_region_ = const_cast< ::pdpb::GetRegionResponse*>(
      ::pdpb::GetRegionResponse::internal_default_instance());
  region_heartbeat_ = const_cast< ::pdpb::RegionHeartbeatResponse*>(
      ::pdpb::RegionHeartbeatResponse::internal_default_instance());
  get_cluster_config_ = const_cast< ::pdpb::GetClusterConfigResponse*>(
      ::pdpb::GetClusterConfigResponse::internal_default_instance());
  put_cluster_config_ = const_cast< ::pdpb::PutClusterConfigResponse*>(
      ::pdpb::PutClusterConfigResponse::internal_default_instance());
  store_heartbeat_ = const_cast< ::pdpb::StoreHeartbeatResponse*>(
      ::pdpb::StoreHeartbeatResponse::internal_default_instance());
  report_split_ = const_cast< ::pdpb::ReportSplitResponse*>(
      ::pdpb::ReportSplitResponse::internal_default_instance());
  get_region_by_id_ = const_cast< ::pdpb::GetRegionResponse*>(
      ::pdpb::GetRegionResponse::internal_default_instance());
  get_pd_members_ = const_cast< ::pdpb::GetPDMembersResponse*>(
      ::pdpb::GetPDMembersResponse::internal_default_instance());
}

Response::Response(const Response& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.Response)
}

void Response::SharedCtor() {
  _cached_size_ = 0;
  header_ = NULL;
  tso_ = NULL;
  bootstrap_ = NULL;
  is_bootstrapped_ = NULL;
  alloc_id_ = NULL;
  get_store_ = NULL;
  put_store_ = NULL;
  ask_split_ = NULL;
  get_region_ = NULL;
  region_heartbeat_ = NULL;
  get_cluster_config_ = NULL;
  put_cluster_config_ = NULL;
  store_heartbeat_ = NULL;
  report_split_ = NULL;
  get_region_by_id_ = NULL;
  get_pd_members_ = NULL;
  cmd_type_ = 0;
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:pdpb.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  if (this != &Response_default_instance_.get()) {
    delete header_;
    delete tso_;
    delete bootstrap_;
    delete is_bootstrapped_;
    delete alloc_id_;
    delete get_store_;
    delete put_store_;
    delete ask_split_;
    delete get_region_;
    delete region_heartbeat_;
    delete get_cluster_config_;
    delete put_cluster_config_;
    delete store_heartbeat_;
    delete report_split_;
    delete get_region_by_id_;
    delete get_pd_members_;
  }
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_descriptor_;
}

const Response& Response::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Response> Response_default_instance_;

Response* Response::New(::google::protobuf::Arena* arena) const {
  Response* n = new Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.Response)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_header()) {
      if (header_ != NULL) header_->::pdpb::ResponseHeader::Clear();
    }
    cmd_type_ = 0;
    if (has_tso()) {
      if (tso_ != NULL) tso_->::pdpb::TsoResponse::Clear();
    }
    if (has_bootstrap()) {
      if (bootstrap_ != NULL) bootstrap_->::pdpb::BootstrapResponse::Clear();
    }
    if (has_is_bootstrapped()) {
      if (is_bootstrapped_ != NULL) is_bootstrapped_->::pdpb::IsBootstrappedResponse::Clear();
    }
    if (has_alloc_id()) {
      if (alloc_id_ != NULL) alloc_id_->::pdpb::AllocIdResponse::Clear();
    }
    if (has_get_store()) {
      if (get_store_ != NULL) get_store_->::pdpb::GetStoreResponse::Clear();
    }
    if (has_put_store()) {
      if (put_store_ != NULL) put_store_->::pdpb::PutStoreResponse::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    if (has_ask_split()) {
      if (ask_split_ != NULL) ask_split_->::pdpb::AskSplitResponse::Clear();
    }
    if (has_get_region()) {
      if (get_region_ != NULL) get_region_->::pdpb::GetRegionResponse::Clear();
    }
    if (has_region_heartbeat()) {
      if (region_heartbeat_ != NULL) region_heartbeat_->::pdpb::RegionHeartbeatResponse::Clear();
    }
    if (has_get_cluster_config()) {
      if (get_cluster_config_ != NULL) get_cluster_config_->::pdpb::GetClusterConfigResponse::Clear();
    }
    if (has_put_cluster_config()) {
      if (put_cluster_config_ != NULL) put_cluster_config_->::pdpb::PutClusterConfigResponse::Clear();
    }
    if (has_store_heartbeat()) {
      if (store_heartbeat_ != NULL) store_heartbeat_->::pdpb::StoreHeartbeatResponse::Clear();
    }
    if (has_report_split()) {
      if (report_split_ != NULL) report_split_->::pdpb::ReportSplitResponse::Clear();
    }
    if (has_get_region_by_id()) {
      if (get_region_by_id_ != NULL) get_region_by_id_->::pdpb::GetRegionResponse::Clear();
    }
  }
  if (has_get_pd_members()) {
    if (get_pd_members_ != NULL) get_pd_members_->::pdpb::GetPDMembersResponse::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .pdpb.ResponseHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_cmd_type;
        break;
      }

      // optional .pdpb.CommandType cmd_type = 2;
      case 2: {
        if (tag == 16) {
         parse_cmd_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::pdpb::CommandType_IsValid(value)) {
            set_cmd_type(static_cast< ::pdpb::CommandType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_tso;
        break;
      }

      // optional .pdpb.TsoResponse tso = 3;
      case 3: {
        if (tag == 26) {
         parse_tso:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tso()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_bootstrap;
        break;
      }

      // optional .pdpb.BootstrapResponse bootstrap = 4;
      case 4: {
        if (tag == 34) {
         parse_bootstrap:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bootstrap()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_is_bootstrapped;
        break;
      }

      // optional .pdpb.IsBootstrappedResponse is_bootstrapped = 5;
      case 5: {
        if (tag == 42) {
         parse_is_bootstrapped:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_is_bootstrapped()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_alloc_id;
        break;
      }

      // optional .pdpb.AllocIdResponse alloc_id = 6;
      case 6: {
        if (tag == 50) {
         parse_alloc_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_alloc_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_get_store;
        break;
      }

      // optional .pdpb.GetStoreResponse get_store = 7;
      case 7: {
        if (tag == 58) {
         parse_get_store:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_store()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_put_store;
        break;
      }

      // optional .pdpb.PutStoreResponse put_store = 8;
      case 8: {
        if (tag == 66) {
         parse_put_store:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_put_store()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_ask_split;
        break;
      }

      // optional .pdpb.AskSplitResponse ask_split = 9;
      case 9: {
        if (tag == 74) {
         parse_ask_split:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ask_split()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_get_region;
        break;
      }

      // optional .pdpb.GetRegionResponse get_region = 10;
      case 10: {
        if (tag == 82) {
         parse_get_region:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_region()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_region_heartbeat;
        break;
      }

      // optional .pdpb.RegionHeartbeatResponse region_heartbeat = 11;
      case 11: {
        if (tag == 90) {
         parse_region_heartbeat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_region_heartbeat()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_get_cluster_config;
        break;
      }

      // optional .pdpb.GetClusterConfigResponse get_cluster_config = 12;
      case 12: {
        if (tag == 98) {
         parse_get_cluster_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_cluster_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_put_cluster_config;
        break;
      }

      // optional .pdpb.PutClusterConfigResponse put_cluster_config = 13;
      case 13: {
        if (tag == 106) {
         parse_put_cluster_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_put_cluster_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_store_heartbeat;
        break;
      }

      // optional .pdpb.StoreHeartbeatResponse store_heartbeat = 14;
      case 14: {
        if (tag == 114) {
         parse_store_heartbeat:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_store_heartbeat()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_report_split;
        break;
      }

      // optional .pdpb.ReportSplitResponse report_split = 15;
      case 15: {
        if (tag == 122) {
         parse_report_split:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_report_split()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_get_region_by_id;
        break;
      }

      // optional .pdpb.GetRegionResponse get_region_by_id = 16;
      case 16: {
        if (tag == 130) {
         parse_get_region_by_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_region_by_id()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_get_pd_members;
        break;
      }

      // optional .pdpb.GetPDMembersResponse get_pd_members = 17;
      case 17: {
        if (tag == 138) {
         parse_get_pd_members:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_get_pd_members()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.Response)
  // optional .pdpb.ResponseHeader header = 1;
  if (has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional .pdpb.CommandType cmd_type = 2;
  if (has_cmd_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->cmd_type(), output);
  }

  // optional .pdpb.TsoResponse tso = 3;
  if (has_tso()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->tso_, output);
  }

  // optional .pdpb.BootstrapResponse bootstrap = 4;
  if (has_bootstrap()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->bootstrap_, output);
  }

  // optional .pdpb.IsBootstrappedResponse is_bootstrapped = 5;
  if (has_is_bootstrapped()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->is_bootstrapped_, output);
  }

  // optional .pdpb.AllocIdResponse alloc_id = 6;
  if (has_alloc_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->alloc_id_, output);
  }

  // optional .pdpb.GetStoreResponse get_store = 7;
  if (has_get_store()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->get_store_, output);
  }

  // optional .pdpb.PutStoreResponse put_store = 8;
  if (has_put_store()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->put_store_, output);
  }

  // optional .pdpb.AskSplitResponse ask_split = 9;
  if (has_ask_split()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->ask_split_, output);
  }

  // optional .pdpb.GetRegionResponse get_region = 10;
  if (has_get_region()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->get_region_, output);
  }

  // optional .pdpb.RegionHeartbeatResponse region_heartbeat = 11;
  if (has_region_heartbeat()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->region_heartbeat_, output);
  }

  // optional .pdpb.GetClusterConfigResponse get_cluster_config = 12;
  if (has_get_cluster_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->get_cluster_config_, output);
  }

  // optional .pdpb.PutClusterConfigResponse put_cluster_config = 13;
  if (has_put_cluster_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->put_cluster_config_, output);
  }

  // optional .pdpb.StoreHeartbeatResponse store_heartbeat = 14;
  if (has_store_heartbeat()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->store_heartbeat_, output);
  }

  // optional .pdpb.ReportSplitResponse report_split = 15;
  if (has_report_split()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->report_split_, output);
  }

  // optional .pdpb.GetRegionResponse get_region_by_id = 16;
  if (has_get_region_by_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->get_region_by_id_, output);
  }

  // optional .pdpb.GetPDMembersResponse get_pd_members = 17;
  if (has_get_pd_members()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->get_pd_members_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.Response)
  // optional .pdpb.ResponseHeader header = 1;
  if (has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, false, target);
  }

  // optional .pdpb.CommandType cmd_type = 2;
  if (has_cmd_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->cmd_type(), target);
  }

  // optional .pdpb.TsoResponse tso = 3;
  if (has_tso()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->tso_, false, target);
  }

  // optional .pdpb.BootstrapResponse bootstrap = 4;
  if (has_bootstrap()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->bootstrap_, false, target);
  }

  // optional .pdpb.IsBootstrappedResponse is_bootstrapped = 5;
  if (has_is_bootstrapped()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->is_bootstrapped_, false, target);
  }

  // optional .pdpb.AllocIdResponse alloc_id = 6;
  if (has_alloc_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->alloc_id_, false, target);
  }

  // optional .pdpb.GetStoreResponse get_store = 7;
  if (has_get_store()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->get_store_, false, target);
  }

  // optional .pdpb.PutStoreResponse put_store = 8;
  if (has_put_store()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->put_store_, false, target);
  }

  // optional .pdpb.AskSplitResponse ask_split = 9;
  if (has_ask_split()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->ask_split_, false, target);
  }

  // optional .pdpb.GetRegionResponse get_region = 10;
  if (has_get_region()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->get_region_, false, target);
  }

  // optional .pdpb.RegionHeartbeatResponse region_heartbeat = 11;
  if (has_region_heartbeat()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->region_heartbeat_, false, target);
  }

  // optional .pdpb.GetClusterConfigResponse get_cluster_config = 12;
  if (has_get_cluster_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->get_cluster_config_, false, target);
  }

  // optional .pdpb.PutClusterConfigResponse put_cluster_config = 13;
  if (has_put_cluster_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->put_cluster_config_, false, target);
  }

  // optional .pdpb.StoreHeartbeatResponse store_heartbeat = 14;
  if (has_store_heartbeat()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->store_heartbeat_, false, target);
  }

  // optional .pdpb.ReportSplitResponse report_split = 15;
  if (has_report_split()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->report_split_, false, target);
  }

  // optional .pdpb.GetRegionResponse get_region_by_id = 16;
  if (has_get_region_by_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *this->get_region_by_id_, false, target);
  }

  // optional .pdpb.GetPDMembersResponse get_pd_members = 17;
  if (has_get_pd_members()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, *this->get_pd_members_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.Response)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional .pdpb.ResponseHeader header = 1;
    if (has_header()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->header_);
    }

    // optional .pdpb.CommandType cmd_type = 2;
    if (has_cmd_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd_type());
    }

    // optional .pdpb.TsoResponse tso = 3;
    if (has_tso()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->tso_);
    }

    // optional .pdpb.BootstrapResponse bootstrap = 4;
    if (has_bootstrap()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bootstrap_);
    }

    // optional .pdpb.IsBootstrappedResponse is_bootstrapped = 5;
    if (has_is_bootstrapped()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->is_bootstrapped_);
    }

    // optional .pdpb.AllocIdResponse alloc_id = 6;
    if (has_alloc_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->alloc_id_);
    }

    // optional .pdpb.GetStoreResponse get_store = 7;
    if (has_get_store()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->get_store_);
    }

    // optional .pdpb.PutStoreResponse put_store = 8;
    if (has_put_store()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->put_store_);
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional .pdpb.AskSplitResponse ask_split = 9;
    if (has_ask_split()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->ask_split_);
    }

    // optional .pdpb.GetRegionResponse get_region = 10;
    if (has_get_region()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->get_region_);
    }

    // optional .pdpb.RegionHeartbeatResponse region_heartbeat = 11;
    if (has_region_heartbeat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->region_heartbeat_);
    }

    // optional .pdpb.GetClusterConfigResponse get_cluster_config = 12;
    if (has_get_cluster_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->get_cluster_config_);
    }

    // optional .pdpb.PutClusterConfigResponse put_cluster_config = 13;
    if (has_put_cluster_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->put_cluster_config_);
    }

    // optional .pdpb.StoreHeartbeatResponse store_heartbeat = 14;
    if (has_store_heartbeat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->store_heartbeat_);
    }

    // optional .pdpb.ReportSplitResponse report_split = 15;
    if (has_report_split()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->report_split_);
    }

    // optional .pdpb.GetRegionResponse get_region_by_id = 16;
    if (has_get_region_by_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->get_region_by_id_);
    }

  }
  // optional .pdpb.GetPDMembersResponse get_pd_members = 17;
  if (has_get_pd_members()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->get_pd_members_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.Response)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.Response)
    UnsafeMergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.Response)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Response::UnsafeMergeFrom(const Response& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_header()) {
      mutable_header()->::pdpb::ResponseHeader::MergeFrom(from.header());
    }
    if (from.has_cmd_type()) {
      set_cmd_type(from.cmd_type());
    }
    if (from.has_tso()) {
      mutable_tso()->::pdpb::TsoResponse::MergeFrom(from.tso());
    }
    if (from.has_bootstrap()) {
      mutable_bootstrap()->::pdpb::BootstrapResponse::MergeFrom(from.bootstrap());
    }
    if (from.has_is_bootstrapped()) {
      mutable_is_bootstrapped()->::pdpb::IsBootstrappedResponse::MergeFrom(from.is_bootstrapped());
    }
    if (from.has_alloc_id()) {
      mutable_alloc_id()->::pdpb::AllocIdResponse::MergeFrom(from.alloc_id());
    }
    if (from.has_get_store()) {
      mutable_get_store()->::pdpb::GetStoreResponse::MergeFrom(from.get_store());
    }
    if (from.has_put_store()) {
      mutable_put_store()->::pdpb::PutStoreResponse::MergeFrom(from.put_store());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_ask_split()) {
      mutable_ask_split()->::pdpb::AskSplitResponse::MergeFrom(from.ask_split());
    }
    if (from.has_get_region()) {
      mutable_get_region()->::pdpb::GetRegionResponse::MergeFrom(from.get_region());
    }
    if (from.has_region_heartbeat()) {
      mutable_region_heartbeat()->::pdpb::RegionHeartbeatResponse::MergeFrom(from.region_heartbeat());
    }
    if (from.has_get_cluster_config()) {
      mutable_get_cluster_config()->::pdpb::GetClusterConfigResponse::MergeFrom(from.get_cluster_config());
    }
    if (from.has_put_cluster_config()) {
      mutable_put_cluster_config()->::pdpb::PutClusterConfigResponse::MergeFrom(from.put_cluster_config());
    }
    if (from.has_store_heartbeat()) {
      mutable_store_heartbeat()->::pdpb::StoreHeartbeatResponse::MergeFrom(from.store_heartbeat());
    }
    if (from.has_report_split()) {
      mutable_report_split()->::pdpb::ReportSplitResponse::MergeFrom(from.report_split());
    }
    if (from.has_get_region_by_id()) {
      mutable_get_region_by_id()->::pdpb::GetRegionResponse::MergeFrom(from.get_region_by_id());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_get_pd_members()) {
      mutable_get_pd_members()->::pdpb::GetPDMembersResponse::MergeFrom(from.get_pd_members());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.Response)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Response::IsInitialized() const {

  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  std::swap(header_, other->header_);
  std::swap(cmd_type_, other->cmd_type_);
  std::swap(tso_, other->tso_);
  std::swap(bootstrap_, other->bootstrap_);
  std::swap(is_bootstrapped_, other->is_bootstrapped_);
  std::swap(alloc_id_, other->alloc_id_);
  std::swap(get_store_, other->get_store_);
  std::swap(put_store_, other->put_store_);
  std::swap(ask_split_, other->ask_split_);
  std::swap(get_region_, other->get_region_);
  std::swap(region_heartbeat_, other->region_heartbeat_);
  std::swap(get_cluster_config_, other->get_cluster_config_);
  std::swap(put_cluster_config_, other->put_cluster_config_);
  std::swap(store_heartbeat_, other->store_heartbeat_);
  std::swap(report_split_, other->report_split_);
  std::swap(get_region_by_id_, other->get_region_by_id_);
  std::swap(get_pd_members_, other->get_pd_members_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_descriptor_;
  metadata.reflection = Response_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Response

// optional .pdpb.ResponseHeader header = 1;
bool Response::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
void Response::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response::clear_header() {
  if (header_ != NULL) header_->::pdpb::ResponseHeader::Clear();
  clear_has_header();
}
const ::pdpb::ResponseHeader& Response::header() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.header)
  return header_ != NULL ? *header_
                         : *::pdpb::ResponseHeader::internal_default_instance();
}
::pdpb::ResponseHeader* Response::mutable_header() {
  set_has_header();
  if (header_ == NULL) {
    header_ = new ::pdpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.header)
  return header_;
}
::pdpb::ResponseHeader* Response::release_header() {
  // @@protoc_insertion_point(field_release:pdpb.Response.header)
  clear_has_header();
  ::pdpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void Response::set_allocated_header(::pdpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.header)
}

// optional .pdpb.CommandType cmd_type = 2;
bool Response::has_cmd_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response::set_has_cmd_type() {
  _has_bits_[0] |= 0x00000002u;
}
void Response::clear_has_cmd_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response::clear_cmd_type() {
  cmd_type_ = 0;
  clear_has_cmd_type();
}
::pdpb::CommandType Response::cmd_type() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.cmd_type)
  return static_cast< ::pdpb::CommandType >(cmd_type_);
}
void Response::set_cmd_type(::pdpb::CommandType value) {
  assert(::pdpb::CommandType_IsValid(value));
  set_has_cmd_type();
  cmd_type_ = value;
  // @@protoc_insertion_point(field_set:pdpb.Response.cmd_type)
}

// optional .pdpb.TsoResponse tso = 3;
bool Response::has_tso() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Response::set_has_tso() {
  _has_bits_[0] |= 0x00000004u;
}
void Response::clear_has_tso() {
  _has_bits_[0] &= ~0x00000004u;
}
void Response::clear_tso() {
  if (tso_ != NULL) tso_->::pdpb::TsoResponse::Clear();
  clear_has_tso();
}
const ::pdpb::TsoResponse& Response::tso() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.tso)
  return tso_ != NULL ? *tso_
                         : *::pdpb::TsoResponse::internal_default_instance();
}
::pdpb::TsoResponse* Response::mutable_tso() {
  set_has_tso();
  if (tso_ == NULL) {
    tso_ = new ::pdpb::TsoResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.tso)
  return tso_;
}
::pdpb::TsoResponse* Response::release_tso() {
  // @@protoc_insertion_point(field_release:pdpb.Response.tso)
  clear_has_tso();
  ::pdpb::TsoResponse* temp = tso_;
  tso_ = NULL;
  return temp;
}
void Response::set_allocated_tso(::pdpb::TsoResponse* tso) {
  delete tso_;
  tso_ = tso;
  if (tso) {
    set_has_tso();
  } else {
    clear_has_tso();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.tso)
}

// optional .pdpb.BootstrapResponse bootstrap = 4;
bool Response::has_bootstrap() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Response::set_has_bootstrap() {
  _has_bits_[0] |= 0x00000008u;
}
void Response::clear_has_bootstrap() {
  _has_bits_[0] &= ~0x00000008u;
}
void Response::clear_bootstrap() {
  if (bootstrap_ != NULL) bootstrap_->::pdpb::BootstrapResponse::Clear();
  clear_has_bootstrap();
}
const ::pdpb::BootstrapResponse& Response::bootstrap() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.bootstrap)
  return bootstrap_ != NULL ? *bootstrap_
                         : *::pdpb::BootstrapResponse::internal_default_instance();
}
::pdpb::BootstrapResponse* Response::mutable_bootstrap() {
  set_has_bootstrap();
  if (bootstrap_ == NULL) {
    bootstrap_ = new ::pdpb::BootstrapResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.bootstrap)
  return bootstrap_;
}
::pdpb::BootstrapResponse* Response::release_bootstrap() {
  // @@protoc_insertion_point(field_release:pdpb.Response.bootstrap)
  clear_has_bootstrap();
  ::pdpb::BootstrapResponse* temp = bootstrap_;
  bootstrap_ = NULL;
  return temp;
}
void Response::set_allocated_bootstrap(::pdpb::BootstrapResponse* bootstrap) {
  delete bootstrap_;
  bootstrap_ = bootstrap;
  if (bootstrap) {
    set_has_bootstrap();
  } else {
    clear_has_bootstrap();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.bootstrap)
}

// optional .pdpb.IsBootstrappedResponse is_bootstrapped = 5;
bool Response::has_is_bootstrapped() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Response::set_has_is_bootstrapped() {
  _has_bits_[0] |= 0x00000010u;
}
void Response::clear_has_is_bootstrapped() {
  _has_bits_[0] &= ~0x00000010u;
}
void Response::clear_is_bootstrapped() {
  if (is_bootstrapped_ != NULL) is_bootstrapped_->::pdpb::IsBootstrappedResponse::Clear();
  clear_has_is_bootstrapped();
}
const ::pdpb::IsBootstrappedResponse& Response::is_bootstrapped() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.is_bootstrapped)
  return is_bootstrapped_ != NULL ? *is_bootstrapped_
                         : *::pdpb::IsBootstrappedResponse::internal_default_instance();
}
::pdpb::IsBootstrappedResponse* Response::mutable_is_bootstrapped() {
  set_has_is_bootstrapped();
  if (is_bootstrapped_ == NULL) {
    is_bootstrapped_ = new ::pdpb::IsBootstrappedResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.is_bootstrapped)
  return is_bootstrapped_;
}
::pdpb::IsBootstrappedResponse* Response::release_is_bootstrapped() {
  // @@protoc_insertion_point(field_release:pdpb.Response.is_bootstrapped)
  clear_has_is_bootstrapped();
  ::pdpb::IsBootstrappedResponse* temp = is_bootstrapped_;
  is_bootstrapped_ = NULL;
  return temp;
}
void Response::set_allocated_is_bootstrapped(::pdpb::IsBootstrappedResponse* is_bootstrapped) {
  delete is_bootstrapped_;
  is_bootstrapped_ = is_bootstrapped;
  if (is_bootstrapped) {
    set_has_is_bootstrapped();
  } else {
    clear_has_is_bootstrapped();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.is_bootstrapped)
}

// optional .pdpb.AllocIdResponse alloc_id = 6;
bool Response::has_alloc_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Response::set_has_alloc_id() {
  _has_bits_[0] |= 0x00000020u;
}
void Response::clear_has_alloc_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void Response::clear_alloc_id() {
  if (alloc_id_ != NULL) alloc_id_->::pdpb::AllocIdResponse::Clear();
  clear_has_alloc_id();
}
const ::pdpb::AllocIdResponse& Response::alloc_id() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.alloc_id)
  return alloc_id_ != NULL ? *alloc_id_
                         : *::pdpb::AllocIdResponse::internal_default_instance();
}
::pdpb::AllocIdResponse* Response::mutable_alloc_id() {
  set_has_alloc_id();
  if (alloc_id_ == NULL) {
    alloc_id_ = new ::pdpb::AllocIdResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.alloc_id)
  return alloc_id_;
}
::pdpb::AllocIdResponse* Response::release_alloc_id() {
  // @@protoc_insertion_point(field_release:pdpb.Response.alloc_id)
  clear_has_alloc_id();
  ::pdpb::AllocIdResponse* temp = alloc_id_;
  alloc_id_ = NULL;
  return temp;
}
void Response::set_allocated_alloc_id(::pdpb::AllocIdResponse* alloc_id) {
  delete alloc_id_;
  alloc_id_ = alloc_id;
  if (alloc_id) {
    set_has_alloc_id();
  } else {
    clear_has_alloc_id();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.alloc_id)
}

// optional .pdpb.GetStoreResponse get_store = 7;
bool Response::has_get_store() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Response::set_has_get_store() {
  _has_bits_[0] |= 0x00000040u;
}
void Response::clear_has_get_store() {
  _has_bits_[0] &= ~0x00000040u;
}
void Response::clear_get_store() {
  if (get_store_ != NULL) get_store_->::pdpb::GetStoreResponse::Clear();
  clear_has_get_store();
}
const ::pdpb::GetStoreResponse& Response::get_store() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.get_store)
  return get_store_ != NULL ? *get_store_
                         : *::pdpb::GetStoreResponse::internal_default_instance();
}
::pdpb::GetStoreResponse* Response::mutable_get_store() {
  set_has_get_store();
  if (get_store_ == NULL) {
    get_store_ = new ::pdpb::GetStoreResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.get_store)
  return get_store_;
}
::pdpb::GetStoreResponse* Response::release_get_store() {
  // @@protoc_insertion_point(field_release:pdpb.Response.get_store)
  clear_has_get_store();
  ::pdpb::GetStoreResponse* temp = get_store_;
  get_store_ = NULL;
  return temp;
}
void Response::set_allocated_get_store(::pdpb::GetStoreResponse* get_store) {
  delete get_store_;
  get_store_ = get_store;
  if (get_store) {
    set_has_get_store();
  } else {
    clear_has_get_store();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.get_store)
}

// optional .pdpb.PutStoreResponse put_store = 8;
bool Response::has_put_store() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Response::set_has_put_store() {
  _has_bits_[0] |= 0x00000080u;
}
void Response::clear_has_put_store() {
  _has_bits_[0] &= ~0x00000080u;
}
void Response::clear_put_store() {
  if (put_store_ != NULL) put_store_->::pdpb::PutStoreResponse::Clear();
  clear_has_put_store();
}
const ::pdpb::PutStoreResponse& Response::put_store() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.put_store)
  return put_store_ != NULL ? *put_store_
                         : *::pdpb::PutStoreResponse::internal_default_instance();
}
::pdpb::PutStoreResponse* Response::mutable_put_store() {
  set_has_put_store();
  if (put_store_ == NULL) {
    put_store_ = new ::pdpb::PutStoreResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.put_store)
  return put_store_;
}
::pdpb::PutStoreResponse* Response::release_put_store() {
  // @@protoc_insertion_point(field_release:pdpb.Response.put_store)
  clear_has_put_store();
  ::pdpb::PutStoreResponse* temp = put_store_;
  put_store_ = NULL;
  return temp;
}
void Response::set_allocated_put_store(::pdpb::PutStoreResponse* put_store) {
  delete put_store_;
  put_store_ = put_store;
  if (put_store) {
    set_has_put_store();
  } else {
    clear_has_put_store();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.put_store)
}

// optional .pdpb.AskSplitResponse ask_split = 9;
bool Response::has_ask_split() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Response::set_has_ask_split() {
  _has_bits_[0] |= 0x00000100u;
}
void Response::clear_has_ask_split() {
  _has_bits_[0] &= ~0x00000100u;
}
void Response::clear_ask_split() {
  if (ask_split_ != NULL) ask_split_->::pdpb::AskSplitResponse::Clear();
  clear_has_ask_split();
}
const ::pdpb::AskSplitResponse& Response::ask_split() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.ask_split)
  return ask_split_ != NULL ? *ask_split_
                         : *::pdpb::AskSplitResponse::internal_default_instance();
}
::pdpb::AskSplitResponse* Response::mutable_ask_split() {
  set_has_ask_split();
  if (ask_split_ == NULL) {
    ask_split_ = new ::pdpb::AskSplitResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.ask_split)
  return ask_split_;
}
::pdpb::AskSplitResponse* Response::release_ask_split() {
  // @@protoc_insertion_point(field_release:pdpb.Response.ask_split)
  clear_has_ask_split();
  ::pdpb::AskSplitResponse* temp = ask_split_;
  ask_split_ = NULL;
  return temp;
}
void Response::set_allocated_ask_split(::pdpb::AskSplitResponse* ask_split) {
  delete ask_split_;
  ask_split_ = ask_split;
  if (ask_split) {
    set_has_ask_split();
  } else {
    clear_has_ask_split();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.ask_split)
}

// optional .pdpb.GetRegionResponse get_region = 10;
bool Response::has_get_region() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Response::set_has_get_region() {
  _has_bits_[0] |= 0x00000200u;
}
void Response::clear_has_get_region() {
  _has_bits_[0] &= ~0x00000200u;
}
void Response::clear_get_region() {
  if (get_region_ != NULL) get_region_->::pdpb::GetRegionResponse::Clear();
  clear_has_get_region();
}
const ::pdpb::GetRegionResponse& Response::get_region() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.get_region)
  return get_region_ != NULL ? *get_region_
                         : *::pdpb::GetRegionResponse::internal_default_instance();
}
::pdpb::GetRegionResponse* Response::mutable_get_region() {
  set_has_get_region();
  if (get_region_ == NULL) {
    get_region_ = new ::pdpb::GetRegionResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.get_region)
  return get_region_;
}
::pdpb::GetRegionResponse* Response::release_get_region() {
  // @@protoc_insertion_point(field_release:pdpb.Response.get_region)
  clear_has_get_region();
  ::pdpb::GetRegionResponse* temp = get_region_;
  get_region_ = NULL;
  return temp;
}
void Response::set_allocated_get_region(::pdpb::GetRegionResponse* get_region) {
  delete get_region_;
  get_region_ = get_region;
  if (get_region) {
    set_has_get_region();
  } else {
    clear_has_get_region();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.get_region)
}

// optional .pdpb.RegionHeartbeatResponse region_heartbeat = 11;
bool Response::has_region_heartbeat() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Response::set_has_region_heartbeat() {
  _has_bits_[0] |= 0x00000400u;
}
void Response::clear_has_region_heartbeat() {
  _has_bits_[0] &= ~0x00000400u;
}
void Response::clear_region_heartbeat() {
  if (region_heartbeat_ != NULL) region_heartbeat_->::pdpb::RegionHeartbeatResponse::Clear();
  clear_has_region_heartbeat();
}
const ::pdpb::RegionHeartbeatResponse& Response::region_heartbeat() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.region_heartbeat)
  return region_heartbeat_ != NULL ? *region_heartbeat_
                         : *::pdpb::RegionHeartbeatResponse::internal_default_instance();
}
::pdpb::RegionHeartbeatResponse* Response::mutable_region_heartbeat() {
  set_has_region_heartbeat();
  if (region_heartbeat_ == NULL) {
    region_heartbeat_ = new ::pdpb::RegionHeartbeatResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.region_heartbeat)
  return region_heartbeat_;
}
::pdpb::RegionHeartbeatResponse* Response::release_region_heartbeat() {
  // @@protoc_insertion_point(field_release:pdpb.Response.region_heartbeat)
  clear_has_region_heartbeat();
  ::pdpb::RegionHeartbeatResponse* temp = region_heartbeat_;
  region_heartbeat_ = NULL;
  return temp;
}
void Response::set_allocated_region_heartbeat(::pdpb::RegionHeartbeatResponse* region_heartbeat) {
  delete region_heartbeat_;
  region_heartbeat_ = region_heartbeat;
  if (region_heartbeat) {
    set_has_region_heartbeat();
  } else {
    clear_has_region_heartbeat();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.region_heartbeat)
}

// optional .pdpb.GetClusterConfigResponse get_cluster_config = 12;
bool Response::has_get_cluster_config() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Response::set_has_get_cluster_config() {
  _has_bits_[0] |= 0x00000800u;
}
void Response::clear_has_get_cluster_config() {
  _has_bits_[0] &= ~0x00000800u;
}
void Response::clear_get_cluster_config() {
  if (get_cluster_config_ != NULL) get_cluster_config_->::pdpb::GetClusterConfigResponse::Clear();
  clear_has_get_cluster_config();
}
const ::pdpb::GetClusterConfigResponse& Response::get_cluster_config() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.get_cluster_config)
  return get_cluster_config_ != NULL ? *get_cluster_config_
                         : *::pdpb::GetClusterConfigResponse::internal_default_instance();
}
::pdpb::GetClusterConfigResponse* Response::mutable_get_cluster_config() {
  set_has_get_cluster_config();
  if (get_cluster_config_ == NULL) {
    get_cluster_config_ = new ::pdpb::GetClusterConfigResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.get_cluster_config)
  return get_cluster_config_;
}
::pdpb::GetClusterConfigResponse* Response::release_get_cluster_config() {
  // @@protoc_insertion_point(field_release:pdpb.Response.get_cluster_config)
  clear_has_get_cluster_config();
  ::pdpb::GetClusterConfigResponse* temp = get_cluster_config_;
  get_cluster_config_ = NULL;
  return temp;
}
void Response::set_allocated_get_cluster_config(::pdpb::GetClusterConfigResponse* get_cluster_config) {
  delete get_cluster_config_;
  get_cluster_config_ = get_cluster_config;
  if (get_cluster_config) {
    set_has_get_cluster_config();
  } else {
    clear_has_get_cluster_config();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.get_cluster_config)
}

// optional .pdpb.PutClusterConfigResponse put_cluster_config = 13;
bool Response::has_put_cluster_config() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Response::set_has_put_cluster_config() {
  _has_bits_[0] |= 0x00001000u;
}
void Response::clear_has_put_cluster_config() {
  _has_bits_[0] &= ~0x00001000u;
}
void Response::clear_put_cluster_config() {
  if (put_cluster_config_ != NULL) put_cluster_config_->::pdpb::PutClusterConfigResponse::Clear();
  clear_has_put_cluster_config();
}
const ::pdpb::PutClusterConfigResponse& Response::put_cluster_config() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.put_cluster_config)
  return put_cluster_config_ != NULL ? *put_cluster_config_
                         : *::pdpb::PutClusterConfigResponse::internal_default_instance();
}
::pdpb::PutClusterConfigResponse* Response::mutable_put_cluster_config() {
  set_has_put_cluster_config();
  if (put_cluster_config_ == NULL) {
    put_cluster_config_ = new ::pdpb::PutClusterConfigResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.put_cluster_config)
  return put_cluster_config_;
}
::pdpb::PutClusterConfigResponse* Response::release_put_cluster_config() {
  // @@protoc_insertion_point(field_release:pdpb.Response.put_cluster_config)
  clear_has_put_cluster_config();
  ::pdpb::PutClusterConfigResponse* temp = put_cluster_config_;
  put_cluster_config_ = NULL;
  return temp;
}
void Response::set_allocated_put_cluster_config(::pdpb::PutClusterConfigResponse* put_cluster_config) {
  delete put_cluster_config_;
  put_cluster_config_ = put_cluster_config;
  if (put_cluster_config) {
    set_has_put_cluster_config();
  } else {
    clear_has_put_cluster_config();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.put_cluster_config)
}

// optional .pdpb.StoreHeartbeatResponse store_heartbeat = 14;
bool Response::has_store_heartbeat() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void Response::set_has_store_heartbeat() {
  _has_bits_[0] |= 0x00002000u;
}
void Response::clear_has_store_heartbeat() {
  _has_bits_[0] &= ~0x00002000u;
}
void Response::clear_store_heartbeat() {
  if (store_heartbeat_ != NULL) store_heartbeat_->::pdpb::StoreHeartbeatResponse::Clear();
  clear_has_store_heartbeat();
}
const ::pdpb::StoreHeartbeatResponse& Response::store_heartbeat() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.store_heartbeat)
  return store_heartbeat_ != NULL ? *store_heartbeat_
                         : *::pdpb::StoreHeartbeatResponse::internal_default_instance();
}
::pdpb::StoreHeartbeatResponse* Response::mutable_store_heartbeat() {
  set_has_store_heartbeat();
  if (store_heartbeat_ == NULL) {
    store_heartbeat_ = new ::pdpb::StoreHeartbeatResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.store_heartbeat)
  return store_heartbeat_;
}
::pdpb::StoreHeartbeatResponse* Response::release_store_heartbeat() {
  // @@protoc_insertion_point(field_release:pdpb.Response.store_heartbeat)
  clear_has_store_heartbeat();
  ::pdpb::StoreHeartbeatResponse* temp = store_heartbeat_;
  store_heartbeat_ = NULL;
  return temp;
}
void Response::set_allocated_store_heartbeat(::pdpb::StoreHeartbeatResponse* store_heartbeat) {
  delete store_heartbeat_;
  store_heartbeat_ = store_heartbeat;
  if (store_heartbeat) {
    set_has_store_heartbeat();
  } else {
    clear_has_store_heartbeat();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.store_heartbeat)
}

// optional .pdpb.ReportSplitResponse report_split = 15;
bool Response::has_report_split() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void Response::set_has_report_split() {
  _has_bits_[0] |= 0x00004000u;
}
void Response::clear_has_report_split() {
  _has_bits_[0] &= ~0x00004000u;
}
void Response::clear_report_split() {
  if (report_split_ != NULL) report_split_->::pdpb::ReportSplitResponse::Clear();
  clear_has_report_split();
}
const ::pdpb::ReportSplitResponse& Response::report_split() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.report_split)
  return report_split_ != NULL ? *report_split_
                         : *::pdpb::ReportSplitResponse::internal_default_instance();
}
::pdpb::ReportSplitResponse* Response::mutable_report_split() {
  set_has_report_split();
  if (report_split_ == NULL) {
    report_split_ = new ::pdpb::ReportSplitResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.report_split)
  return report_split_;
}
::pdpb::ReportSplitResponse* Response::release_report_split() {
  // @@protoc_insertion_point(field_release:pdpb.Response.report_split)
  clear_has_report_split();
  ::pdpb::ReportSplitResponse* temp = report_split_;
  report_split_ = NULL;
  return temp;
}
void Response::set_allocated_report_split(::pdpb::ReportSplitResponse* report_split) {
  delete report_split_;
  report_split_ = report_split;
  if (report_split) {
    set_has_report_split();
  } else {
    clear_has_report_split();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.report_split)
}

// optional .pdpb.GetRegionResponse get_region_by_id = 16;
bool Response::has_get_region_by_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void Response::set_has_get_region_by_id() {
  _has_bits_[0] |= 0x00008000u;
}
void Response::clear_has_get_region_by_id() {
  _has_bits_[0] &= ~0x00008000u;
}
void Response::clear_get_region_by_id() {
  if (get_region_by_id_ != NULL) get_region_by_id_->::pdpb::GetRegionResponse::Clear();
  clear_has_get_region_by_id();
}
const ::pdpb::GetRegionResponse& Response::get_region_by_id() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.get_region_by_id)
  return get_region_by_id_ != NULL ? *get_region_by_id_
                         : *::pdpb::GetRegionResponse::internal_default_instance();
}
::pdpb::GetRegionResponse* Response::mutable_get_region_by_id() {
  set_has_get_region_by_id();
  if (get_region_by_id_ == NULL) {
    get_region_by_id_ = new ::pdpb::GetRegionResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.get_region_by_id)
  return get_region_by_id_;
}
::pdpb::GetRegionResponse* Response::release_get_region_by_id() {
  // @@protoc_insertion_point(field_release:pdpb.Response.get_region_by_id)
  clear_has_get_region_by_id();
  ::pdpb::GetRegionResponse* temp = get_region_by_id_;
  get_region_by_id_ = NULL;
  return temp;
}
void Response::set_allocated_get_region_by_id(::pdpb::GetRegionResponse* get_region_by_id) {
  delete get_region_by_id_;
  get_region_by_id_ = get_region_by_id;
  if (get_region_by_id) {
    set_has_get_region_by_id();
  } else {
    clear_has_get_region_by_id();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.get_region_by_id)
}

// optional .pdpb.GetPDMembersResponse get_pd_members = 17;
bool Response::has_get_pd_members() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void Response::set_has_get_pd_members() {
  _has_bits_[0] |= 0x00010000u;
}
void Response::clear_has_get_pd_members() {
  _has_bits_[0] &= ~0x00010000u;
}
void Response::clear_get_pd_members() {
  if (get_pd_members_ != NULL) get_pd_members_->::pdpb::GetPDMembersResponse::Clear();
  clear_has_get_pd_members();
}
const ::pdpb::GetPDMembersResponse& Response::get_pd_members() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.get_pd_members)
  return get_pd_members_ != NULL ? *get_pd_members_
                         : *::pdpb::GetPDMembersResponse::internal_default_instance();
}
::pdpb::GetPDMembersResponse* Response::mutable_get_pd_members() {
  set_has_get_pd_members();
  if (get_pd_members_ == NULL) {
    get_pd_members_ = new ::pdpb::GetPDMembersResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.get_pd_members)
  return get_pd_members_;
}
::pdpb::GetPDMembersResponse* Response::release_get_pd_members() {
  // @@protoc_insertion_point(field_release:pdpb.Response.get_pd_members)
  clear_has_get_pd_members();
  ::pdpb::GetPDMembersResponse* temp = get_pd_members_;
  get_pd_members_ = NULL;
  return temp;
}
void Response::set_allocated_get_pd_members(::pdpb::GetPDMembersResponse* get_pd_members) {
  delete get_pd_members_;
  get_pd_members_ = get_pd_members;
  if (get_pd_members) {
    set_has_get_pd_members();
  } else {
    clear_has_get_pd_members();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.get_pd_members)
}

inline const Response* Response::internal_default_instance() {
  return &Response_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BootstrappedError::BootstrappedError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.BootstrappedError)
}

void BootstrappedError::InitAsDefaultInstance() {
}

BootstrappedError::BootstrappedError(const BootstrappedError& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.BootstrappedError)
}

void BootstrappedError::SharedCtor() {
  _cached_size_ = 0;
}

BootstrappedError::~BootstrappedError() {
  // @@protoc_insertion_point(destructor:pdpb.BootstrappedError)
  SharedDtor();
}

void BootstrappedError::SharedDtor() {
}

void BootstrappedError::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BootstrappedError::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BootstrappedError_descriptor_;
}

const BootstrappedError& BootstrappedError::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BootstrappedError> BootstrappedError_default_instance_;

BootstrappedError* BootstrappedError::New(::google::protobuf::Arena* arena) const {
  BootstrappedError* n = new BootstrappedError;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BootstrappedError::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.BootstrappedError)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BootstrappedError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.BootstrappedError)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.BootstrappedError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.BootstrappedError)
  return false;
#undef DO_
}

void BootstrappedError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.BootstrappedError)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.BootstrappedError)
}

::google::protobuf::uint8* BootstrappedError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.BootstrappedError)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.BootstrappedError)
  return target;
}

size_t BootstrappedError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.BootstrappedError)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BootstrappedError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.BootstrappedError)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BootstrappedError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BootstrappedError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.BootstrappedError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.BootstrappedError)
    UnsafeMergeFrom(*source);
  }
}

void BootstrappedError::MergeFrom(const BootstrappedError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.BootstrappedError)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BootstrappedError::UnsafeMergeFrom(const BootstrappedError& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void BootstrappedError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.BootstrappedError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BootstrappedError::CopyFrom(const BootstrappedError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.BootstrappedError)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BootstrappedError::IsInitialized() const {

  return true;
}

void BootstrappedError::Swap(BootstrappedError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BootstrappedError::InternalSwap(BootstrappedError* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BootstrappedError::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BootstrappedError_descriptor_;
  metadata.reflection = BootstrappedError_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BootstrappedError

inline const BootstrappedError* BootstrappedError::internal_default_instance() {
  return &BootstrappedError_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StoreIsTombstoneError::StoreIsTombstoneError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.StoreIsTombstoneError)
}

void StoreIsTombstoneError::InitAsDefaultInstance() {
}

StoreIsTombstoneError::StoreIsTombstoneError(const StoreIsTombstoneError& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.StoreIsTombstoneError)
}

void StoreIsTombstoneError::SharedCtor() {
  _cached_size_ = 0;
}

StoreIsTombstoneError::~StoreIsTombstoneError() {
  // @@protoc_insertion_point(destructor:pdpb.StoreIsTombstoneError)
  SharedDtor();
}

void StoreIsTombstoneError::SharedDtor() {
}

void StoreIsTombstoneError::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StoreIsTombstoneError::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StoreIsTombstoneError_descriptor_;
}

const StoreIsTombstoneError& StoreIsTombstoneError::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<StoreIsTombstoneError> StoreIsTombstoneError_default_instance_;

StoreIsTombstoneError* StoreIsTombstoneError::New(::google::protobuf::Arena* arena) const {
  StoreIsTombstoneError* n = new StoreIsTombstoneError;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StoreIsTombstoneError::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.StoreIsTombstoneError)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool StoreIsTombstoneError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.StoreIsTombstoneError)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.StoreIsTombstoneError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.StoreIsTombstoneError)
  return false;
#undef DO_
}

void StoreIsTombstoneError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.StoreIsTombstoneError)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.StoreIsTombstoneError)
}

::google::protobuf::uint8* StoreIsTombstoneError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.StoreIsTombstoneError)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.StoreIsTombstoneError)
  return target;
}

size_t StoreIsTombstoneError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.StoreIsTombstoneError)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StoreIsTombstoneError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.StoreIsTombstoneError)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const StoreIsTombstoneError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StoreIsTombstoneError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.StoreIsTombstoneError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.StoreIsTombstoneError)
    UnsafeMergeFrom(*source);
  }
}

void StoreIsTombstoneError::MergeFrom(const StoreIsTombstoneError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.StoreIsTombstoneError)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void StoreIsTombstoneError::UnsafeMergeFrom(const StoreIsTombstoneError& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void StoreIsTombstoneError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.StoreIsTombstoneError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StoreIsTombstoneError::CopyFrom(const StoreIsTombstoneError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.StoreIsTombstoneError)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool StoreIsTombstoneError::IsInitialized() const {

  return true;
}

void StoreIsTombstoneError::Swap(StoreIsTombstoneError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StoreIsTombstoneError::InternalSwap(StoreIsTombstoneError* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StoreIsTombstoneError::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StoreIsTombstoneError_descriptor_;
  metadata.reflection = StoreIsTombstoneError_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StoreIsTombstoneError

inline const StoreIsTombstoneError* StoreIsTombstoneError::internal_default_instance() {
  return &StoreIsTombstoneError_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Error::kMessageFieldNumber;
const int Error::kBootstrappedFieldNumber;
const int Error::kIsTombstoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Error::Error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_pdpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pdpb.Error)
}

void Error::InitAsDefaultInstance() {
  bootstrapped_ = const_cast< ::pdpb::BootstrappedError*>(
      ::pdpb::BootstrappedError::internal_default_instance());
  is_tombstone_ = const_cast< ::pdpb::StoreIsTombstoneError*>(
      ::pdpb::StoreIsTombstoneError::internal_default_instance());
}

Error::Error(const Error& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pdpb.Error)
}

void Error::SharedCtor() {
  _cached_size_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bootstrapped_ = NULL;
  is_tombstone_ = NULL;
}

Error::~Error() {
  // @@protoc_insertion_point(destructor:pdpb.Error)
  SharedDtor();
}

void Error::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &Error_default_instance_.get()) {
    delete bootstrapped_;
    delete is_tombstone_;
  }
}

void Error::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Error::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Error_descriptor_;
}

const Error& Error::default_instance() {
  protobuf_InitDefaults_pdpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Error> Error_default_instance_;

Error* Error::New(::google::protobuf::Arena* arena) const {
  Error* n = new Error;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Error::Clear() {
// @@protoc_insertion_point(message_clear_start:pdpb.Error)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_message()) {
      message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_bootstrapped()) {
      if (bootstrapped_ != NULL) bootstrapped_->::pdpb::BootstrappedError::Clear();
    }
    if (has_is_tombstone()) {
      if (is_tombstone_ != NULL) is_tombstone_->::pdpb::StoreIsTombstoneError::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pdpb.Error)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string message = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pdpb.Error.message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_bootstrapped;
        break;
      }

      // optional .pdpb.BootstrappedError bootstrapped = 2;
      case 2: {
        if (tag == 18) {
         parse_bootstrapped:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bootstrapped()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_is_tombstone;
        break;
      }

      // optional .pdpb.StoreIsTombstoneError is_tombstone = 3;
      case 3: {
        if (tag == 26) {
         parse_is_tombstone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_is_tombstone()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pdpb.Error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pdpb.Error)
  return false;
#undef DO_
}

void Error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pdpb.Error)
  // optional string message = 1;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pdpb.Error.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // optional .pdpb.BootstrappedError bootstrapped = 2;
  if (has_bootstrapped()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->bootstrapped_, output);
  }

  // optional .pdpb.StoreIsTombstoneError is_tombstone = 3;
  if (has_is_tombstone()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->is_tombstone_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pdpb.Error)
}

::google::protobuf::uint8* Error::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pdpb.Error)
  // optional string message = 1;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pdpb.Error.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // optional .pdpb.BootstrappedError bootstrapped = 2;
  if (has_bootstrapped()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->bootstrapped_, false, target);
  }

  // optional .pdpb.StoreIsTombstoneError is_tombstone = 3;
  if (has_is_tombstone()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->is_tombstone_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pdpb.Error)
  return target;
}

size_t Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pdpb.Error)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional string message = 1;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional .pdpb.BootstrappedError bootstrapped = 2;
    if (has_bootstrapped()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bootstrapped_);
    }

    // optional .pdpb.StoreIsTombstoneError is_tombstone = 3;
    if (has_is_tombstone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->is_tombstone_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pdpb.Error)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Error* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Error>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pdpb.Error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pdpb.Error)
    UnsafeMergeFrom(*source);
  }
}

void Error::MergeFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pdpb.Error)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Error::UnsafeMergeFrom(const Error& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_message()) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (from.has_bootstrapped()) {
      mutable_bootstrapped()->::pdpb::BootstrappedError::MergeFrom(from.bootstrapped());
    }
    if (from.has_is_tombstone()) {
      mutable_is_tombstone()->::pdpb::StoreIsTombstoneError::MergeFrom(from.is_tombstone());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pdpb.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error::CopyFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pdpb.Error)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Error::IsInitialized() const {

  return true;
}

void Error::Swap(Error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Error::InternalSwap(Error* other) {
  message_.Swap(&other->message_);
  std::swap(bootstrapped_, other->bootstrapped_);
  std::swap(is_tombstone_, other->is_tombstone_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Error::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Error_descriptor_;
  metadata.reflection = Error_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Error

// optional string message = 1;
bool Error::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Error::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
void Error::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
void Error::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
const ::std::string& Error::message() const {
  // @@protoc_insertion_point(field_get:pdpb.Error.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Error::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pdpb.Error.message)
}
void Error::set_message(const char* value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pdpb.Error.message)
}
void Error::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pdpb.Error.message)
}
::std::string* Error::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:pdpb.Error.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Error::release_message() {
  // @@protoc_insertion_point(field_release:pdpb.Error.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Error::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:pdpb.Error.message)
}

// optional .pdpb.BootstrappedError bootstrapped = 2;
bool Error::has_bootstrapped() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Error::set_has_bootstrapped() {
  _has_bits_[0] |= 0x00000002u;
}
void Error::clear_has_bootstrapped() {
  _has_bits_[0] &= ~0x00000002u;
}
void Error::clear_bootstrapped() {
  if (bootstrapped_ != NULL) bootstrapped_->::pdpb::BootstrappedError::Clear();
  clear_has_bootstrapped();
}
const ::pdpb::BootstrappedError& Error::bootstrapped() const {
  // @@protoc_insertion_point(field_get:pdpb.Error.bootstrapped)
  return bootstrapped_ != NULL ? *bootstrapped_
                         : *::pdpb::BootstrappedError::internal_default_instance();
}
::pdpb::BootstrappedError* Error::mutable_bootstrapped() {
  set_has_bootstrapped();
  if (bootstrapped_ == NULL) {
    bootstrapped_ = new ::pdpb::BootstrappedError;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Error.bootstrapped)
  return bootstrapped_;
}
::pdpb::BootstrappedError* Error::release_bootstrapped() {
  // @@protoc_insertion_point(field_release:pdpb.Error.bootstrapped)
  clear_has_bootstrapped();
  ::pdpb::BootstrappedError* temp = bootstrapped_;
  bootstrapped_ = NULL;
  return temp;
}
void Error::set_allocated_bootstrapped(::pdpb::BootstrappedError* bootstrapped) {
  delete bootstrapped_;
  bootstrapped_ = bootstrapped;
  if (bootstrapped) {
    set_has_bootstrapped();
  } else {
    clear_has_bootstrapped();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Error.bootstrapped)
}

// optional .pdpb.StoreIsTombstoneError is_tombstone = 3;
bool Error::has_is_tombstone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Error::set_has_is_tombstone() {
  _has_bits_[0] |= 0x00000004u;
}
void Error::clear_has_is_tombstone() {
  _has_bits_[0] &= ~0x00000004u;
}
void Error::clear_is_tombstone() {
  if (is_tombstone_ != NULL) is_tombstone_->::pdpb::StoreIsTombstoneError::Clear();
  clear_has_is_tombstone();
}
const ::pdpb::StoreIsTombstoneError& Error::is_tombstone() const {
  // @@protoc_insertion_point(field_get:pdpb.Error.is_tombstone)
  return is_tombstone_ != NULL ? *is_tombstone_
                         : *::pdpb::StoreIsTombstoneError::internal_default_instance();
}
::pdpb::StoreIsTombstoneError* Error::mutable_is_tombstone() {
  set_has_is_tombstone();
  if (is_tombstone_ == NULL) {
    is_tombstone_ = new ::pdpb::StoreIsTombstoneError;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Error.is_tombstone)
  return is_tombstone_;
}
::pdpb::StoreIsTombstoneError* Error::release_is_tombstone() {
  // @@protoc_insertion_point(field_release:pdpb.Error.is_tombstone)
  clear_has_is_tombstone();
  ::pdpb::StoreIsTombstoneError* temp = is_tombstone_;
  is_tombstone_ = NULL;
  return temp;
}
void Error::set_allocated_is_tombstone(::pdpb::StoreIsTombstoneError* is_tombstone) {
  delete is_tombstone_;
  is_tombstone_ = is_tombstone;
  if (is_tombstone) {
    set_has_is_tombstone();
  } else {
    clear_has_is_tombstone();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Error.is_tombstone)
}

inline const Error* Error::internal_default_instance() {
  return &Error_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pdpb

// @@protoc_insertion_point(global_scope)
