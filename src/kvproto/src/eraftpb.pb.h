// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: eraftpb.proto

#ifndef PROTOBUF_eraftpb_2eproto__INCLUDED
#define PROTOBUF_eraftpb_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace eraftpb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_eraftpb_2eproto();
void protobuf_InitDefaults_eraftpb_2eproto();
void protobuf_AssignDesc_eraftpb_2eproto();
void protobuf_ShutdownFile_eraftpb_2eproto();

class ConfChange;
class ConfState;
class Entry;
class HardState;
class Message;
class Snapshot;
class SnapshotMetadata;

enum EntryType {
  EntryNormal = 0,
  EntryConfChange = 1
};
bool EntryType_IsValid(int value);
const EntryType EntryType_MIN = EntryNormal;
const EntryType EntryType_MAX = EntryConfChange;
const int EntryType_ARRAYSIZE = EntryType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EntryType_descriptor();
inline const ::std::string& EntryType_Name(EntryType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EntryType_descriptor(), value);
}
inline bool EntryType_Parse(
    const ::std::string& name, EntryType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EntryType>(
    EntryType_descriptor(), name, value);
}
enum MessageType {
  MsgHup = 0,
  MsgBeat = 1,
  MsgPropose = 2,
  MsgAppend = 3,
  MsgAppendResponse = 4,
  MsgRequestVote = 5,
  MsgRequestVoteResponse = 6,
  MsgSnapshot = 7,
  MsgHeartbeat = 8,
  MsgHeartbeatResponse = 9,
  MsgUnreachable = 10,
  MsgSnapStatus = 11,
  MsgCheckQuorum = 12,
  MsgTransferLeader = 13,
  MsgTimeoutNow = 14,
  MsgReadIndex = 15,
  MsgReadIndexResp = 16,
  MsgRequestPreVote = 17,
  MsgRequestPreVoteResponse = 18
};
bool MessageType_IsValid(int value);
const MessageType MessageType_MIN = MsgHup;
const MessageType MessageType_MAX = MsgRequestPreVoteResponse;
const int MessageType_ARRAYSIZE = MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_descriptor();
inline const ::std::string& MessageType_Name(MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_descriptor(), value);
}
inline bool MessageType_Parse(
    const ::std::string& name, MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType>(
    MessageType_descriptor(), name, value);
}
enum ConfChangeType {
  AddNode = 0,
  RemoveNode = 1
};
bool ConfChangeType_IsValid(int value);
const ConfChangeType ConfChangeType_MIN = AddNode;
const ConfChangeType ConfChangeType_MAX = RemoveNode;
const int ConfChangeType_ARRAYSIZE = ConfChangeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ConfChangeType_descriptor();
inline const ::std::string& ConfChangeType_Name(ConfChangeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ConfChangeType_descriptor(), value);
}
inline bool ConfChangeType_Parse(
    const ::std::string& name, ConfChangeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConfChangeType>(
    ConfChangeType_descriptor(), name, value);
}
// ===================================================================

class Entry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftpb.Entry) */ {
 public:
  Entry();
  virtual ~Entry();

  Entry(const Entry& from);

  inline Entry& operator=(const Entry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Entry& default_instance();

  static const Entry* internal_default_instance();

  void Swap(Entry* other);

  // implements Message ----------------------------------------------

  inline Entry* New() const { return New(NULL); }

  Entry* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Entry& from);
  void MergeFrom(const Entry& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Entry* other);
  void UnsafeMergeFrom(const Entry& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .eraftpb.EntryType entry_type = 1;
  bool has_entry_type() const;
  void clear_entry_type();
  static const int kEntryTypeFieldNumber = 1;
  ::eraftpb::EntryType entry_type() const;
  void set_entry_type(::eraftpb::EntryType value);

  // optional uint64 term = 2;
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 2;
  ::google::protobuf::uint64 term() const;
  void set_term(::google::protobuf::uint64 value);

  // optional uint64 index = 3;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::uint64 index() const;
  void set_index(::google::protobuf::uint64 value);

  // optional bytes data = 4;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 4;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:eraftpb.Entry)
 private:
  inline void set_has_entry_type();
  inline void clear_has_entry_type();
  inline void set_has_term();
  inline void clear_has_term();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_data();
  inline void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint64 term_;
  ::google::protobuf::uint64 index_;
  int entry_type_;
  friend void  protobuf_InitDefaults_eraftpb_2eproto_impl();
  friend void  protobuf_AddDesc_eraftpb_2eproto_impl();
  friend void protobuf_AssignDesc_eraftpb_2eproto();
  friend void protobuf_ShutdownFile_eraftpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Entry> Entry_default_instance_;

// -------------------------------------------------------------------

class SnapshotMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftpb.SnapshotMetadata) */ {
 public:
  SnapshotMetadata();
  virtual ~SnapshotMetadata();

  SnapshotMetadata(const SnapshotMetadata& from);

  inline SnapshotMetadata& operator=(const SnapshotMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SnapshotMetadata& default_instance();

  static const SnapshotMetadata* internal_default_instance();

  void Swap(SnapshotMetadata* other);

  // implements Message ----------------------------------------------

  inline SnapshotMetadata* New() const { return New(NULL); }

  SnapshotMetadata* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SnapshotMetadata& from);
  void MergeFrom(const SnapshotMetadata& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SnapshotMetadata* other);
  void UnsafeMergeFrom(const SnapshotMetadata& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .eraftpb.ConfState conf_state = 1;
  bool has_conf_state() const;
  void clear_conf_state();
  static const int kConfStateFieldNumber = 1;
  const ::eraftpb::ConfState& conf_state() const;
  ::eraftpb::ConfState* mutable_conf_state();
  ::eraftpb::ConfState* release_conf_state();
  void set_allocated_conf_state(::eraftpb::ConfState* conf_state);

  // optional uint64 index = 2;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::uint64 index() const;
  void set_index(::google::protobuf::uint64 value);

  // optional uint64 term = 3;
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 3;
  ::google::protobuf::uint64 term() const;
  void set_term(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:eraftpb.SnapshotMetadata)
 private:
  inline void set_has_conf_state();
  inline void clear_has_conf_state();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_term();
  inline void clear_has_term();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::eraftpb::ConfState* conf_state_;
  ::google::protobuf::uint64 index_;
  ::google::protobuf::uint64 term_;
  friend void  protobuf_InitDefaults_eraftpb_2eproto_impl();
  friend void  protobuf_AddDesc_eraftpb_2eproto_impl();
  friend void protobuf_AssignDesc_eraftpb_2eproto();
  friend void protobuf_ShutdownFile_eraftpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SnapshotMetadata> SnapshotMetadata_default_instance_;

// -------------------------------------------------------------------

class Snapshot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftpb.Snapshot) */ {
 public:
  Snapshot();
  virtual ~Snapshot();

  Snapshot(const Snapshot& from);

  inline Snapshot& operator=(const Snapshot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Snapshot& default_instance();

  static const Snapshot* internal_default_instance();

  void Swap(Snapshot* other);

  // implements Message ----------------------------------------------

  inline Snapshot* New() const { return New(NULL); }

  Snapshot* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Snapshot& from);
  void MergeFrom(const Snapshot& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Snapshot* other);
  void UnsafeMergeFrom(const Snapshot& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 1;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional .eraftpb.SnapshotMetadata metadata = 2;
  bool has_metadata() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 2;
  const ::eraftpb::SnapshotMetadata& metadata() const;
  ::eraftpb::SnapshotMetadata* mutable_metadata();
  ::eraftpb::SnapshotMetadata* release_metadata();
  void set_allocated_metadata(::eraftpb::SnapshotMetadata* metadata);

  // @@protoc_insertion_point(class_scope:eraftpb.Snapshot)
 private:
  inline void set_has_data();
  inline void clear_has_data();
  inline void set_has_metadata();
  inline void clear_has_metadata();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::eraftpb::SnapshotMetadata* metadata_;
  friend void  protobuf_InitDefaults_eraftpb_2eproto_impl();
  friend void  protobuf_AddDesc_eraftpb_2eproto_impl();
  friend void protobuf_AssignDesc_eraftpb_2eproto();
  friend void protobuf_ShutdownFile_eraftpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Snapshot> Snapshot_default_instance_;

// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftpb.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  static const Message* internal_default_instance();

  void Swap(Message* other);

  // implements Message ----------------------------------------------

  inline Message* New() const { return New(NULL); }

  Message* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Message* other);
  void UnsafeMergeFrom(const Message& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .eraftpb.MessageType msg_type = 1;
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::eraftpb::MessageType msg_type() const;
  void set_msg_type(::eraftpb::MessageType value);

  // optional uint64 to = 2;
  bool has_to() const;
  void clear_to();
  static const int kToFieldNumber = 2;
  ::google::protobuf::uint64 to() const;
  void set_to(::google::protobuf::uint64 value);

  // optional uint64 from = 3;
  bool has_from() const;
  void clear_from();
  static const int kFromFieldNumber = 3;
  ::google::protobuf::uint64 from() const;
  void set_from(::google::protobuf::uint64 value);

  // optional uint64 term = 4;
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 4;
  ::google::protobuf::uint64 term() const;
  void set_term(::google::protobuf::uint64 value);

  // optional uint64 log_term = 5;
  bool has_log_term() const;
  void clear_log_term();
  static const int kLogTermFieldNumber = 5;
  ::google::protobuf::uint64 log_term() const;
  void set_log_term(::google::protobuf::uint64 value);

  // optional uint64 index = 6;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 6;
  ::google::protobuf::uint64 index() const;
  void set_index(::google::protobuf::uint64 value);

  // repeated .eraftpb.Entry entries = 7;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 7;
  const ::eraftpb::Entry& entries(int index) const;
  ::eraftpb::Entry* mutable_entries(int index);
  ::eraftpb::Entry* add_entries();
  ::google::protobuf::RepeatedPtrField< ::eraftpb::Entry >*
      mutable_entries();
  const ::google::protobuf::RepeatedPtrField< ::eraftpb::Entry >&
      entries() const;

  // optional uint64 commit = 8;
  bool has_commit() const;
  void clear_commit();
  static const int kCommitFieldNumber = 8;
  ::google::protobuf::uint64 commit() const;
  void set_commit(::google::protobuf::uint64 value);

  // optional .eraftpb.Snapshot snapshot = 9;
  bool has_snapshot() const;
  void clear_snapshot();
  static const int kSnapshotFieldNumber = 9;
  const ::eraftpb::Snapshot& snapshot() const;
  ::eraftpb::Snapshot* mutable_snapshot();
  ::eraftpb::Snapshot* release_snapshot();
  void set_allocated_snapshot(::eraftpb::Snapshot* snapshot);

  // optional bool reject = 10;
  bool has_reject() const;
  void clear_reject();
  static const int kRejectFieldNumber = 10;
  bool reject() const;
  void set_reject(bool value);

  // optional uint64 reject_hint = 11;
  bool has_reject_hint() const;
  void clear_reject_hint();
  static const int kRejectHintFieldNumber = 11;
  ::google::protobuf::uint64 reject_hint() const;
  void set_reject_hint(::google::protobuf::uint64 value);

  // optional bytes context = 12;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 12;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  void set_context(const char* value);
  void set_context(const void* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // @@protoc_insertion_point(class_scope:eraftpb.Message)
 private:
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_to();
  inline void clear_has_to();
  inline void set_has_from();
  inline void clear_has_from();
  inline void set_has_term();
  inline void clear_has_term();
  inline void set_has_log_term();
  inline void clear_has_log_term();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_commit();
  inline void clear_has_commit();
  inline void set_has_snapshot();
  inline void clear_has_snapshot();
  inline void set_has_reject();
  inline void clear_has_reject();
  inline void set_has_reject_hint();
  inline void clear_has_reject_hint();
  inline void set_has_context();
  inline void clear_has_context();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::eraftpb::Entry > entries_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  ::eraftpb::Snapshot* snapshot_;
  ::google::protobuf::uint64 to_;
  ::google::protobuf::uint64 from_;
  ::google::protobuf::uint64 term_;
  ::google::protobuf::uint64 log_term_;
  int msg_type_;
  bool reject_;
  ::google::protobuf::uint64 index_;
  ::google::protobuf::uint64 commit_;
  ::google::protobuf::uint64 reject_hint_;
  friend void  protobuf_InitDefaults_eraftpb_2eproto_impl();
  friend void  protobuf_AddDesc_eraftpb_2eproto_impl();
  friend void protobuf_AssignDesc_eraftpb_2eproto();
  friend void protobuf_ShutdownFile_eraftpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Message> Message_default_instance_;

// -------------------------------------------------------------------

class HardState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftpb.HardState) */ {
 public:
  HardState();
  virtual ~HardState();

  HardState(const HardState& from);

  inline HardState& operator=(const HardState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HardState& default_instance();

  static const HardState* internal_default_instance();

  void Swap(HardState* other);

  // implements Message ----------------------------------------------

  inline HardState* New() const { return New(NULL); }

  HardState* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HardState& from);
  void MergeFrom(const HardState& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HardState* other);
  void UnsafeMergeFrom(const HardState& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 term = 1;
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 1;
  ::google::protobuf::uint64 term() const;
  void set_term(::google::protobuf::uint64 value);

  // optional uint64 vote = 2;
  bool has_vote() const;
  void clear_vote();
  static const int kVoteFieldNumber = 2;
  ::google::protobuf::uint64 vote() const;
  void set_vote(::google::protobuf::uint64 value);

  // optional uint64 commit = 3;
  bool has_commit() const;
  void clear_commit();
  static const int kCommitFieldNumber = 3;
  ::google::protobuf::uint64 commit() const;
  void set_commit(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:eraftpb.HardState)
 private:
  inline void set_has_term();
  inline void clear_has_term();
  inline void set_has_vote();
  inline void clear_has_vote();
  inline void set_has_commit();
  inline void clear_has_commit();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 term_;
  ::google::protobuf::uint64 vote_;
  ::google::protobuf::uint64 commit_;
  friend void  protobuf_InitDefaults_eraftpb_2eproto_impl();
  friend void  protobuf_AddDesc_eraftpb_2eproto_impl();
  friend void protobuf_AssignDesc_eraftpb_2eproto();
  friend void protobuf_ShutdownFile_eraftpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HardState> HardState_default_instance_;

// -------------------------------------------------------------------

class ConfState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftpb.ConfState) */ {
 public:
  ConfState();
  virtual ~ConfState();

  ConfState(const ConfState& from);

  inline ConfState& operator=(const ConfState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfState& default_instance();

  static const ConfState* internal_default_instance();

  void Swap(ConfState* other);

  // implements Message ----------------------------------------------

  inline ConfState* New() const { return New(NULL); }

  ConfState* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConfState& from);
  void MergeFrom(const ConfState& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConfState* other);
  void UnsafeMergeFrom(const ConfState& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 nodes = 1;
  int nodes_size() const;
  void clear_nodes();
  static const int kNodesFieldNumber = 1;
  ::google::protobuf::uint64 nodes(int index) const;
  void set_nodes(int index, ::google::protobuf::uint64 value);
  void add_nodes(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      nodes() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_nodes();

  // @@protoc_insertion_point(class_scope:eraftpb.ConfState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > nodes_;
  friend void  protobuf_InitDefaults_eraftpb_2eproto_impl();
  friend void  protobuf_AddDesc_eraftpb_2eproto_impl();
  friend void protobuf_AssignDesc_eraftpb_2eproto();
  friend void protobuf_ShutdownFile_eraftpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ConfState> ConfState_default_instance_;

// -------------------------------------------------------------------

class ConfChange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:eraftpb.ConfChange) */ {
 public:
  ConfChange();
  virtual ~ConfChange();

  ConfChange(const ConfChange& from);

  inline ConfChange& operator=(const ConfChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfChange& default_instance();

  static const ConfChange* internal_default_instance();

  void Swap(ConfChange* other);

  // implements Message ----------------------------------------------

  inline ConfChange* New() const { return New(NULL); }

  ConfChange* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConfChange& from);
  void MergeFrom(const ConfChange& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ConfChange* other);
  void UnsafeMergeFrom(const ConfChange& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional .eraftpb.ConfChangeType change_type = 2;
  bool has_change_type() const;
  void clear_change_type();
  static const int kChangeTypeFieldNumber = 2;
  ::eraftpb::ConfChangeType change_type() const;
  void set_change_type(::eraftpb::ConfChangeType value);

  // optional uint64 node_id = 3;
  bool has_node_id() const;
  void clear_node_id();
  static const int kNodeIdFieldNumber = 3;
  ::google::protobuf::uint64 node_id() const;
  void set_node_id(::google::protobuf::uint64 value);

  // optional bytes context = 4;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 4;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  void set_context(const char* value);
  void set_context(const void* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // @@protoc_insertion_point(class_scope:eraftpb.ConfChange)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_change_type();
  inline void clear_has_change_type();
  inline void set_has_node_id();
  inline void clear_has_node_id();
  inline void set_has_context();
  inline void clear_has_context();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 node_id_;
  int change_type_;
  friend void  protobuf_InitDefaults_eraftpb_2eproto_impl();
  friend void  protobuf_AddDesc_eraftpb_2eproto_impl();
  friend void protobuf_AssignDesc_eraftpb_2eproto();
  friend void protobuf_ShutdownFile_eraftpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ConfChange> ConfChange_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Entry

// optional .eraftpb.EntryType entry_type = 1;
inline bool Entry::has_entry_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Entry::set_has_entry_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Entry::clear_has_entry_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Entry::clear_entry_type() {
  entry_type_ = 0;
  clear_has_entry_type();
}
inline ::eraftpb::EntryType Entry::entry_type() const {
  // @@protoc_insertion_point(field_get:eraftpb.Entry.entry_type)
  return static_cast< ::eraftpb::EntryType >(entry_type_);
}
inline void Entry::set_entry_type(::eraftpb::EntryType value) {
  assert(::eraftpb::EntryType_IsValid(value));
  set_has_entry_type();
  entry_type_ = value;
  // @@protoc_insertion_point(field_set:eraftpb.Entry.entry_type)
}

// optional uint64 term = 2;
inline bool Entry::has_term() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Entry::set_has_term() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Entry::clear_has_term() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Entry::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 Entry::term() const {
  // @@protoc_insertion_point(field_get:eraftpb.Entry.term)
  return term_;
}
inline void Entry::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:eraftpb.Entry.term)
}

// optional uint64 index = 3;
inline bool Entry::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Entry::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Entry::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Entry::clear_index() {
  index_ = GOOGLE_ULONGLONG(0);
  clear_has_index();
}
inline ::google::protobuf::uint64 Entry::index() const {
  // @@protoc_insertion_point(field_get:eraftpb.Entry.index)
  return index_;
}
inline void Entry::set_index(::google::protobuf::uint64 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:eraftpb.Entry.index)
}

// optional bytes data = 4;
inline bool Entry::has_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Entry::set_has_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Entry::clear_has_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Entry::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& Entry::data() const {
  // @@protoc_insertion_point(field_get:eraftpb.Entry.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Entry::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eraftpb.Entry.data)
}
inline void Entry::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eraftpb.Entry.data)
}
inline void Entry::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eraftpb.Entry.data)
}
inline ::std::string* Entry::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:eraftpb.Entry.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Entry::release_data() {
  // @@protoc_insertion_point(field_release:eraftpb.Entry.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Entry::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:eraftpb.Entry.data)
}

inline const Entry* Entry::internal_default_instance() {
  return &Entry_default_instance_.get();
}
// -------------------------------------------------------------------

// SnapshotMetadata

// optional .eraftpb.ConfState conf_state = 1;
inline bool SnapshotMetadata::has_conf_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SnapshotMetadata::set_has_conf_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SnapshotMetadata::clear_has_conf_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SnapshotMetadata::clear_conf_state() {
  if (conf_state_ != NULL) conf_state_->::eraftpb::ConfState::Clear();
  clear_has_conf_state();
}
inline const ::eraftpb::ConfState& SnapshotMetadata::conf_state() const {
  // @@protoc_insertion_point(field_get:eraftpb.SnapshotMetadata.conf_state)
  return conf_state_ != NULL ? *conf_state_
                         : *::eraftpb::ConfState::internal_default_instance();
}
inline ::eraftpb::ConfState* SnapshotMetadata::mutable_conf_state() {
  set_has_conf_state();
  if (conf_state_ == NULL) {
    conf_state_ = new ::eraftpb::ConfState;
  }
  // @@protoc_insertion_point(field_mutable:eraftpb.SnapshotMetadata.conf_state)
  return conf_state_;
}
inline ::eraftpb::ConfState* SnapshotMetadata::release_conf_state() {
  // @@protoc_insertion_point(field_release:eraftpb.SnapshotMetadata.conf_state)
  clear_has_conf_state();
  ::eraftpb::ConfState* temp = conf_state_;
  conf_state_ = NULL;
  return temp;
}
inline void SnapshotMetadata::set_allocated_conf_state(::eraftpb::ConfState* conf_state) {
  delete conf_state_;
  conf_state_ = conf_state;
  if (conf_state) {
    set_has_conf_state();
  } else {
    clear_has_conf_state();
  }
  // @@protoc_insertion_point(field_set_allocated:eraftpb.SnapshotMetadata.conf_state)
}

// optional uint64 index = 2;
inline bool SnapshotMetadata::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SnapshotMetadata::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SnapshotMetadata::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SnapshotMetadata::clear_index() {
  index_ = GOOGLE_ULONGLONG(0);
  clear_has_index();
}
inline ::google::protobuf::uint64 SnapshotMetadata::index() const {
  // @@protoc_insertion_point(field_get:eraftpb.SnapshotMetadata.index)
  return index_;
}
inline void SnapshotMetadata::set_index(::google::protobuf::uint64 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:eraftpb.SnapshotMetadata.index)
}

// optional uint64 term = 3;
inline bool SnapshotMetadata::has_term() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SnapshotMetadata::set_has_term() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SnapshotMetadata::clear_has_term() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SnapshotMetadata::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 SnapshotMetadata::term() const {
  // @@protoc_insertion_point(field_get:eraftpb.SnapshotMetadata.term)
  return term_;
}
inline void SnapshotMetadata::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:eraftpb.SnapshotMetadata.term)
}

inline const SnapshotMetadata* SnapshotMetadata::internal_default_instance() {
  return &SnapshotMetadata_default_instance_.get();
}
// -------------------------------------------------------------------

// Snapshot

// optional bytes data = 1;
inline bool Snapshot::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Snapshot::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Snapshot::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Snapshot::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& Snapshot::data() const {
  // @@protoc_insertion_point(field_get:eraftpb.Snapshot.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Snapshot::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eraftpb.Snapshot.data)
}
inline void Snapshot::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eraftpb.Snapshot.data)
}
inline void Snapshot::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eraftpb.Snapshot.data)
}
inline ::std::string* Snapshot::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:eraftpb.Snapshot.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Snapshot::release_data() {
  // @@protoc_insertion_point(field_release:eraftpb.Snapshot.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Snapshot::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:eraftpb.Snapshot.data)
}

// optional .eraftpb.SnapshotMetadata metadata = 2;
inline bool Snapshot::has_metadata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Snapshot::set_has_metadata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Snapshot::clear_has_metadata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Snapshot::clear_metadata() {
  if (metadata_ != NULL) metadata_->::eraftpb::SnapshotMetadata::Clear();
  clear_has_metadata();
}
inline const ::eraftpb::SnapshotMetadata& Snapshot::metadata() const {
  // @@protoc_insertion_point(field_get:eraftpb.Snapshot.metadata)
  return metadata_ != NULL ? *metadata_
                         : *::eraftpb::SnapshotMetadata::internal_default_instance();
}
inline ::eraftpb::SnapshotMetadata* Snapshot::mutable_metadata() {
  set_has_metadata();
  if (metadata_ == NULL) {
    metadata_ = new ::eraftpb::SnapshotMetadata;
  }
  // @@protoc_insertion_point(field_mutable:eraftpb.Snapshot.metadata)
  return metadata_;
}
inline ::eraftpb::SnapshotMetadata* Snapshot::release_metadata() {
  // @@protoc_insertion_point(field_release:eraftpb.Snapshot.metadata)
  clear_has_metadata();
  ::eraftpb::SnapshotMetadata* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
inline void Snapshot::set_allocated_metadata(::eraftpb::SnapshotMetadata* metadata) {
  delete metadata_;
  metadata_ = metadata;
  if (metadata) {
    set_has_metadata();
  } else {
    clear_has_metadata();
  }
  // @@protoc_insertion_point(field_set_allocated:eraftpb.Snapshot.metadata)
}

inline const Snapshot* Snapshot::internal_default_instance() {
  return &Snapshot_default_instance_.get();
}
// -------------------------------------------------------------------

// Message

// optional .eraftpb.MessageType msg_type = 1;
inline bool Message::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Message::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Message::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Message::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::eraftpb::MessageType Message::msg_type() const {
  // @@protoc_insertion_point(field_get:eraftpb.Message.msg_type)
  return static_cast< ::eraftpb::MessageType >(msg_type_);
}
inline void Message::set_msg_type(::eraftpb::MessageType value) {
  assert(::eraftpb::MessageType_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:eraftpb.Message.msg_type)
}

// optional uint64 to = 2;
inline bool Message::has_to() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Message::set_has_to() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Message::clear_has_to() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Message::clear_to() {
  to_ = GOOGLE_ULONGLONG(0);
  clear_has_to();
}
inline ::google::protobuf::uint64 Message::to() const {
  // @@protoc_insertion_point(field_get:eraftpb.Message.to)
  return to_;
}
inline void Message::set_to(::google::protobuf::uint64 value) {
  set_has_to();
  to_ = value;
  // @@protoc_insertion_point(field_set:eraftpb.Message.to)
}

// optional uint64 from = 3;
inline bool Message::has_from() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Message::set_has_from() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Message::clear_has_from() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Message::clear_from() {
  from_ = GOOGLE_ULONGLONG(0);
  clear_has_from();
}
inline ::google::protobuf::uint64 Message::from() const {
  // @@protoc_insertion_point(field_get:eraftpb.Message.from)
  return from_;
}
inline void Message::set_from(::google::protobuf::uint64 value) {
  set_has_from();
  from_ = value;
  // @@protoc_insertion_point(field_set:eraftpb.Message.from)
}

// optional uint64 term = 4;
inline bool Message::has_term() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Message::set_has_term() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Message::clear_has_term() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Message::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 Message::term() const {
  // @@protoc_insertion_point(field_get:eraftpb.Message.term)
  return term_;
}
inline void Message::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:eraftpb.Message.term)
}

// optional uint64 log_term = 5;
inline bool Message::has_log_term() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Message::set_has_log_term() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Message::clear_has_log_term() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Message::clear_log_term() {
  log_term_ = GOOGLE_ULONGLONG(0);
  clear_has_log_term();
}
inline ::google::protobuf::uint64 Message::log_term() const {
  // @@protoc_insertion_point(field_get:eraftpb.Message.log_term)
  return log_term_;
}
inline void Message::set_log_term(::google::protobuf::uint64 value) {
  set_has_log_term();
  log_term_ = value;
  // @@protoc_insertion_point(field_set:eraftpb.Message.log_term)
}

// optional uint64 index = 6;
inline bool Message::has_index() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Message::set_has_index() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Message::clear_has_index() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Message::clear_index() {
  index_ = GOOGLE_ULONGLONG(0);
  clear_has_index();
}
inline ::google::protobuf::uint64 Message::index() const {
  // @@protoc_insertion_point(field_get:eraftpb.Message.index)
  return index_;
}
inline void Message::set_index(::google::protobuf::uint64 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:eraftpb.Message.index)
}

// repeated .eraftpb.Entry entries = 7;
inline int Message::entries_size() const {
  return entries_.size();
}
inline void Message::clear_entries() {
  entries_.Clear();
}
inline const ::eraftpb::Entry& Message::entries(int index) const {
  // @@protoc_insertion_point(field_get:eraftpb.Message.entries)
  return entries_.Get(index);
}
inline ::eraftpb::Entry* Message::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:eraftpb.Message.entries)
  return entries_.Mutable(index);
}
inline ::eraftpb::Entry* Message::add_entries() {
  // @@protoc_insertion_point(field_add:eraftpb.Message.entries)
  return entries_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::eraftpb::Entry >*
Message::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:eraftpb.Message.entries)
  return &entries_;
}
inline const ::google::protobuf::RepeatedPtrField< ::eraftpb::Entry >&
Message::entries() const {
  // @@protoc_insertion_point(field_list:eraftpb.Message.entries)
  return entries_;
}

// optional uint64 commit = 8;
inline bool Message::has_commit() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Message::set_has_commit() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Message::clear_has_commit() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Message::clear_commit() {
  commit_ = GOOGLE_ULONGLONG(0);
  clear_has_commit();
}
inline ::google::protobuf::uint64 Message::commit() const {
  // @@protoc_insertion_point(field_get:eraftpb.Message.commit)
  return commit_;
}
inline void Message::set_commit(::google::protobuf::uint64 value) {
  set_has_commit();
  commit_ = value;
  // @@protoc_insertion_point(field_set:eraftpb.Message.commit)
}

// optional .eraftpb.Snapshot snapshot = 9;
inline bool Message::has_snapshot() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Message::set_has_snapshot() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Message::clear_has_snapshot() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Message::clear_snapshot() {
  if (snapshot_ != NULL) snapshot_->::eraftpb::Snapshot::Clear();
  clear_has_snapshot();
}
inline const ::eraftpb::Snapshot& Message::snapshot() const {
  // @@protoc_insertion_point(field_get:eraftpb.Message.snapshot)
  return snapshot_ != NULL ? *snapshot_
                         : *::eraftpb::Snapshot::internal_default_instance();
}
inline ::eraftpb::Snapshot* Message::mutable_snapshot() {
  set_has_snapshot();
  if (snapshot_ == NULL) {
    snapshot_ = new ::eraftpb::Snapshot;
  }
  // @@protoc_insertion_point(field_mutable:eraftpb.Message.snapshot)
  return snapshot_;
}
inline ::eraftpb::Snapshot* Message::release_snapshot() {
  // @@protoc_insertion_point(field_release:eraftpb.Message.snapshot)
  clear_has_snapshot();
  ::eraftpb::Snapshot* temp = snapshot_;
  snapshot_ = NULL;
  return temp;
}
inline void Message::set_allocated_snapshot(::eraftpb::Snapshot* snapshot) {
  delete snapshot_;
  snapshot_ = snapshot;
  if (snapshot) {
    set_has_snapshot();
  } else {
    clear_has_snapshot();
  }
  // @@protoc_insertion_point(field_set_allocated:eraftpb.Message.snapshot)
}

// optional bool reject = 10;
inline bool Message::has_reject() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Message::set_has_reject() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Message::clear_has_reject() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Message::clear_reject() {
  reject_ = false;
  clear_has_reject();
}
inline bool Message::reject() const {
  // @@protoc_insertion_point(field_get:eraftpb.Message.reject)
  return reject_;
}
inline void Message::set_reject(bool value) {
  set_has_reject();
  reject_ = value;
  // @@protoc_insertion_point(field_set:eraftpb.Message.reject)
}

// optional uint64 reject_hint = 11;
inline bool Message::has_reject_hint() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Message::set_has_reject_hint() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Message::clear_has_reject_hint() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Message::clear_reject_hint() {
  reject_hint_ = GOOGLE_ULONGLONG(0);
  clear_has_reject_hint();
}
inline ::google::protobuf::uint64 Message::reject_hint() const {
  // @@protoc_insertion_point(field_get:eraftpb.Message.reject_hint)
  return reject_hint_;
}
inline void Message::set_reject_hint(::google::protobuf::uint64 value) {
  set_has_reject_hint();
  reject_hint_ = value;
  // @@protoc_insertion_point(field_set:eraftpb.Message.reject_hint)
}

// optional bytes context = 12;
inline bool Message::has_context() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Message::set_has_context() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Message::clear_has_context() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Message::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_context();
}
inline const ::std::string& Message::context() const {
  // @@protoc_insertion_point(field_get:eraftpb.Message.context)
  return context_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_context(const ::std::string& value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eraftpb.Message.context)
}
inline void Message::set_context(const char* value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eraftpb.Message.context)
}
inline void Message::set_context(const void* value, size_t size) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eraftpb.Message.context)
}
inline ::std::string* Message::mutable_context() {
  set_has_context();
  // @@protoc_insertion_point(field_mutable:eraftpb.Message.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_context() {
  // @@protoc_insertion_point(field_release:eraftpb.Message.context)
  clear_has_context();
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    set_has_context();
  } else {
    clear_has_context();
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:eraftpb.Message.context)
}

inline const Message* Message::internal_default_instance() {
  return &Message_default_instance_.get();
}
// -------------------------------------------------------------------

// HardState

// optional uint64 term = 1;
inline bool HardState::has_term() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HardState::set_has_term() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HardState::clear_has_term() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HardState::clear_term() {
  term_ = GOOGLE_ULONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::uint64 HardState::term() const {
  // @@protoc_insertion_point(field_get:eraftpb.HardState.term)
  return term_;
}
inline void HardState::set_term(::google::protobuf::uint64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:eraftpb.HardState.term)
}

// optional uint64 vote = 2;
inline bool HardState::has_vote() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HardState::set_has_vote() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HardState::clear_has_vote() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HardState::clear_vote() {
  vote_ = GOOGLE_ULONGLONG(0);
  clear_has_vote();
}
inline ::google::protobuf::uint64 HardState::vote() const {
  // @@protoc_insertion_point(field_get:eraftpb.HardState.vote)
  return vote_;
}
inline void HardState::set_vote(::google::protobuf::uint64 value) {
  set_has_vote();
  vote_ = value;
  // @@protoc_insertion_point(field_set:eraftpb.HardState.vote)
}

// optional uint64 commit = 3;
inline bool HardState::has_commit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HardState::set_has_commit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HardState::clear_has_commit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HardState::clear_commit() {
  commit_ = GOOGLE_ULONGLONG(0);
  clear_has_commit();
}
inline ::google::protobuf::uint64 HardState::commit() const {
  // @@protoc_insertion_point(field_get:eraftpb.HardState.commit)
  return commit_;
}
inline void HardState::set_commit(::google::protobuf::uint64 value) {
  set_has_commit();
  commit_ = value;
  // @@protoc_insertion_point(field_set:eraftpb.HardState.commit)
}

inline const HardState* HardState::internal_default_instance() {
  return &HardState_default_instance_.get();
}
// -------------------------------------------------------------------

// ConfState

// repeated uint64 nodes = 1;
inline int ConfState::nodes_size() const {
  return nodes_.size();
}
inline void ConfState::clear_nodes() {
  nodes_.Clear();
}
inline ::google::protobuf::uint64 ConfState::nodes(int index) const {
  // @@protoc_insertion_point(field_get:eraftpb.ConfState.nodes)
  return nodes_.Get(index);
}
inline void ConfState::set_nodes(int index, ::google::protobuf::uint64 value) {
  nodes_.Set(index, value);
  // @@protoc_insertion_point(field_set:eraftpb.ConfState.nodes)
}
inline void ConfState::add_nodes(::google::protobuf::uint64 value) {
  nodes_.Add(value);
  // @@protoc_insertion_point(field_add:eraftpb.ConfState.nodes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ConfState::nodes() const {
  // @@protoc_insertion_point(field_list:eraftpb.ConfState.nodes)
  return nodes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ConfState::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:eraftpb.ConfState.nodes)
  return &nodes_;
}

inline const ConfState* ConfState::internal_default_instance() {
  return &ConfState_default_instance_.get();
}
// -------------------------------------------------------------------

// ConfChange

// optional uint64 id = 1;
inline bool ConfChange::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfChange::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfChange::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfChange::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 ConfChange::id() const {
  // @@protoc_insertion_point(field_get:eraftpb.ConfChange.id)
  return id_;
}
inline void ConfChange::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:eraftpb.ConfChange.id)
}

// optional .eraftpb.ConfChangeType change_type = 2;
inline bool ConfChange::has_change_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConfChange::set_has_change_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConfChange::clear_has_change_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConfChange::clear_change_type() {
  change_type_ = 0;
  clear_has_change_type();
}
inline ::eraftpb::ConfChangeType ConfChange::change_type() const {
  // @@protoc_insertion_point(field_get:eraftpb.ConfChange.change_type)
  return static_cast< ::eraftpb::ConfChangeType >(change_type_);
}
inline void ConfChange::set_change_type(::eraftpb::ConfChangeType value) {
  assert(::eraftpb::ConfChangeType_IsValid(value));
  set_has_change_type();
  change_type_ = value;
  // @@protoc_insertion_point(field_set:eraftpb.ConfChange.change_type)
}

// optional uint64 node_id = 3;
inline bool ConfChange::has_node_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConfChange::set_has_node_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConfChange::clear_has_node_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConfChange::clear_node_id() {
  node_id_ = GOOGLE_ULONGLONG(0);
  clear_has_node_id();
}
inline ::google::protobuf::uint64 ConfChange::node_id() const {
  // @@protoc_insertion_point(field_get:eraftpb.ConfChange.node_id)
  return node_id_;
}
inline void ConfChange::set_node_id(::google::protobuf::uint64 value) {
  set_has_node_id();
  node_id_ = value;
  // @@protoc_insertion_point(field_set:eraftpb.ConfChange.node_id)
}

// optional bytes context = 4;
inline bool ConfChange::has_context() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConfChange::set_has_context() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConfChange::clear_has_context() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConfChange::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_context();
}
inline const ::std::string& ConfChange::context() const {
  // @@protoc_insertion_point(field_get:eraftpb.ConfChange.context)
  return context_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfChange::set_context(const ::std::string& value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eraftpb.ConfChange.context)
}
inline void ConfChange::set_context(const char* value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eraftpb.ConfChange.context)
}
inline void ConfChange::set_context(const void* value, size_t size) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eraftpb.ConfChange.context)
}
inline ::std::string* ConfChange::mutable_context() {
  set_has_context();
  // @@protoc_insertion_point(field_mutable:eraftpb.ConfChange.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfChange::release_context() {
  // @@protoc_insertion_point(field_release:eraftpb.ConfChange.context)
  clear_has_context();
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfChange::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    set_has_context();
  } else {
    clear_has_context();
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:eraftpb.ConfChange.context)
}

inline const ConfChange* ConfChange::internal_default_instance() {
  return &ConfChange_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace eraftpb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::eraftpb::EntryType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eraftpb::EntryType>() {
  return ::eraftpb::EntryType_descriptor();
}
template <> struct is_proto_enum< ::eraftpb::MessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eraftpb::MessageType>() {
  return ::eraftpb::MessageType_descriptor();
}
template <> struct is_proto_enum< ::eraftpb::ConfChangeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eraftpb::ConfChangeType>() {
  return ::eraftpb::ConfChangeType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_eraftpb_2eproto__INCLUDED
