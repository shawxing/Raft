// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msgpb.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "msgpb.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace msgpb {

namespace {

const ::google::protobuf::Descriptor* Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Message_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MessageType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_msgpb_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_msgpb_2eproto() {
  protobuf_AddDesc_msgpb_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "msgpb.proto");
  GOOGLE_CHECK(file != NULL);
  Message_descriptor_ = file->message_type(0);
  static const int Message_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, msg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, cmd_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, cmd_resp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, raft_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, kv_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, kv_resp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, cop_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, cop_resp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, pd_req_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, pd_resp_),
  };
  Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Message_descriptor_,
      Message::internal_default_instance(),
      Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _has_bits_),
      -1,
      -1,
      sizeof(Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _internal_metadata_));
  MessageType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_msgpb_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Message_descriptor_, Message::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_msgpb_2eproto() {
  Message_default_instance_.Shutdown();
  delete Message_reflection_;
}

void protobuf_InitDefaults_msgpb_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::raft_cmdpb::protobuf_InitDefaults_raft_5fcmdpb_2eproto();
  ::raft_serverpb::protobuf_InitDefaults_raft_5fserverpb_2eproto();
  ::kvrpcpb::protobuf_InitDefaults_kvrpcpb_2eproto();
  ::coprocessor::protobuf_InitDefaults_coprocessor_2eproto();
  ::pdpb::protobuf_InitDefaults_pdpb_2eproto();
  Message_default_instance_.DefaultConstruct();
  Message_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_msgpb_2eproto_once_);
void protobuf_InitDefaults_msgpb_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_msgpb_2eproto_once_,
                 &protobuf_InitDefaults_msgpb_2eproto_impl);
}
void protobuf_AddDesc_msgpb_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_msgpb_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013msgpb.proto\022\005msgpb\032\020raft_cmdpb.proto\032\023"
    "raft_serverpb.proto\032\rkvrpcpb.proto\032\021copr"
    "ocessor.proto\032\npdpb.proto\"\213\003\n\007Message\022$\n"
    "\010msg_type\030\001 \001(\0162\022.msgpb.MessageType\022+\n\007c"
    "md_req\030\002 \001(\0132\032.raft_cmdpb.RaftCmdRequest"
    "\022-\n\010cmd_resp\030\003 \001(\0132\033.raft_cmdpb.RaftCmdR"
    "esponse\022(\n\004raft\030\004 \001(\0132\032.raft_serverpb.Ra"
    "ftMessage\022 \n\006kv_req\030\005 \001(\0132\020.kvrpcpb.Requ"
    "est\022\"\n\007kv_resp\030\006 \001(\0132\021.kvrpcpb.Response\022"
    "%\n\007cop_req\030\007 \001(\0132\024.coprocessor.Request\022\'"
    "\n\010cop_resp\030\010 \001(\0132\025.coprocessor.Response\022"
    "\035\n\006pd_req\030\t \001(\0132\r.pdpb.Request\022\037\n\007pd_res"
    "p\030\n \001(\0132\016.pdpb.Response*~\n\013MessageType\022\010"
    "\n\004None\020\000\022\007\n\003Cmd\020\001\022\013\n\007CmdResp\020\002\022\010\n\004Raft\020\003"
    "\022\t\n\005KvReq\020\004\022\n\n\006KvResp\020\005\022\n\n\006CopReq\020\006\022\013\n\007C"
    "opResp\020\007\022\t\n\005PdReq\020\010\022\n\n\006PdResp\020\t", 631);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msgpb.proto", &protobuf_RegisterTypes);
  ::raft_cmdpb::protobuf_AddDesc_raft_5fcmdpb_2eproto();
  ::raft_serverpb::protobuf_AddDesc_raft_5fserverpb_2eproto();
  ::kvrpcpb::protobuf_AddDesc_kvrpcpb_2eproto();
  ::coprocessor::protobuf_AddDesc_coprocessor_2eproto();
  ::pdpb::protobuf_AddDesc_pdpb_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_msgpb_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_msgpb_2eproto_once_);
void protobuf_AddDesc_msgpb_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_msgpb_2eproto_once_,
                 &protobuf_AddDesc_msgpb_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_msgpb_2eproto {
  StaticDescriptorInitializer_msgpb_2eproto() {
    protobuf_AddDesc_msgpb_2eproto();
  }
} static_descriptor_initializer_msgpb_2eproto_;
const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageType_descriptor_;
}
bool MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kMsgTypeFieldNumber;
const int Message::kCmdReqFieldNumber;
const int Message::kCmdRespFieldNumber;
const int Message::kRaftFieldNumber;
const int Message::kKvReqFieldNumber;
const int Message::kKvRespFieldNumber;
const int Message::kCopReqFieldNumber;
const int Message::kCopRespFieldNumber;
const int Message::kPdReqFieldNumber;
const int Message::kPdRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_msgpb_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:msgpb.Message)
}

void Message::InitAsDefaultInstance() {
  cmd_req_ = const_cast< ::raft_cmdpb::RaftCmdRequest*>(
      ::raft_cmdpb::RaftCmdRequest::internal_default_instance());
  cmd_resp_ = const_cast< ::raft_cmdpb::RaftCmdResponse*>(
      ::raft_cmdpb::RaftCmdResponse::internal_default_instance());
  raft_ = const_cast< ::raft_serverpb::RaftMessage*>(
      ::raft_serverpb::RaftMessage::internal_default_instance());
  kv_req_ = const_cast< ::kvrpcpb::Request*>(
      ::kvrpcpb::Request::internal_default_instance());
  kv_resp_ = const_cast< ::kvrpcpb::Response*>(
      ::kvrpcpb::Response::internal_default_instance());
  cop_req_ = const_cast< ::coprocessor::Request*>(
      ::coprocessor::Request::internal_default_instance());
  cop_resp_ = const_cast< ::coprocessor::Response*>(
      ::coprocessor::Response::internal_default_instance());
  pd_req_ = const_cast< ::pdpb::Request*>(
      ::pdpb::Request::internal_default_instance());
  pd_resp_ = const_cast< ::pdpb::Response*>(
      ::pdpb::Response::internal_default_instance());
}

Message::Message(const Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:msgpb.Message)
}

void Message::SharedCtor() {
  _cached_size_ = 0;
  cmd_req_ = NULL;
  cmd_resp_ = NULL;
  raft_ = NULL;
  kv_req_ = NULL;
  kv_resp_ = NULL;
  cop_req_ = NULL;
  cop_resp_ = NULL;
  pd_req_ = NULL;
  pd_resp_ = NULL;
  msg_type_ = 0;
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:msgpb.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  if (this != &Message_default_instance_.get()) {
    delete cmd_req_;
    delete cmd_resp_;
    delete raft_;
    delete kv_req_;
    delete kv_resp_;
    delete cop_req_;
    delete cop_resp_;
    delete pd_req_;
    delete pd_resp_;
  }
}

void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_descriptor_;
}

const Message& Message::default_instance() {
  protobuf_InitDefaults_msgpb_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Message> Message_default_instance_;

Message* Message::New(::google::protobuf::Arena* arena) const {
  Message* n = new Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:msgpb.Message)
  if (_has_bits_[0 / 32] & 255u) {
    msg_type_ = 0;
    if (has_cmd_req()) {
      if (cmd_req_ != NULL) cmd_req_->::raft_cmdpb::RaftCmdRequest::Clear();
    }
    if (has_cmd_resp()) {
      if (cmd_resp_ != NULL) cmd_resp_->::raft_cmdpb::RaftCmdResponse::Clear();
    }
    if (has_raft()) {
      if (raft_ != NULL) raft_->::raft_serverpb::RaftMessage::Clear();
    }
    if (has_kv_req()) {
      if (kv_req_ != NULL) kv_req_->::kvrpcpb::Request::Clear();
    }
    if (has_kv_resp()) {
      if (kv_resp_ != NULL) kv_resp_->::kvrpcpb::Response::Clear();
    }
    if (has_cop_req()) {
      if (cop_req_ != NULL) cop_req_->::coprocessor::Request::Clear();
    }
    if (has_cop_resp()) {
      if (cop_resp_ != NULL) cop_resp_->::coprocessor::Response::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 768u) {
    if (has_pd_req()) {
      if (pd_req_ != NULL) pd_req_->::pdpb::Request::Clear();
    }
    if (has_pd_resp()) {
      if (pd_resp_ != NULL) pd_resp_->::pdpb::Response::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msgpb.Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .msgpb.MessageType msg_type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::msgpb::MessageType_IsValid(value)) {
            set_msg_type(static_cast< ::msgpb::MessageType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_cmd_req;
        break;
      }

      // optional .raft_cmdpb.RaftCmdRequest cmd_req = 2;
      case 2: {
        if (tag == 18) {
         parse_cmd_req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cmd_req()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_cmd_resp;
        break;
      }

      // optional .raft_cmdpb.RaftCmdResponse cmd_resp = 3;
      case 3: {
        if (tag == 26) {
         parse_cmd_resp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cmd_resp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_raft;
        break;
      }

      // optional .raft_serverpb.RaftMessage raft = 4;
      case 4: {
        if (tag == 34) {
         parse_raft:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_raft()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_kv_req;
        break;
      }

      // optional .kvrpcpb.Request kv_req = 5;
      case 5: {
        if (tag == 42) {
         parse_kv_req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_kv_req()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_kv_resp;
        break;
      }

      // optional .kvrpcpb.Response kv_resp = 6;
      case 6: {
        if (tag == 50) {
         parse_kv_resp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_kv_resp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_cop_req;
        break;
      }

      // optional .coprocessor.Request cop_req = 7;
      case 7: {
        if (tag == 58) {
         parse_cop_req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cop_req()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_cop_resp;
        break;
      }

      // optional .coprocessor.Response cop_resp = 8;
      case 8: {
        if (tag == 66) {
         parse_cop_resp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cop_resp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_pd_req;
        break;
      }

      // optional .pdpb.Request pd_req = 9;
      case 9: {
        if (tag == 74) {
         parse_pd_req:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pd_req()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_pd_resp;
        break;
      }

      // optional .pdpb.Response pd_resp = 10;
      case 10: {
        if (tag == 82) {
         parse_pd_resp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pd_resp()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msgpb.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msgpb.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msgpb.Message)
  // optional .msgpb.MessageType msg_type = 1;
  if (has_msg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msg_type(), output);
  }

  // optional .raft_cmdpb.RaftCmdRequest cmd_req = 2;
  if (has_cmd_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->cmd_req_, output);
  }

  // optional .raft_cmdpb.RaftCmdResponse cmd_resp = 3;
  if (has_cmd_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->cmd_resp_, output);
  }

  // optional .raft_serverpb.RaftMessage raft = 4;
  if (has_raft()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->raft_, output);
  }

  // optional .kvrpcpb.Request kv_req = 5;
  if (has_kv_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->kv_req_, output);
  }

  // optional .kvrpcpb.Response kv_resp = 6;
  if (has_kv_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->kv_resp_, output);
  }

  // optional .coprocessor.Request cop_req = 7;
  if (has_cop_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->cop_req_, output);
  }

  // optional .coprocessor.Response cop_resp = 8;
  if (has_cop_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->cop_resp_, output);
  }

  // optional .pdpb.Request pd_req = 9;
  if (has_pd_req()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->pd_req_, output);
  }

  // optional .pdpb.Response pd_resp = 10;
  if (has_pd_resp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->pd_resp_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msgpb.Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:msgpb.Message)
  // optional .msgpb.MessageType msg_type = 1;
  if (has_msg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msg_type(), target);
  }

  // optional .raft_cmdpb.RaftCmdRequest cmd_req = 2;
  if (has_cmd_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->cmd_req_, false, target);
  }

  // optional .raft_cmdpb.RaftCmdResponse cmd_resp = 3;
  if (has_cmd_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->cmd_resp_, false, target);
  }

  // optional .raft_serverpb.RaftMessage raft = 4;
  if (has_raft()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->raft_, false, target);
  }

  // optional .kvrpcpb.Request kv_req = 5;
  if (has_kv_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->kv_req_, false, target);
  }

  // optional .kvrpcpb.Response kv_resp = 6;
  if (has_kv_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->kv_resp_, false, target);
  }

  // optional .coprocessor.Request cop_req = 7;
  if (has_cop_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->cop_req_, false, target);
  }

  // optional .coprocessor.Response cop_resp = 8;
  if (has_cop_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->cop_resp_, false, target);
  }

  // optional .pdpb.Request pd_req = 9;
  if (has_pd_req()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->pd_req_, false, target);
  }

  // optional .pdpb.Response pd_resp = 10;
  if (has_pd_resp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->pd_resp_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msgpb.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msgpb.Message)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional .msgpb.MessageType msg_type = 1;
    if (has_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_type());
    }

    // optional .raft_cmdpb.RaftCmdRequest cmd_req = 2;
    if (has_cmd_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->cmd_req_);
    }

    // optional .raft_cmdpb.RaftCmdResponse cmd_resp = 3;
    if (has_cmd_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->cmd_resp_);
    }

    // optional .raft_serverpb.RaftMessage raft = 4;
    if (has_raft()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->raft_);
    }

    // optional .kvrpcpb.Request kv_req = 5;
    if (has_kv_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->kv_req_);
    }

    // optional .kvrpcpb.Response kv_resp = 6;
    if (has_kv_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->kv_resp_);
    }

    // optional .coprocessor.Request cop_req = 7;
    if (has_cop_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->cop_req_);
    }

    // optional .coprocessor.Response cop_resp = 8;
    if (has_cop_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->cop_resp_);
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional .pdpb.Request pd_req = 9;
    if (has_pd_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pd_req_);
    }

    // optional .pdpb.Response pd_resp = 10;
    if (has_pd_resp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pd_resp_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msgpb.Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msgpb.Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msgpb.Message)
    UnsafeMergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msgpb.Message)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Message::UnsafeMergeFrom(const Message& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msg_type()) {
      set_msg_type(from.msg_type());
    }
    if (from.has_cmd_req()) {
      mutable_cmd_req()->::raft_cmdpb::RaftCmdRequest::MergeFrom(from.cmd_req());
    }
    if (from.has_cmd_resp()) {
      mutable_cmd_resp()->::raft_cmdpb::RaftCmdResponse::MergeFrom(from.cmd_resp());
    }
    if (from.has_raft()) {
      mutable_raft()->::raft_serverpb::RaftMessage::MergeFrom(from.raft());
    }
    if (from.has_kv_req()) {
      mutable_kv_req()->::kvrpcpb::Request::MergeFrom(from.kv_req());
    }
    if (from.has_kv_resp()) {
      mutable_kv_resp()->::kvrpcpb::Response::MergeFrom(from.kv_resp());
    }
    if (from.has_cop_req()) {
      mutable_cop_req()->::coprocessor::Request::MergeFrom(from.cop_req());
    }
    if (from.has_cop_resp()) {
      mutable_cop_resp()->::coprocessor::Response::MergeFrom(from.cop_resp());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_pd_req()) {
      mutable_pd_req()->::pdpb::Request::MergeFrom(from.pd_req());
    }
    if (from.has_pd_resp()) {
      mutable_pd_resp()->::pdpb::Response::MergeFrom(from.pd_resp());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msgpb.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msgpb.Message)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Message::IsInitialized() const {

  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  std::swap(msg_type_, other->msg_type_);
  std::swap(cmd_req_, other->cmd_req_);
  std::swap(cmd_resp_, other->cmd_resp_);
  std::swap(raft_, other->raft_);
  std::swap(kv_req_, other->kv_req_);
  std::swap(kv_resp_, other->kv_resp_);
  std::swap(cop_req_, other->cop_req_);
  std::swap(cop_resp_, other->cop_resp_);
  std::swap(pd_req_, other->pd_req_);
  std::swap(pd_resp_, other->pd_resp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Message_descriptor_;
  metadata.reflection = Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message

// optional .msgpb.MessageType msg_type = 1;
bool Message::has_msg_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Message::set_has_msg_type() {
  _has_bits_[0] |= 0x00000001u;
}
void Message::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void Message::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
::msgpb::MessageType Message::msg_type() const {
  // @@protoc_insertion_point(field_get:msgpb.Message.msg_type)
  return static_cast< ::msgpb::MessageType >(msg_type_);
}
void Message::set_msg_type(::msgpb::MessageType value) {
  assert(::msgpb::MessageType_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:msgpb.Message.msg_type)
}

// optional .raft_cmdpb.RaftCmdRequest cmd_req = 2;
bool Message::has_cmd_req() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Message::set_has_cmd_req() {
  _has_bits_[0] |= 0x00000002u;
}
void Message::clear_has_cmd_req() {
  _has_bits_[0] &= ~0x00000002u;
}
void Message::clear_cmd_req() {
  if (cmd_req_ != NULL) cmd_req_->::raft_cmdpb::RaftCmdRequest::Clear();
  clear_has_cmd_req();
}
const ::raft_cmdpb::RaftCmdRequest& Message::cmd_req() const {
  // @@protoc_insertion_point(field_get:msgpb.Message.cmd_req)
  return cmd_req_ != NULL ? *cmd_req_
                         : *::raft_cmdpb::RaftCmdRequest::internal_default_instance();
}
::raft_cmdpb::RaftCmdRequest* Message::mutable_cmd_req() {
  set_has_cmd_req();
  if (cmd_req_ == NULL) {
    cmd_req_ = new ::raft_cmdpb::RaftCmdRequest;
  }
  // @@protoc_insertion_point(field_mutable:msgpb.Message.cmd_req)
  return cmd_req_;
}
::raft_cmdpb::RaftCmdRequest* Message::release_cmd_req() {
  // @@protoc_insertion_point(field_release:msgpb.Message.cmd_req)
  clear_has_cmd_req();
  ::raft_cmdpb::RaftCmdRequest* temp = cmd_req_;
  cmd_req_ = NULL;
  return temp;
}
void Message::set_allocated_cmd_req(::raft_cmdpb::RaftCmdRequest* cmd_req) {
  delete cmd_req_;
  cmd_req_ = cmd_req;
  if (cmd_req) {
    set_has_cmd_req();
  } else {
    clear_has_cmd_req();
  }
  // @@protoc_insertion_point(field_set_allocated:msgpb.Message.cmd_req)
}

// optional .raft_cmdpb.RaftCmdResponse cmd_resp = 3;
bool Message::has_cmd_resp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Message::set_has_cmd_resp() {
  _has_bits_[0] |= 0x00000004u;
}
void Message::clear_has_cmd_resp() {
  _has_bits_[0] &= ~0x00000004u;
}
void Message::clear_cmd_resp() {
  if (cmd_resp_ != NULL) cmd_resp_->::raft_cmdpb::RaftCmdResponse::Clear();
  clear_has_cmd_resp();
}
const ::raft_cmdpb::RaftCmdResponse& Message::cmd_resp() const {
  // @@protoc_insertion_point(field_get:msgpb.Message.cmd_resp)
  return cmd_resp_ != NULL ? *cmd_resp_
                         : *::raft_cmdpb::RaftCmdResponse::internal_default_instance();
}
::raft_cmdpb::RaftCmdResponse* Message::mutable_cmd_resp() {
  set_has_cmd_resp();
  if (cmd_resp_ == NULL) {
    cmd_resp_ = new ::raft_cmdpb::RaftCmdResponse;
  }
  // @@protoc_insertion_point(field_mutable:msgpb.Message.cmd_resp)
  return cmd_resp_;
}
::raft_cmdpb::RaftCmdResponse* Message::release_cmd_resp() {
  // @@protoc_insertion_point(field_release:msgpb.Message.cmd_resp)
  clear_has_cmd_resp();
  ::raft_cmdpb::RaftCmdResponse* temp = cmd_resp_;
  cmd_resp_ = NULL;
  return temp;
}
void Message::set_allocated_cmd_resp(::raft_cmdpb::RaftCmdResponse* cmd_resp) {
  delete cmd_resp_;
  cmd_resp_ = cmd_resp;
  if (cmd_resp) {
    set_has_cmd_resp();
  } else {
    clear_has_cmd_resp();
  }
  // @@protoc_insertion_point(field_set_allocated:msgpb.Message.cmd_resp)
}

// optional .raft_serverpb.RaftMessage raft = 4;
bool Message::has_raft() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Message::set_has_raft() {
  _has_bits_[0] |= 0x00000008u;
}
void Message::clear_has_raft() {
  _has_bits_[0] &= ~0x00000008u;
}
void Message::clear_raft() {
  if (raft_ != NULL) raft_->::raft_serverpb::RaftMessage::Clear();
  clear_has_raft();
}
const ::raft_serverpb::RaftMessage& Message::raft() const {
  // @@protoc_insertion_point(field_get:msgpb.Message.raft)
  return raft_ != NULL ? *raft_
                         : *::raft_serverpb::RaftMessage::internal_default_instance();
}
::raft_serverpb::RaftMessage* Message::mutable_raft() {
  set_has_raft();
  if (raft_ == NULL) {
    raft_ = new ::raft_serverpb::RaftMessage;
  }
  // @@protoc_insertion_point(field_mutable:msgpb.Message.raft)
  return raft_;
}
::raft_serverpb::RaftMessage* Message::release_raft() {
  // @@protoc_insertion_point(field_release:msgpb.Message.raft)
  clear_has_raft();
  ::raft_serverpb::RaftMessage* temp = raft_;
  raft_ = NULL;
  return temp;
}
void Message::set_allocated_raft(::raft_serverpb::RaftMessage* raft) {
  delete raft_;
  raft_ = raft;
  if (raft) {
    set_has_raft();
  } else {
    clear_has_raft();
  }
  // @@protoc_insertion_point(field_set_allocated:msgpb.Message.raft)
}

// optional .kvrpcpb.Request kv_req = 5;
bool Message::has_kv_req() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Message::set_has_kv_req() {
  _has_bits_[0] |= 0x00000010u;
}
void Message::clear_has_kv_req() {
  _has_bits_[0] &= ~0x00000010u;
}
void Message::clear_kv_req() {
  if (kv_req_ != NULL) kv_req_->::kvrpcpb::Request::Clear();
  clear_has_kv_req();
}
const ::kvrpcpb::Request& Message::kv_req() const {
  // @@protoc_insertion_point(field_get:msgpb.Message.kv_req)
  return kv_req_ != NULL ? *kv_req_
                         : *::kvrpcpb::Request::internal_default_instance();
}
::kvrpcpb::Request* Message::mutable_kv_req() {
  set_has_kv_req();
  if (kv_req_ == NULL) {
    kv_req_ = new ::kvrpcpb::Request;
  }
  // @@protoc_insertion_point(field_mutable:msgpb.Message.kv_req)
  return kv_req_;
}
::kvrpcpb::Request* Message::release_kv_req() {
  // @@protoc_insertion_point(field_release:msgpb.Message.kv_req)
  clear_has_kv_req();
  ::kvrpcpb::Request* temp = kv_req_;
  kv_req_ = NULL;
  return temp;
}
void Message::set_allocated_kv_req(::kvrpcpb::Request* kv_req) {
  delete kv_req_;
  kv_req_ = kv_req;
  if (kv_req) {
    set_has_kv_req();
  } else {
    clear_has_kv_req();
  }
  // @@protoc_insertion_point(field_set_allocated:msgpb.Message.kv_req)
}

// optional .kvrpcpb.Response kv_resp = 6;
bool Message::has_kv_resp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Message::set_has_kv_resp() {
  _has_bits_[0] |= 0x00000020u;
}
void Message::clear_has_kv_resp() {
  _has_bits_[0] &= ~0x00000020u;
}
void Message::clear_kv_resp() {
  if (kv_resp_ != NULL) kv_resp_->::kvrpcpb::Response::Clear();
  clear_has_kv_resp();
}
const ::kvrpcpb::Response& Message::kv_resp() const {
  // @@protoc_insertion_point(field_get:msgpb.Message.kv_resp)
  return kv_resp_ != NULL ? *kv_resp_
                         : *::kvrpcpb::Response::internal_default_instance();
}
::kvrpcpb::Response* Message::mutable_kv_resp() {
  set_has_kv_resp();
  if (kv_resp_ == NULL) {
    kv_resp_ = new ::kvrpcpb::Response;
  }
  // @@protoc_insertion_point(field_mutable:msgpb.Message.kv_resp)
  return kv_resp_;
}
::kvrpcpb::Response* Message::release_kv_resp() {
  // @@protoc_insertion_point(field_release:msgpb.Message.kv_resp)
  clear_has_kv_resp();
  ::kvrpcpb::Response* temp = kv_resp_;
  kv_resp_ = NULL;
  return temp;
}
void Message::set_allocated_kv_resp(::kvrpcpb::Response* kv_resp) {
  delete kv_resp_;
  kv_resp_ = kv_resp;
  if (kv_resp) {
    set_has_kv_resp();
  } else {
    clear_has_kv_resp();
  }
  // @@protoc_insertion_point(field_set_allocated:msgpb.Message.kv_resp)
}

// optional .coprocessor.Request cop_req = 7;
bool Message::has_cop_req() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Message::set_has_cop_req() {
  _has_bits_[0] |= 0x00000040u;
}
void Message::clear_has_cop_req() {
  _has_bits_[0] &= ~0x00000040u;
}
void Message::clear_cop_req() {
  if (cop_req_ != NULL) cop_req_->::coprocessor::Request::Clear();
  clear_has_cop_req();
}
const ::coprocessor::Request& Message::cop_req() const {
  // @@protoc_insertion_point(field_get:msgpb.Message.cop_req)
  return cop_req_ != NULL ? *cop_req_
                         : *::coprocessor::Request::internal_default_instance();
}
::coprocessor::Request* Message::mutable_cop_req() {
  set_has_cop_req();
  if (cop_req_ == NULL) {
    cop_req_ = new ::coprocessor::Request;
  }
  // @@protoc_insertion_point(field_mutable:msgpb.Message.cop_req)
  return cop_req_;
}
::coprocessor::Request* Message::release_cop_req() {
  // @@protoc_insertion_point(field_release:msgpb.Message.cop_req)
  clear_has_cop_req();
  ::coprocessor::Request* temp = cop_req_;
  cop_req_ = NULL;
  return temp;
}
void Message::set_allocated_cop_req(::coprocessor::Request* cop_req) {
  delete cop_req_;
  cop_req_ = cop_req;
  if (cop_req) {
    set_has_cop_req();
  } else {
    clear_has_cop_req();
  }
  // @@protoc_insertion_point(field_set_allocated:msgpb.Message.cop_req)
}

// optional .coprocessor.Response cop_resp = 8;
bool Message::has_cop_resp() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Message::set_has_cop_resp() {
  _has_bits_[0] |= 0x00000080u;
}
void Message::clear_has_cop_resp() {
  _has_bits_[0] &= ~0x00000080u;
}
void Message::clear_cop_resp() {
  if (cop_resp_ != NULL) cop_resp_->::coprocessor::Response::Clear();
  clear_has_cop_resp();
}
const ::coprocessor::Response& Message::cop_resp() const {
  // @@protoc_insertion_point(field_get:msgpb.Message.cop_resp)
  return cop_resp_ != NULL ? *cop_resp_
                         : *::coprocessor::Response::internal_default_instance();
}
::coprocessor::Response* Message::mutable_cop_resp() {
  set_has_cop_resp();
  if (cop_resp_ == NULL) {
    cop_resp_ = new ::coprocessor::Response;
  }
  // @@protoc_insertion_point(field_mutable:msgpb.Message.cop_resp)
  return cop_resp_;
}
::coprocessor::Response* Message::release_cop_resp() {
  // @@protoc_insertion_point(field_release:msgpb.Message.cop_resp)
  clear_has_cop_resp();
  ::coprocessor::Response* temp = cop_resp_;
  cop_resp_ = NULL;
  return temp;
}
void Message::set_allocated_cop_resp(::coprocessor::Response* cop_resp) {
  delete cop_resp_;
  cop_resp_ = cop_resp;
  if (cop_resp) {
    set_has_cop_resp();
  } else {
    clear_has_cop_resp();
  }
  // @@protoc_insertion_point(field_set_allocated:msgpb.Message.cop_resp)
}

// optional .pdpb.Request pd_req = 9;
bool Message::has_pd_req() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Message::set_has_pd_req() {
  _has_bits_[0] |= 0x00000100u;
}
void Message::clear_has_pd_req() {
  _has_bits_[0] &= ~0x00000100u;
}
void Message::clear_pd_req() {
  if (pd_req_ != NULL) pd_req_->::pdpb::Request::Clear();
  clear_has_pd_req();
}
const ::pdpb::Request& Message::pd_req() const {
  // @@protoc_insertion_point(field_get:msgpb.Message.pd_req)
  return pd_req_ != NULL ? *pd_req_
                         : *::pdpb::Request::internal_default_instance();
}
::pdpb::Request* Message::mutable_pd_req() {
  set_has_pd_req();
  if (pd_req_ == NULL) {
    pd_req_ = new ::pdpb::Request;
  }
  // @@protoc_insertion_point(field_mutable:msgpb.Message.pd_req)
  return pd_req_;
}
::pdpb::Request* Message::release_pd_req() {
  // @@protoc_insertion_point(field_release:msgpb.Message.pd_req)
  clear_has_pd_req();
  ::pdpb::Request* temp = pd_req_;
  pd_req_ = NULL;
  return temp;
}
void Message::set_allocated_pd_req(::pdpb::Request* pd_req) {
  delete pd_req_;
  pd_req_ = pd_req;
  if (pd_req) {
    set_has_pd_req();
  } else {
    clear_has_pd_req();
  }
  // @@protoc_insertion_point(field_set_allocated:msgpb.Message.pd_req)
}

// optional .pdpb.Response pd_resp = 10;
bool Message::has_pd_resp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Message::set_has_pd_resp() {
  _has_bits_[0] |= 0x00000200u;
}
void Message::clear_has_pd_resp() {
  _has_bits_[0] &= ~0x00000200u;
}
void Message::clear_pd_resp() {
  if (pd_resp_ != NULL) pd_resp_->::pdpb::Response::Clear();
  clear_has_pd_resp();
}
const ::pdpb::Response& Message::pd_resp() const {
  // @@protoc_insertion_point(field_get:msgpb.Message.pd_resp)
  return pd_resp_ != NULL ? *pd_resp_
                         : *::pdpb::Response::internal_default_instance();
}
::pdpb::Response* Message::mutable_pd_resp() {
  set_has_pd_resp();
  if (pd_resp_ == NULL) {
    pd_resp_ = new ::pdpb::Response;
  }
  // @@protoc_insertion_point(field_mutable:msgpb.Message.pd_resp)
  return pd_resp_;
}
::pdpb::Response* Message::release_pd_resp() {
  // @@protoc_insertion_point(field_release:msgpb.Message.pd_resp)
  clear_has_pd_resp();
  ::pdpb::Response* temp = pd_resp_;
  pd_resp_ = NULL;
  return temp;
}
void Message::set_allocated_pd_resp(::pdpb::Response* pd_resp) {
  delete pd_resp_;
  pd_resp_ = pd_resp;
  if (pd_resp) {
    set_has_pd_resp();
  } else {
    clear_has_pd_resp();
  }
  // @@protoc_insertion_point(field_set_allocated:msgpb.Message.pd_resp)
}

inline const Message* Message::internal_default_instance() {
  return &Message_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msgpb

// @@protoc_insertion_point(global_scope)
