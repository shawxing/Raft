// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metapb.proto

#ifndef PROTOBUF_metapb_2eproto__INCLUDED
#define PROTOBUF_metapb_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace metapb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_metapb_2eproto();
void protobuf_InitDefaults_metapb_2eproto();
void protobuf_AssignDesc_metapb_2eproto();
void protobuf_ShutdownFile_metapb_2eproto();

class Cluster;
class Peer;
class Region;
class RegionEpoch;
class Store;
class StoreLabel;

enum StoreState {
  Up = 0,
  Offline = 1,
  Tombstone = 2
};
bool StoreState_IsValid(int value);
const StoreState StoreState_MIN = Up;
const StoreState StoreState_MAX = Tombstone;
const int StoreState_ARRAYSIZE = StoreState_MAX + 1;

const ::google::protobuf::EnumDescriptor* StoreState_descriptor();
inline const ::std::string& StoreState_Name(StoreState value) {
  return ::google::protobuf::internal::NameOfEnum(
    StoreState_descriptor(), value);
}
inline bool StoreState_Parse(
    const ::std::string& name, StoreState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StoreState>(
    StoreState_descriptor(), name, value);
}
// ===================================================================

class Cluster : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metapb.Cluster) */ {
 public:
  Cluster();
  virtual ~Cluster();

  Cluster(const Cluster& from);

  inline Cluster& operator=(const Cluster& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Cluster& default_instance();

  static const Cluster* internal_default_instance();

  void Swap(Cluster* other);

  // implements Message ----------------------------------------------

  inline Cluster* New() const { return New(NULL); }

  Cluster* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Cluster& from);
  void MergeFrom(const Cluster& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Cluster* other);
  void UnsafeMergeFrom(const Cluster& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional uint32 max_peer_count = 2;
  bool has_max_peer_count() const;
  void clear_max_peer_count();
  static const int kMaxPeerCountFieldNumber = 2;
  ::google::protobuf::uint32 max_peer_count() const;
  void set_max_peer_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:metapb.Cluster)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_max_peer_count();
  inline void clear_has_max_peer_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 max_peer_count_;
  friend void  protobuf_InitDefaults_metapb_2eproto_impl();
  friend void  protobuf_AddDesc_metapb_2eproto_impl();
  friend void protobuf_AssignDesc_metapb_2eproto();
  friend void protobuf_ShutdownFile_metapb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Cluster> Cluster_default_instance_;

// -------------------------------------------------------------------

class StoreLabel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metapb.StoreLabel) */ {
 public:
  StoreLabel();
  virtual ~StoreLabel();

  StoreLabel(const StoreLabel& from);

  inline StoreLabel& operator=(const StoreLabel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StoreLabel& default_instance();

  static const StoreLabel* internal_default_instance();

  void Swap(StoreLabel* other);

  // implements Message ----------------------------------------------

  inline StoreLabel* New() const { return New(NULL); }

  StoreLabel* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoreLabel& from);
  void MergeFrom(const StoreLabel& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StoreLabel* other);
  void UnsafeMergeFrom(const StoreLabel& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:metapb.StoreLabel)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend void  protobuf_InitDefaults_metapb_2eproto_impl();
  friend void  protobuf_AddDesc_metapb_2eproto_impl();
  friend void protobuf_AssignDesc_metapb_2eproto();
  friend void protobuf_ShutdownFile_metapb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<StoreLabel> StoreLabel_default_instance_;

// -------------------------------------------------------------------

class Store : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metapb.Store) */ {
 public:
  Store();
  virtual ~Store();

  Store(const Store& from);

  inline Store& operator=(const Store& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Store& default_instance();

  static const Store* internal_default_instance();

  void Swap(Store* other);

  // implements Message ----------------------------------------------

  inline Store* New() const { return New(NULL); }

  Store* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Store& from);
  void MergeFrom(const Store& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Store* other);
  void UnsafeMergeFrom(const Store& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional string address = 2;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 2;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // optional .metapb.StoreState state = 3;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::metapb::StoreState state() const;
  void set_state(::metapb::StoreState value);

  // repeated .metapb.StoreLabel labels = 4;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 4;
  const ::metapb::StoreLabel& labels(int index) const;
  ::metapb::StoreLabel* mutable_labels(int index);
  ::metapb::StoreLabel* add_labels();
  ::google::protobuf::RepeatedPtrField< ::metapb::StoreLabel >*
      mutable_labels();
  const ::google::protobuf::RepeatedPtrField< ::metapb::StoreLabel >&
      labels() const;

  // @@protoc_insertion_point(class_scope:metapb.Store)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_address();
  inline void clear_has_address();
  inline void set_has_state();
  inline void clear_has_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::metapb::StoreLabel > labels_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::uint64 id_;
  int state_;
  friend void  protobuf_InitDefaults_metapb_2eproto_impl();
  friend void  protobuf_AddDesc_metapb_2eproto_impl();
  friend void protobuf_AssignDesc_metapb_2eproto();
  friend void protobuf_ShutdownFile_metapb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Store> Store_default_instance_;

// -------------------------------------------------------------------

class RegionEpoch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metapb.RegionEpoch) */ {
 public:
  RegionEpoch();
  virtual ~RegionEpoch();

  RegionEpoch(const RegionEpoch& from);

  inline RegionEpoch& operator=(const RegionEpoch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegionEpoch& default_instance();

  static const RegionEpoch* internal_default_instance();

  void Swap(RegionEpoch* other);

  // implements Message ----------------------------------------------

  inline RegionEpoch* New() const { return New(NULL); }

  RegionEpoch* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegionEpoch& from);
  void MergeFrom(const RegionEpoch& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RegionEpoch* other);
  void UnsafeMergeFrom(const RegionEpoch& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 conf_ver = 1;
  bool has_conf_ver() const;
  void clear_conf_ver();
  static const int kConfVerFieldNumber = 1;
  ::google::protobuf::uint64 conf_ver() const;
  void set_conf_ver(::google::protobuf::uint64 value);

  // optional uint64 version = 2;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  ::google::protobuf::uint64 version() const;
  void set_version(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:metapb.RegionEpoch)
 private:
  inline void set_has_conf_ver();
  inline void clear_has_conf_ver();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 conf_ver_;
  ::google::protobuf::uint64 version_;
  friend void  protobuf_InitDefaults_metapb_2eproto_impl();
  friend void  protobuf_AddDesc_metapb_2eproto_impl();
  friend void protobuf_AssignDesc_metapb_2eproto();
  friend void protobuf_ShutdownFile_metapb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RegionEpoch> RegionEpoch_default_instance_;

// -------------------------------------------------------------------

class Region : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metapb.Region) */ {
 public:
  Region();
  virtual ~Region();

  Region(const Region& from);

  inline Region& operator=(const Region& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Region& default_instance();

  static const Region* internal_default_instance();

  void Swap(Region* other);

  // implements Message ----------------------------------------------

  inline Region* New() const { return New(NULL); }

  Region* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Region& from);
  void MergeFrom(const Region& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Region* other);
  void UnsafeMergeFrom(const Region& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional bytes start_key = 2;
  bool has_start_key() const;
  void clear_start_key();
  static const int kStartKeyFieldNumber = 2;
  const ::std::string& start_key() const;
  void set_start_key(const ::std::string& value);
  void set_start_key(const char* value);
  void set_start_key(const void* value, size_t size);
  ::std::string* mutable_start_key();
  ::std::string* release_start_key();
  void set_allocated_start_key(::std::string* start_key);

  // optional bytes end_key = 3;
  bool has_end_key() const;
  void clear_end_key();
  static const int kEndKeyFieldNumber = 3;
  const ::std::string& end_key() const;
  void set_end_key(const ::std::string& value);
  void set_end_key(const char* value);
  void set_end_key(const void* value, size_t size);
  ::std::string* mutable_end_key();
  ::std::string* release_end_key();
  void set_allocated_end_key(::std::string* end_key);

  // optional .metapb.RegionEpoch region_epoch = 4;
  bool has_region_epoch() const;
  void clear_region_epoch();
  static const int kRegionEpochFieldNumber = 4;
  const ::metapb::RegionEpoch& region_epoch() const;
  ::metapb::RegionEpoch* mutable_region_epoch();
  ::metapb::RegionEpoch* release_region_epoch();
  void set_allocated_region_epoch(::metapb::RegionEpoch* region_epoch);

  // repeated .metapb.Peer peers = 5;
  int peers_size() const;
  void clear_peers();
  static const int kPeersFieldNumber = 5;
  const ::metapb::Peer& peers(int index) const;
  ::metapb::Peer* mutable_peers(int index);
  ::metapb::Peer* add_peers();
  ::google::protobuf::RepeatedPtrField< ::metapb::Peer >*
      mutable_peers();
  const ::google::protobuf::RepeatedPtrField< ::metapb::Peer >&
      peers() const;

  // @@protoc_insertion_point(class_scope:metapb.Region)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_start_key();
  inline void clear_has_start_key();
  inline void set_has_end_key();
  inline void clear_has_end_key();
  inline void set_has_region_epoch();
  inline void clear_has_region_epoch();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::metapb::Peer > peers_;
  ::google::protobuf::internal::ArenaStringPtr start_key_;
  ::google::protobuf::internal::ArenaStringPtr end_key_;
  ::metapb::RegionEpoch* region_epoch_;
  ::google::protobuf::uint64 id_;
  friend void  protobuf_InitDefaults_metapb_2eproto_impl();
  friend void  protobuf_AddDesc_metapb_2eproto_impl();
  friend void protobuf_AssignDesc_metapb_2eproto();
  friend void protobuf_ShutdownFile_metapb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Region> Region_default_instance_;

// -------------------------------------------------------------------

class Peer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:metapb.Peer) */ {
 public:
  Peer();
  virtual ~Peer();

  Peer(const Peer& from);

  inline Peer& operator=(const Peer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Peer& default_instance();

  static const Peer* internal_default_instance();

  void Swap(Peer* other);

  // implements Message ----------------------------------------------

  inline Peer* New() const { return New(NULL); }

  Peer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Peer& from);
  void MergeFrom(const Peer& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Peer* other);
  void UnsafeMergeFrom(const Peer& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional uint64 store_id = 2;
  bool has_store_id() const;
  void clear_store_id();
  static const int kStoreIdFieldNumber = 2;
  ::google::protobuf::uint64 store_id() const;
  void set_store_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:metapb.Peer)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_store_id();
  inline void clear_has_store_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 store_id_;
  friend void  protobuf_InitDefaults_metapb_2eproto_impl();
  friend void  protobuf_AddDesc_metapb_2eproto_impl();
  friend void protobuf_AssignDesc_metapb_2eproto();
  friend void protobuf_ShutdownFile_metapb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Peer> Peer_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Cluster

// optional uint64 id = 1;
inline bool Cluster::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Cluster::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Cluster::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Cluster::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 Cluster::id() const {
  // @@protoc_insertion_point(field_get:metapb.Cluster.id)
  return id_;
}
inline void Cluster::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:metapb.Cluster.id)
}

// optional uint32 max_peer_count = 2;
inline bool Cluster::has_max_peer_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Cluster::set_has_max_peer_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Cluster::clear_has_max_peer_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Cluster::clear_max_peer_count() {
  max_peer_count_ = 0u;
  clear_has_max_peer_count();
}
inline ::google::protobuf::uint32 Cluster::max_peer_count() const {
  // @@protoc_insertion_point(field_get:metapb.Cluster.max_peer_count)
  return max_peer_count_;
}
inline void Cluster::set_max_peer_count(::google::protobuf::uint32 value) {
  set_has_max_peer_count();
  max_peer_count_ = value;
  // @@protoc_insertion_point(field_set:metapb.Cluster.max_peer_count)
}

inline const Cluster* Cluster::internal_default_instance() {
  return &Cluster_default_instance_.get();
}
// -------------------------------------------------------------------

// StoreLabel

// optional string key = 1;
inline bool StoreLabel::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoreLabel::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoreLabel::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoreLabel::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& StoreLabel::key() const {
  // @@protoc_insertion_point(field_get:metapb.StoreLabel.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoreLabel::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metapb.StoreLabel.key)
}
inline void StoreLabel::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metapb.StoreLabel.key)
}
inline void StoreLabel::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metapb.StoreLabel.key)
}
inline ::std::string* StoreLabel::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:metapb.StoreLabel.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoreLabel::release_key() {
  // @@protoc_insertion_point(field_release:metapb.StoreLabel.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoreLabel::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:metapb.StoreLabel.key)
}

// optional string value = 2;
inline bool StoreLabel::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StoreLabel::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StoreLabel::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StoreLabel::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& StoreLabel::value() const {
  // @@protoc_insertion_point(field_get:metapb.StoreLabel.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoreLabel::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metapb.StoreLabel.value)
}
inline void StoreLabel::set_value(const char* value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metapb.StoreLabel.value)
}
inline void StoreLabel::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metapb.StoreLabel.value)
}
inline ::std::string* StoreLabel::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:metapb.StoreLabel.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StoreLabel::release_value() {
  // @@protoc_insertion_point(field_release:metapb.StoreLabel.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StoreLabel::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:metapb.StoreLabel.value)
}

inline const StoreLabel* StoreLabel::internal_default_instance() {
  return &StoreLabel_default_instance_.get();
}
// -------------------------------------------------------------------

// Store

// optional uint64 id = 1;
inline bool Store::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Store::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Store::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Store::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 Store::id() const {
  // @@protoc_insertion_point(field_get:metapb.Store.id)
  return id_;
}
inline void Store::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:metapb.Store.id)
}

// optional string address = 2;
inline bool Store::has_address() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Store::set_has_address() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Store::clear_has_address() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Store::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_address();
}
inline const ::std::string& Store::address() const {
  // @@protoc_insertion_point(field_get:metapb.Store.address)
  return address_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Store::set_address(const ::std::string& value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metapb.Store.address)
}
inline void Store::set_address(const char* value) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metapb.Store.address)
}
inline void Store::set_address(const char* value, size_t size) {
  set_has_address();
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metapb.Store.address)
}
inline ::std::string* Store::mutable_address() {
  set_has_address();
  // @@protoc_insertion_point(field_mutable:metapb.Store.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Store::release_address() {
  // @@protoc_insertion_point(field_release:metapb.Store.address)
  clear_has_address();
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Store::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    set_has_address();
  } else {
    clear_has_address();
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:metapb.Store.address)
}

// optional .metapb.StoreState state = 3;
inline bool Store::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Store::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Store::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Store::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::metapb::StoreState Store::state() const {
  // @@protoc_insertion_point(field_get:metapb.Store.state)
  return static_cast< ::metapb::StoreState >(state_);
}
inline void Store::set_state(::metapb::StoreState value) {
  assert(::metapb::StoreState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:metapb.Store.state)
}

// repeated .metapb.StoreLabel labels = 4;
inline int Store::labels_size() const {
  return labels_.size();
}
inline void Store::clear_labels() {
  labels_.Clear();
}
inline const ::metapb::StoreLabel& Store::labels(int index) const {
  // @@protoc_insertion_point(field_get:metapb.Store.labels)
  return labels_.Get(index);
}
inline ::metapb::StoreLabel* Store::mutable_labels(int index) {
  // @@protoc_insertion_point(field_mutable:metapb.Store.labels)
  return labels_.Mutable(index);
}
inline ::metapb::StoreLabel* Store::add_labels() {
  // @@protoc_insertion_point(field_add:metapb.Store.labels)
  return labels_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::metapb::StoreLabel >*
Store::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_list:metapb.Store.labels)
  return &labels_;
}
inline const ::google::protobuf::RepeatedPtrField< ::metapb::StoreLabel >&
Store::labels() const {
  // @@protoc_insertion_point(field_list:metapb.Store.labels)
  return labels_;
}

inline const Store* Store::internal_default_instance() {
  return &Store_default_instance_.get();
}
// -------------------------------------------------------------------

// RegionEpoch

// optional uint64 conf_ver = 1;
inline bool RegionEpoch::has_conf_ver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegionEpoch::set_has_conf_ver() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegionEpoch::clear_has_conf_ver() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegionEpoch::clear_conf_ver() {
  conf_ver_ = GOOGLE_ULONGLONG(0);
  clear_has_conf_ver();
}
inline ::google::protobuf::uint64 RegionEpoch::conf_ver() const {
  // @@protoc_insertion_point(field_get:metapb.RegionEpoch.conf_ver)
  return conf_ver_;
}
inline void RegionEpoch::set_conf_ver(::google::protobuf::uint64 value) {
  set_has_conf_ver();
  conf_ver_ = value;
  // @@protoc_insertion_point(field_set:metapb.RegionEpoch.conf_ver)
}

// optional uint64 version = 2;
inline bool RegionEpoch::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RegionEpoch::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RegionEpoch::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RegionEpoch::clear_version() {
  version_ = GOOGLE_ULONGLONG(0);
  clear_has_version();
}
inline ::google::protobuf::uint64 RegionEpoch::version() const {
  // @@protoc_insertion_point(field_get:metapb.RegionEpoch.version)
  return version_;
}
inline void RegionEpoch::set_version(::google::protobuf::uint64 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:metapb.RegionEpoch.version)
}

inline const RegionEpoch* RegionEpoch::internal_default_instance() {
  return &RegionEpoch_default_instance_.get();
}
// -------------------------------------------------------------------

// Region

// optional uint64 id = 1;
inline bool Region::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Region::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Region::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Region::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 Region::id() const {
  // @@protoc_insertion_point(field_get:metapb.Region.id)
  return id_;
}
inline void Region::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:metapb.Region.id)
}

// optional bytes start_key = 2;
inline bool Region::has_start_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Region::set_has_start_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Region::clear_has_start_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Region::clear_start_key() {
  start_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_start_key();
}
inline const ::std::string& Region::start_key() const {
  // @@protoc_insertion_point(field_get:metapb.Region.start_key)
  return start_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Region::set_start_key(const ::std::string& value) {
  set_has_start_key();
  start_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metapb.Region.start_key)
}
inline void Region::set_start_key(const char* value) {
  set_has_start_key();
  start_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metapb.Region.start_key)
}
inline void Region::set_start_key(const void* value, size_t size) {
  set_has_start_key();
  start_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metapb.Region.start_key)
}
inline ::std::string* Region::mutable_start_key() {
  set_has_start_key();
  // @@protoc_insertion_point(field_mutable:metapb.Region.start_key)
  return start_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Region::release_start_key() {
  // @@protoc_insertion_point(field_release:metapb.Region.start_key)
  clear_has_start_key();
  return start_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Region::set_allocated_start_key(::std::string* start_key) {
  if (start_key != NULL) {
    set_has_start_key();
  } else {
    clear_has_start_key();
  }
  start_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start_key);
  // @@protoc_insertion_point(field_set_allocated:metapb.Region.start_key)
}

// optional bytes end_key = 3;
inline bool Region::has_end_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Region::set_has_end_key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Region::clear_has_end_key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Region::clear_end_key() {
  end_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_end_key();
}
inline const ::std::string& Region::end_key() const {
  // @@protoc_insertion_point(field_get:metapb.Region.end_key)
  return end_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Region::set_end_key(const ::std::string& value) {
  set_has_end_key();
  end_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:metapb.Region.end_key)
}
inline void Region::set_end_key(const char* value) {
  set_has_end_key();
  end_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:metapb.Region.end_key)
}
inline void Region::set_end_key(const void* value, size_t size) {
  set_has_end_key();
  end_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:metapb.Region.end_key)
}
inline ::std::string* Region::mutable_end_key() {
  set_has_end_key();
  // @@protoc_insertion_point(field_mutable:metapb.Region.end_key)
  return end_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Region::release_end_key() {
  // @@protoc_insertion_point(field_release:metapb.Region.end_key)
  clear_has_end_key();
  return end_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Region::set_allocated_end_key(::std::string* end_key) {
  if (end_key != NULL) {
    set_has_end_key();
  } else {
    clear_has_end_key();
  }
  end_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), end_key);
  // @@protoc_insertion_point(field_set_allocated:metapb.Region.end_key)
}

// optional .metapb.RegionEpoch region_epoch = 4;
inline bool Region::has_region_epoch() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Region::set_has_region_epoch() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Region::clear_has_region_epoch() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Region::clear_region_epoch() {
  if (region_epoch_ != NULL) region_epoch_->::metapb::RegionEpoch::Clear();
  clear_has_region_epoch();
}
inline const ::metapb::RegionEpoch& Region::region_epoch() const {
  // @@protoc_insertion_point(field_get:metapb.Region.region_epoch)
  return region_epoch_ != NULL ? *region_epoch_
                         : *::metapb::RegionEpoch::internal_default_instance();
}
inline ::metapb::RegionEpoch* Region::mutable_region_epoch() {
  set_has_region_epoch();
  if (region_epoch_ == NULL) {
    region_epoch_ = new ::metapb::RegionEpoch;
  }
  // @@protoc_insertion_point(field_mutable:metapb.Region.region_epoch)
  return region_epoch_;
}
inline ::metapb::RegionEpoch* Region::release_region_epoch() {
  // @@protoc_insertion_point(field_release:metapb.Region.region_epoch)
  clear_has_region_epoch();
  ::metapb::RegionEpoch* temp = region_epoch_;
  region_epoch_ = NULL;
  return temp;
}
inline void Region::set_allocated_region_epoch(::metapb::RegionEpoch* region_epoch) {
  delete region_epoch_;
  region_epoch_ = region_epoch;
  if (region_epoch) {
    set_has_region_epoch();
  } else {
    clear_has_region_epoch();
  }
  // @@protoc_insertion_point(field_set_allocated:metapb.Region.region_epoch)
}

// repeated .metapb.Peer peers = 5;
inline int Region::peers_size() const {
  return peers_.size();
}
inline void Region::clear_peers() {
  peers_.Clear();
}
inline const ::metapb::Peer& Region::peers(int index) const {
  // @@protoc_insertion_point(field_get:metapb.Region.peers)
  return peers_.Get(index);
}
inline ::metapb::Peer* Region::mutable_peers(int index) {
  // @@protoc_insertion_point(field_mutable:metapb.Region.peers)
  return peers_.Mutable(index);
}
inline ::metapb::Peer* Region::add_peers() {
  // @@protoc_insertion_point(field_add:metapb.Region.peers)
  return peers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::metapb::Peer >*
Region::mutable_peers() {
  // @@protoc_insertion_point(field_mutable_list:metapb.Region.peers)
  return &peers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::metapb::Peer >&
Region::peers() const {
  // @@protoc_insertion_point(field_list:metapb.Region.peers)
  return peers_;
}

inline const Region* Region::internal_default_instance() {
  return &Region_default_instance_.get();
}
// -------------------------------------------------------------------

// Peer

// optional uint64 id = 1;
inline bool Peer::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Peer::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Peer::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Peer::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 Peer::id() const {
  // @@protoc_insertion_point(field_get:metapb.Peer.id)
  return id_;
}
inline void Peer::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:metapb.Peer.id)
}

// optional uint64 store_id = 2;
inline bool Peer::has_store_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Peer::set_has_store_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Peer::clear_has_store_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Peer::clear_store_id() {
  store_id_ = GOOGLE_ULONGLONG(0);
  clear_has_store_id();
}
inline ::google::protobuf::uint64 Peer::store_id() const {
  // @@protoc_insertion_point(field_get:metapb.Peer.store_id)
  return store_id_;
}
inline void Peer::set_store_id(::google::protobuf::uint64 value) {
  set_has_store_id();
  store_id_ = value;
  // @@protoc_insertion_point(field_set:metapb.Peer.store_id)
}

inline const Peer* Peer::internal_default_instance() {
  return &Peer_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace metapb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::metapb::StoreState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::metapb::StoreState>() {
  return ::metapb::StoreState_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_metapb_2eproto__INCLUDED
