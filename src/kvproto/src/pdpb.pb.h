// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pdpb.proto

#ifndef PROTOBUF_pdpb_2eproto__INCLUDED
#define PROTOBUF_pdpb_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "metapb.pb.h"
#include "eraftpb.pb.h"
// @@protoc_insertion_point(includes)

namespace pdpb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_pdpb_2eproto();
void protobuf_InitDefaults_pdpb_2eproto();
void protobuf_AssignDesc_pdpb_2eproto();
void protobuf_ShutdownFile_pdpb_2eproto();

class AllocIdRequest;
class AllocIdResponse;
class AskSplitRequest;
class AskSplitResponse;
class BootstrapRequest;
class BootstrapResponse;
class BootstrappedError;
class ChangePeer;
class Error;
class GetClusterConfigRequest;
class GetClusterConfigResponse;
class GetPDMembersRequest;
class GetPDMembersResponse;
class GetRegionByIDRequest;
class GetRegionRequest;
class GetRegionResponse;
class GetStoreRequest;
class GetStoreResponse;
class IsBootstrappedRequest;
class IsBootstrappedResponse;
class Leader;
class PDMember;
class PeerStats;
class PutClusterConfigRequest;
class PutClusterConfigResponse;
class PutStoreRequest;
class PutStoreResponse;
class RegionHeartbeatRequest;
class RegionHeartbeatResponse;
class ReportSplitRequest;
class ReportSplitResponse;
class Request;
class RequestHeader;
class Response;
class ResponseHeader;
class StoreHeartbeatRequest;
class StoreHeartbeatResponse;
class StoreIsTombstoneError;
class StoreStats;
class Timestamp;
class TransferLeader;
class TsoRequest;
class TsoResponse;

enum CommandType {
  Invalid = 0,
  Tso = 1,
  Bootstrap = 2,
  IsBootstrapped = 3,
  AllocId = 4,
  GetStore = 5,
  PutStore = 6,
  AskSplit = 7,
  GetRegion = 8,
  RegionHeartbeat = 9,
  GetClusterConfig = 10,
  PutClusterConfig = 11,
  StoreHeartbeat = 12,
  ReportSplit = 13,
  GetRegionByID = 14,
  GetPDMembers = 15
};
bool CommandType_IsValid(int value);
const CommandType CommandType_MIN = Invalid;
const CommandType CommandType_MAX = GetPDMembers;
const int CommandType_ARRAYSIZE = CommandType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CommandType_descriptor();
inline const ::std::string& CommandType_Name(CommandType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CommandType_descriptor(), value);
}
inline bool CommandType_Parse(
    const ::std::string& name, CommandType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommandType>(
    CommandType_descriptor(), name, value);
}
// ===================================================================

class Leader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.Leader) */ {
 public:
  Leader();
  virtual ~Leader();

  Leader(const Leader& from);

  inline Leader& operator=(const Leader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Leader& default_instance();

  static const Leader* internal_default_instance();

  void Swap(Leader* other);

  // implements Message ----------------------------------------------

  inline Leader* New() const { return New(NULL); }

  Leader* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Leader& from);
  void MergeFrom(const Leader& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Leader* other);
  void UnsafeMergeFrom(const Leader& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string addr = 1;
  bool has_addr() const;
  void clear_addr();
  static const int kAddrFieldNumber = 1;
  const ::std::string& addr() const;
  void set_addr(const ::std::string& value);
  void set_addr(const char* value);
  void set_addr(const char* value, size_t size);
  ::std::string* mutable_addr();
  ::std::string* release_addr();
  void set_allocated_addr(::std::string* addr);

  // optional uint64 id = 3;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pdpb.Leader)
 private:
  inline void set_has_addr();
  inline void clear_has_addr();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr addr_;
  ::google::protobuf::uint64 id_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Leader> Leader_default_instance_;

// -------------------------------------------------------------------

class TsoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.TsoRequest) */ {
 public:
  TsoRequest();
  virtual ~TsoRequest();

  TsoRequest(const TsoRequest& from);

  inline TsoRequest& operator=(const TsoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TsoRequest& default_instance();

  static const TsoRequest* internal_default_instance();

  void Swap(TsoRequest* other);

  // implements Message ----------------------------------------------

  inline TsoRequest* New() const { return New(NULL); }

  TsoRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TsoRequest& from);
  void MergeFrom(const TsoRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TsoRequest* other);
  void UnsafeMergeFrom(const TsoRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 count = 1;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pdpb.TsoRequest)
 private:
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TsoRequest> TsoRequest_default_instance_;

// -------------------------------------------------------------------

class Timestamp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.Timestamp) */ {
 public:
  Timestamp();
  virtual ~Timestamp();

  Timestamp(const Timestamp& from);

  inline Timestamp& operator=(const Timestamp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Timestamp& default_instance();

  static const Timestamp* internal_default_instance();

  void Swap(Timestamp* other);

  // implements Message ----------------------------------------------

  inline Timestamp* New() const { return New(NULL); }

  Timestamp* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Timestamp& from);
  void MergeFrom(const Timestamp& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Timestamp* other);
  void UnsafeMergeFrom(const Timestamp& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 physical = 1;
  bool has_physical() const;
  void clear_physical();
  static const int kPhysicalFieldNumber = 1;
  ::google::protobuf::int64 physical() const;
  void set_physical(::google::protobuf::int64 value);

  // optional int64 logical = 2;
  bool has_logical() const;
  void clear_logical();
  static const int kLogicalFieldNumber = 2;
  ::google::protobuf::int64 logical() const;
  void set_logical(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:pdpb.Timestamp)
 private:
  inline void set_has_physical();
  inline void clear_has_physical();
  inline void set_has_logical();
  inline void clear_has_logical();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 physical_;
  ::google::protobuf::int64 logical_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Timestamp> Timestamp_default_instance_;

// -------------------------------------------------------------------

class TsoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.TsoResponse) */ {
 public:
  TsoResponse();
  virtual ~TsoResponse();

  TsoResponse(const TsoResponse& from);

  inline TsoResponse& operator=(const TsoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TsoResponse& default_instance();

  static const TsoResponse* internal_default_instance();

  void Swap(TsoResponse* other);

  // implements Message ----------------------------------------------

  inline TsoResponse* New() const { return New(NULL); }

  TsoResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TsoResponse& from);
  void MergeFrom(const TsoResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TsoResponse* other);
  void UnsafeMergeFrom(const TsoResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 count = 1;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // optional .pdpb.Timestamp timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  const ::pdpb::Timestamp& timestamp() const;
  ::pdpb::Timestamp* mutable_timestamp();
  ::pdpb::Timestamp* release_timestamp();
  void set_allocated_timestamp(::pdpb::Timestamp* timestamp);

  // @@protoc_insertion_point(class_scope:pdpb.TsoResponse)
 private:
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pdpb::Timestamp* timestamp_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TsoResponse> TsoResponse_default_instance_;

// -------------------------------------------------------------------

class BootstrapRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.BootstrapRequest) */ {
 public:
  BootstrapRequest();
  virtual ~BootstrapRequest();

  BootstrapRequest(const BootstrapRequest& from);

  inline BootstrapRequest& operator=(const BootstrapRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BootstrapRequest& default_instance();

  static const BootstrapRequest* internal_default_instance();

  void Swap(BootstrapRequest* other);

  // implements Message ----------------------------------------------

  inline BootstrapRequest* New() const { return New(NULL); }

  BootstrapRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BootstrapRequest& from);
  void MergeFrom(const BootstrapRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BootstrapRequest* other);
  void UnsafeMergeFrom(const BootstrapRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .metapb.Store store = 1;
  bool has_store() const;
  void clear_store();
  static const int kStoreFieldNumber = 1;
  const ::metapb::Store& store() const;
  ::metapb::Store* mutable_store();
  ::metapb::Store* release_store();
  void set_allocated_store(::metapb::Store* store);

  // optional .metapb.Region region = 2;
  bool has_region() const;
  void clear_region();
  static const int kRegionFieldNumber = 2;
  const ::metapb::Region& region() const;
  ::metapb::Region* mutable_region();
  ::metapb::Region* release_region();
  void set_allocated_region(::metapb::Region* region);

  // @@protoc_insertion_point(class_scope:pdpb.BootstrapRequest)
 private:
  inline void set_has_store();
  inline void clear_has_store();
  inline void set_has_region();
  inline void clear_has_region();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::metapb::Store* store_;
  ::metapb::Region* region_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BootstrapRequest> BootstrapRequest_default_instance_;

// -------------------------------------------------------------------

class BootstrapResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.BootstrapResponse) */ {
 public:
  BootstrapResponse();
  virtual ~BootstrapResponse();

  BootstrapResponse(const BootstrapResponse& from);

  inline BootstrapResponse& operator=(const BootstrapResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BootstrapResponse& default_instance();

  static const BootstrapResponse* internal_default_instance();

  void Swap(BootstrapResponse* other);

  // implements Message ----------------------------------------------

  inline BootstrapResponse* New() const { return New(NULL); }

  BootstrapResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BootstrapResponse& from);
  void MergeFrom(const BootstrapResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BootstrapResponse* other);
  void UnsafeMergeFrom(const BootstrapResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pdpb.BootstrapResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BootstrapResponse> BootstrapResponse_default_instance_;

// -------------------------------------------------------------------

class IsBootstrappedRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.IsBootstrappedRequest) */ {
 public:
  IsBootstrappedRequest();
  virtual ~IsBootstrappedRequest();

  IsBootstrappedRequest(const IsBootstrappedRequest& from);

  inline IsBootstrappedRequest& operator=(const IsBootstrappedRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsBootstrappedRequest& default_instance();

  static const IsBootstrappedRequest* internal_default_instance();

  void Swap(IsBootstrappedRequest* other);

  // implements Message ----------------------------------------------

  inline IsBootstrappedRequest* New() const { return New(NULL); }

  IsBootstrappedRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IsBootstrappedRequest& from);
  void MergeFrom(const IsBootstrappedRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IsBootstrappedRequest* other);
  void UnsafeMergeFrom(const IsBootstrappedRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pdpb.IsBootstrappedRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<IsBootstrappedRequest> IsBootstrappedRequest_default_instance_;

// -------------------------------------------------------------------

class IsBootstrappedResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.IsBootstrappedResponse) */ {
 public:
  IsBootstrappedResponse();
  virtual ~IsBootstrappedResponse();

  IsBootstrappedResponse(const IsBootstrappedResponse& from);

  inline IsBootstrappedResponse& operator=(const IsBootstrappedResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsBootstrappedResponse& default_instance();

  static const IsBootstrappedResponse* internal_default_instance();

  void Swap(IsBootstrappedResponse* other);

  // implements Message ----------------------------------------------

  inline IsBootstrappedResponse* New() const { return New(NULL); }

  IsBootstrappedResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IsBootstrappedResponse& from);
  void MergeFrom(const IsBootstrappedResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IsBootstrappedResponse* other);
  void UnsafeMergeFrom(const IsBootstrappedResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool bootstrapped = 1;
  bool has_bootstrapped() const;
  void clear_bootstrapped();
  static const int kBootstrappedFieldNumber = 1;
  bool bootstrapped() const;
  void set_bootstrapped(bool value);

  // @@protoc_insertion_point(class_scope:pdpb.IsBootstrappedResponse)
 private:
  inline void set_has_bootstrapped();
  inline void clear_has_bootstrapped();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool bootstrapped_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<IsBootstrappedResponse> IsBootstrappedResponse_default_instance_;

// -------------------------------------------------------------------

class AllocIdRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.AllocIdRequest) */ {
 public:
  AllocIdRequest();
  virtual ~AllocIdRequest();

  AllocIdRequest(const AllocIdRequest& from);

  inline AllocIdRequest& operator=(const AllocIdRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllocIdRequest& default_instance();

  static const AllocIdRequest* internal_default_instance();

  void Swap(AllocIdRequest* other);

  // implements Message ----------------------------------------------

  inline AllocIdRequest* New() const { return New(NULL); }

  AllocIdRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllocIdRequest& from);
  void MergeFrom(const AllocIdRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AllocIdRequest* other);
  void UnsafeMergeFrom(const AllocIdRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pdpb.AllocIdRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AllocIdRequest> AllocIdRequest_default_instance_;

// -------------------------------------------------------------------

class AllocIdResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.AllocIdResponse) */ {
 public:
  AllocIdResponse();
  virtual ~AllocIdResponse();

  AllocIdResponse(const AllocIdResponse& from);

  inline AllocIdResponse& operator=(const AllocIdResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllocIdResponse& default_instance();

  static const AllocIdResponse* internal_default_instance();

  void Swap(AllocIdResponse* other);

  // implements Message ----------------------------------------------

  inline AllocIdResponse* New() const { return New(NULL); }

  AllocIdResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllocIdResponse& from);
  void MergeFrom(const AllocIdResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AllocIdResponse* other);
  void UnsafeMergeFrom(const AllocIdResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pdpb.AllocIdResponse)
 private:
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AllocIdResponse> AllocIdResponse_default_instance_;

// -------------------------------------------------------------------

class GetStoreRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.GetStoreRequest) */ {
 public:
  GetStoreRequest();
  virtual ~GetStoreRequest();

  GetStoreRequest(const GetStoreRequest& from);

  inline GetStoreRequest& operator=(const GetStoreRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStoreRequest& default_instance();

  static const GetStoreRequest* internal_default_instance();

  void Swap(GetStoreRequest* other);

  // implements Message ----------------------------------------------

  inline GetStoreRequest* New() const { return New(NULL); }

  GetStoreRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetStoreRequest& from);
  void MergeFrom(const GetStoreRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetStoreRequest* other);
  void UnsafeMergeFrom(const GetStoreRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 store_id = 1;
  bool has_store_id() const;
  void clear_store_id();
  static const int kStoreIdFieldNumber = 1;
  ::google::protobuf::uint64 store_id() const;
  void set_store_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pdpb.GetStoreRequest)
 private:
  inline void set_has_store_id();
  inline void clear_has_store_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 store_id_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetStoreRequest> GetStoreRequest_default_instance_;

// -------------------------------------------------------------------

class GetStoreResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.GetStoreResponse) */ {
 public:
  GetStoreResponse();
  virtual ~GetStoreResponse();

  GetStoreResponse(const GetStoreResponse& from);

  inline GetStoreResponse& operator=(const GetStoreResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStoreResponse& default_instance();

  static const GetStoreResponse* internal_default_instance();

  void Swap(GetStoreResponse* other);

  // implements Message ----------------------------------------------

  inline GetStoreResponse* New() const { return New(NULL); }

  GetStoreResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetStoreResponse& from);
  void MergeFrom(const GetStoreResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetStoreResponse* other);
  void UnsafeMergeFrom(const GetStoreResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .metapb.Store store = 1;
  bool has_store() const;
  void clear_store();
  static const int kStoreFieldNumber = 1;
  const ::metapb::Store& store() const;
  ::metapb::Store* mutable_store();
  ::metapb::Store* release_store();
  void set_allocated_store(::metapb::Store* store);

  // @@protoc_insertion_point(class_scope:pdpb.GetStoreResponse)
 private:
  inline void set_has_store();
  inline void clear_has_store();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::metapb::Store* store_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetStoreResponse> GetStoreResponse_default_instance_;

// -------------------------------------------------------------------

class GetRegionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.GetRegionRequest) */ {
 public:
  GetRegionRequest();
  virtual ~GetRegionRequest();

  GetRegionRequest(const GetRegionRequest& from);

  inline GetRegionRequest& operator=(const GetRegionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRegionRequest& default_instance();

  static const GetRegionRequest* internal_default_instance();

  void Swap(GetRegionRequest* other);

  // implements Message ----------------------------------------------

  inline GetRegionRequest* New() const { return New(NULL); }

  GetRegionRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRegionRequest& from);
  void MergeFrom(const GetRegionRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRegionRequest* other);
  void UnsafeMergeFrom(const GetRegionRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes region_key = 1;
  bool has_region_key() const;
  void clear_region_key();
  static const int kRegionKeyFieldNumber = 1;
  const ::std::string& region_key() const;
  void set_region_key(const ::std::string& value);
  void set_region_key(const char* value);
  void set_region_key(const void* value, size_t size);
  ::std::string* mutable_region_key();
  ::std::string* release_region_key();
  void set_allocated_region_key(::std::string* region_key);

  // @@protoc_insertion_point(class_scope:pdpb.GetRegionRequest)
 private:
  inline void set_has_region_key();
  inline void clear_has_region_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr region_key_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetRegionRequest> GetRegionRequest_default_instance_;

// -------------------------------------------------------------------

class GetRegionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.GetRegionResponse) */ {
 public:
  GetRegionResponse();
  virtual ~GetRegionResponse();

  GetRegionResponse(const GetRegionResponse& from);

  inline GetRegionResponse& operator=(const GetRegionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRegionResponse& default_instance();

  static const GetRegionResponse* internal_default_instance();

  void Swap(GetRegionResponse* other);

  // implements Message ----------------------------------------------

  inline GetRegionResponse* New() const { return New(NULL); }

  GetRegionResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRegionResponse& from);
  void MergeFrom(const GetRegionResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRegionResponse* other);
  void UnsafeMergeFrom(const GetRegionResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .metapb.Region region = 1;
  bool has_region() const;
  void clear_region();
  static const int kRegionFieldNumber = 1;
  const ::metapb::Region& region() const;
  ::metapb::Region* mutable_region();
  ::metapb::Region* release_region();
  void set_allocated_region(::metapb::Region* region);

  // optional .metapb.Peer leader = 2;
  bool has_leader() const;
  void clear_leader();
  static const int kLeaderFieldNumber = 2;
  const ::metapb::Peer& leader() const;
  ::metapb::Peer* mutable_leader();
  ::metapb::Peer* release_leader();
  void set_allocated_leader(::metapb::Peer* leader);

  // @@protoc_insertion_point(class_scope:pdpb.GetRegionResponse)
 private:
  inline void set_has_region();
  inline void clear_has_region();
  inline void set_has_leader();
  inline void clear_has_leader();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::metapb::Region* region_;
  ::metapb::Peer* leader_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetRegionResponse> GetRegionResponse_default_instance_;

// -------------------------------------------------------------------

class GetRegionByIDRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.GetRegionByIDRequest) */ {
 public:
  GetRegionByIDRequest();
  virtual ~GetRegionByIDRequest();

  GetRegionByIDRequest(const GetRegionByIDRequest& from);

  inline GetRegionByIDRequest& operator=(const GetRegionByIDRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRegionByIDRequest& default_instance();

  static const GetRegionByIDRequest* internal_default_instance();

  void Swap(GetRegionByIDRequest* other);

  // implements Message ----------------------------------------------

  inline GetRegionByIDRequest* New() const { return New(NULL); }

  GetRegionByIDRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetRegionByIDRequest& from);
  void MergeFrom(const GetRegionByIDRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetRegionByIDRequest* other);
  void UnsafeMergeFrom(const GetRegionByIDRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 region_id = 1;
  bool has_region_id() const;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 1;
  ::google::protobuf::uint64 region_id() const;
  void set_region_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pdpb.GetRegionByIDRequest)
 private:
  inline void set_has_region_id();
  inline void clear_has_region_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 region_id_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetRegionByIDRequest> GetRegionByIDRequest_default_instance_;

// -------------------------------------------------------------------

class GetClusterConfigRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.GetClusterConfigRequest) */ {
 public:
  GetClusterConfigRequest();
  virtual ~GetClusterConfigRequest();

  GetClusterConfigRequest(const GetClusterConfigRequest& from);

  inline GetClusterConfigRequest& operator=(const GetClusterConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetClusterConfigRequest& default_instance();

  static const GetClusterConfigRequest* internal_default_instance();

  void Swap(GetClusterConfigRequest* other);

  // implements Message ----------------------------------------------

  inline GetClusterConfigRequest* New() const { return New(NULL); }

  GetClusterConfigRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetClusterConfigRequest& from);
  void MergeFrom(const GetClusterConfigRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetClusterConfigRequest* other);
  void UnsafeMergeFrom(const GetClusterConfigRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pdpb.GetClusterConfigRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetClusterConfigRequest> GetClusterConfigRequest_default_instance_;

// -------------------------------------------------------------------

class GetClusterConfigResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.GetClusterConfigResponse) */ {
 public:
  GetClusterConfigResponse();
  virtual ~GetClusterConfigResponse();

  GetClusterConfigResponse(const GetClusterConfigResponse& from);

  inline GetClusterConfigResponse& operator=(const GetClusterConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetClusterConfigResponse& default_instance();

  static const GetClusterConfigResponse* internal_default_instance();

  void Swap(GetClusterConfigResponse* other);

  // implements Message ----------------------------------------------

  inline GetClusterConfigResponse* New() const { return New(NULL); }

  GetClusterConfigResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetClusterConfigResponse& from);
  void MergeFrom(const GetClusterConfigResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetClusterConfigResponse* other);
  void UnsafeMergeFrom(const GetClusterConfigResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .metapb.Cluster cluster = 1;
  bool has_cluster() const;
  void clear_cluster();
  static const int kClusterFieldNumber = 1;
  const ::metapb::Cluster& cluster() const;
  ::metapb::Cluster* mutable_cluster();
  ::metapb::Cluster* release_cluster();
  void set_allocated_cluster(::metapb::Cluster* cluster);

  // @@protoc_insertion_point(class_scope:pdpb.GetClusterConfigResponse)
 private:
  inline void set_has_cluster();
  inline void clear_has_cluster();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::metapb::Cluster* cluster_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetClusterConfigResponse> GetClusterConfigResponse_default_instance_;

// -------------------------------------------------------------------

class PutStoreRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.PutStoreRequest) */ {
 public:
  PutStoreRequest();
  virtual ~PutStoreRequest();

  PutStoreRequest(const PutStoreRequest& from);

  inline PutStoreRequest& operator=(const PutStoreRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutStoreRequest& default_instance();

  static const PutStoreRequest* internal_default_instance();

  void Swap(PutStoreRequest* other);

  // implements Message ----------------------------------------------

  inline PutStoreRequest* New() const { return New(NULL); }

  PutStoreRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PutStoreRequest& from);
  void MergeFrom(const PutStoreRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PutStoreRequest* other);
  void UnsafeMergeFrom(const PutStoreRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .metapb.Store store = 1;
  bool has_store() const;
  void clear_store();
  static const int kStoreFieldNumber = 1;
  const ::metapb::Store& store() const;
  ::metapb::Store* mutable_store();
  ::metapb::Store* release_store();
  void set_allocated_store(::metapb::Store* store);

  // @@protoc_insertion_point(class_scope:pdpb.PutStoreRequest)
 private:
  inline void set_has_store();
  inline void clear_has_store();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::metapb::Store* store_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PutStoreRequest> PutStoreRequest_default_instance_;

// -------------------------------------------------------------------

class PutStoreResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.PutStoreResponse) */ {
 public:
  PutStoreResponse();
  virtual ~PutStoreResponse();

  PutStoreResponse(const PutStoreResponse& from);

  inline PutStoreResponse& operator=(const PutStoreResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutStoreResponse& default_instance();

  static const PutStoreResponse* internal_default_instance();

  void Swap(PutStoreResponse* other);

  // implements Message ----------------------------------------------

  inline PutStoreResponse* New() const { return New(NULL); }

  PutStoreResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PutStoreResponse& from);
  void MergeFrom(const PutStoreResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PutStoreResponse* other);
  void UnsafeMergeFrom(const PutStoreResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pdpb.PutStoreResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PutStoreResponse> PutStoreResponse_default_instance_;

// -------------------------------------------------------------------

class PDMember : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.PDMember) */ {
 public:
  PDMember();
  virtual ~PDMember();

  PDMember(const PDMember& from);

  inline PDMember& operator=(const PDMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PDMember& default_instance();

  static const PDMember* internal_default_instance();

  void Swap(PDMember* other);

  // implements Message ----------------------------------------------

  inline PDMember* New() const { return New(NULL); }

  PDMember* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PDMember& from);
  void MergeFrom(const PDMember& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PDMember* other);
  void UnsafeMergeFrom(const PDMember& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // repeated string client_urls = 2;
  int client_urls_size() const;
  void clear_client_urls();
  static const int kClientUrlsFieldNumber = 2;
  const ::std::string& client_urls(int index) const;
  ::std::string* mutable_client_urls(int index);
  void set_client_urls(int index, const ::std::string& value);
  void set_client_urls(int index, const char* value);
  void set_client_urls(int index, const char* value, size_t size);
  ::std::string* add_client_urls();
  void add_client_urls(const ::std::string& value);
  void add_client_urls(const char* value);
  void add_client_urls(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& client_urls() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_client_urls();

  // repeated string peer_urls = 3;
  int peer_urls_size() const;
  void clear_peer_urls();
  static const int kPeerUrlsFieldNumber = 3;
  const ::std::string& peer_urls(int index) const;
  ::std::string* mutable_peer_urls(int index);
  void set_peer_urls(int index, const ::std::string& value);
  void set_peer_urls(int index, const char* value);
  void set_peer_urls(int index, const char* value, size_t size);
  ::std::string* add_peer_urls();
  void add_peer_urls(const ::std::string& value);
  void add_peer_urls(const char* value);
  void add_peer_urls(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& peer_urls() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_peer_urls();

  // @@protoc_insertion_point(class_scope:pdpb.PDMember)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> client_urls_;
  ::google::protobuf::RepeatedPtrField< ::std::string> peer_urls_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PDMember> PDMember_default_instance_;

// -------------------------------------------------------------------

class GetPDMembersRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.GetPDMembersRequest) */ {
 public:
  GetPDMembersRequest();
  virtual ~GetPDMembersRequest();

  GetPDMembersRequest(const GetPDMembersRequest& from);

  inline GetPDMembersRequest& operator=(const GetPDMembersRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPDMembersRequest& default_instance();

  static const GetPDMembersRequest* internal_default_instance();

  void Swap(GetPDMembersRequest* other);

  // implements Message ----------------------------------------------

  inline GetPDMembersRequest* New() const { return New(NULL); }

  GetPDMembersRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPDMembersRequest& from);
  void MergeFrom(const GetPDMembersRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetPDMembersRequest* other);
  void UnsafeMergeFrom(const GetPDMembersRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pdpb.GetPDMembersRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetPDMembersRequest> GetPDMembersRequest_default_instance_;

// -------------------------------------------------------------------

class GetPDMembersResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.GetPDMembersResponse) */ {
 public:
  GetPDMembersResponse();
  virtual ~GetPDMembersResponse();

  GetPDMembersResponse(const GetPDMembersResponse& from);

  inline GetPDMembersResponse& operator=(const GetPDMembersResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPDMembersResponse& default_instance();

  static const GetPDMembersResponse* internal_default_instance();

  void Swap(GetPDMembersResponse* other);

  // implements Message ----------------------------------------------

  inline GetPDMembersResponse* New() const { return New(NULL); }

  GetPDMembersResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPDMembersResponse& from);
  void MergeFrom(const GetPDMembersResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetPDMembersResponse* other);
  void UnsafeMergeFrom(const GetPDMembersResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pdpb.PDMember members = 1;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 1;
  const ::pdpb::PDMember& members(int index) const;
  ::pdpb::PDMember* mutable_members(int index);
  ::pdpb::PDMember* add_members();
  ::google::protobuf::RepeatedPtrField< ::pdpb::PDMember >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::pdpb::PDMember >&
      members() const;

  // @@protoc_insertion_point(class_scope:pdpb.GetPDMembersResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pdpb::PDMember > members_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetPDMembersResponse> GetPDMembersResponse_default_instance_;

// -------------------------------------------------------------------

class PeerStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.PeerStats) */ {
 public:
  PeerStats();
  virtual ~PeerStats();

  PeerStats(const PeerStats& from);

  inline PeerStats& operator=(const PeerStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PeerStats& default_instance();

  static const PeerStats* internal_default_instance();

  void Swap(PeerStats* other);

  // implements Message ----------------------------------------------

  inline PeerStats* New() const { return New(NULL); }

  PeerStats* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PeerStats& from);
  void MergeFrom(const PeerStats& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PeerStats* other);
  void UnsafeMergeFrom(const PeerStats& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .metapb.Peer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::metapb::Peer& peer() const;
  ::metapb::Peer* mutable_peer();
  ::metapb::Peer* release_peer();
  void set_allocated_peer(::metapb::Peer* peer);

  // optional uint64 down_seconds = 2;
  bool has_down_seconds() const;
  void clear_down_seconds();
  static const int kDownSecondsFieldNumber = 2;
  ::google::protobuf::uint64 down_seconds() const;
  void set_down_seconds(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pdpb.PeerStats)
 private:
  inline void set_has_peer();
  inline void clear_has_peer();
  inline void set_has_down_seconds();
  inline void clear_has_down_seconds();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::metapb::Peer* peer_;
  ::google::protobuf::uint64 down_seconds_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PeerStats> PeerStats_default_instance_;

// -------------------------------------------------------------------

class RegionHeartbeatRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.RegionHeartbeatRequest) */ {
 public:
  RegionHeartbeatRequest();
  virtual ~RegionHeartbeatRequest();

  RegionHeartbeatRequest(const RegionHeartbeatRequest& from);

  inline RegionHeartbeatRequest& operator=(const RegionHeartbeatRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegionHeartbeatRequest& default_instance();

  static const RegionHeartbeatRequest* internal_default_instance();

  void Swap(RegionHeartbeatRequest* other);

  // implements Message ----------------------------------------------

  inline RegionHeartbeatRequest* New() const { return New(NULL); }

  RegionHeartbeatRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegionHeartbeatRequest& from);
  void MergeFrom(const RegionHeartbeatRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RegionHeartbeatRequest* other);
  void UnsafeMergeFrom(const RegionHeartbeatRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .metapb.Region region = 1;
  bool has_region() const;
  void clear_region();
  static const int kRegionFieldNumber = 1;
  const ::metapb::Region& region() const;
  ::metapb::Region* mutable_region();
  ::metapb::Region* release_region();
  void set_allocated_region(::metapb::Region* region);

  // optional .metapb.Peer leader = 2;
  bool has_leader() const;
  void clear_leader();
  static const int kLeaderFieldNumber = 2;
  const ::metapb::Peer& leader() const;
  ::metapb::Peer* mutable_leader();
  ::metapb::Peer* release_leader();
  void set_allocated_leader(::metapb::Peer* leader);

  // repeated .pdpb.PeerStats down_peers = 3;
  int down_peers_size() const;
  void clear_down_peers();
  static const int kDownPeersFieldNumber = 3;
  const ::pdpb::PeerStats& down_peers(int index) const;
  ::pdpb::PeerStats* mutable_down_peers(int index);
  ::pdpb::PeerStats* add_down_peers();
  ::google::protobuf::RepeatedPtrField< ::pdpb::PeerStats >*
      mutable_down_peers();
  const ::google::protobuf::RepeatedPtrField< ::pdpb::PeerStats >&
      down_peers() const;

  // repeated .metapb.Peer pending_peers = 4;
  int pending_peers_size() const;
  void clear_pending_peers();
  static const int kPendingPeersFieldNumber = 4;
  const ::metapb::Peer& pending_peers(int index) const;
  ::metapb::Peer* mutable_pending_peers(int index);
  ::metapb::Peer* add_pending_peers();
  ::google::protobuf::RepeatedPtrField< ::metapb::Peer >*
      mutable_pending_peers();
  const ::google::protobuf::RepeatedPtrField< ::metapb::Peer >&
      pending_peers() const;

  // @@protoc_insertion_point(class_scope:pdpb.RegionHeartbeatRequest)
 private:
  inline void set_has_region();
  inline void clear_has_region();
  inline void set_has_leader();
  inline void clear_has_leader();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pdpb::PeerStats > down_peers_;
  ::google::protobuf::RepeatedPtrField< ::metapb::Peer > pending_peers_;
  ::metapb::Region* region_;
  ::metapb::Peer* leader_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RegionHeartbeatRequest> RegionHeartbeatRequest_default_instance_;

// -------------------------------------------------------------------

class ChangePeer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.ChangePeer) */ {
 public:
  ChangePeer();
  virtual ~ChangePeer();

  ChangePeer(const ChangePeer& from);

  inline ChangePeer& operator=(const ChangePeer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangePeer& default_instance();

  static const ChangePeer* internal_default_instance();

  void Swap(ChangePeer* other);

  // implements Message ----------------------------------------------

  inline ChangePeer* New() const { return New(NULL); }

  ChangePeer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChangePeer& from);
  void MergeFrom(const ChangePeer& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChangePeer* other);
  void UnsafeMergeFrom(const ChangePeer& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .eraftpb.ConfChangeType change_type = 1;
  bool has_change_type() const;
  void clear_change_type();
  static const int kChangeTypeFieldNumber = 1;
  ::eraftpb::ConfChangeType change_type() const;
  void set_change_type(::eraftpb::ConfChangeType value);

  // optional .metapb.Peer peer = 2;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 2;
  const ::metapb::Peer& peer() const;
  ::metapb::Peer* mutable_peer();
  ::metapb::Peer* release_peer();
  void set_allocated_peer(::metapb::Peer* peer);

  // @@protoc_insertion_point(class_scope:pdpb.ChangePeer)
 private:
  inline void set_has_change_type();
  inline void clear_has_change_type();
  inline void set_has_peer();
  inline void clear_has_peer();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::metapb::Peer* peer_;
  int change_type_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ChangePeer> ChangePeer_default_instance_;

// -------------------------------------------------------------------

class TransferLeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.TransferLeader) */ {
 public:
  TransferLeader();
  virtual ~TransferLeader();

  TransferLeader(const TransferLeader& from);

  inline TransferLeader& operator=(const TransferLeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransferLeader& default_instance();

  static const TransferLeader* internal_default_instance();

  void Swap(TransferLeader* other);

  // implements Message ----------------------------------------------

  inline TransferLeader* New() const { return New(NULL); }

  TransferLeader* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TransferLeader& from);
  void MergeFrom(const TransferLeader& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TransferLeader* other);
  void UnsafeMergeFrom(const TransferLeader& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .metapb.Peer peer = 1;
  bool has_peer() const;
  void clear_peer();
  static const int kPeerFieldNumber = 1;
  const ::metapb::Peer& peer() const;
  ::metapb::Peer* mutable_peer();
  ::metapb::Peer* release_peer();
  void set_allocated_peer(::metapb::Peer* peer);

  // @@protoc_insertion_point(class_scope:pdpb.TransferLeader)
 private:
  inline void set_has_peer();
  inline void clear_has_peer();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::metapb::Peer* peer_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TransferLeader> TransferLeader_default_instance_;

// -------------------------------------------------------------------

class RegionHeartbeatResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.RegionHeartbeatResponse) */ {
 public:
  RegionHeartbeatResponse();
  virtual ~RegionHeartbeatResponse();

  RegionHeartbeatResponse(const RegionHeartbeatResponse& from);

  inline RegionHeartbeatResponse& operator=(const RegionHeartbeatResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegionHeartbeatResponse& default_instance();

  static const RegionHeartbeatResponse* internal_default_instance();

  void Swap(RegionHeartbeatResponse* other);

  // implements Message ----------------------------------------------

  inline RegionHeartbeatResponse* New() const { return New(NULL); }

  RegionHeartbeatResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegionHeartbeatResponse& from);
  void MergeFrom(const RegionHeartbeatResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RegionHeartbeatResponse* other);
  void UnsafeMergeFrom(const RegionHeartbeatResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pdpb.ChangePeer change_peer = 1;
  bool has_change_peer() const;
  void clear_change_peer();
  static const int kChangePeerFieldNumber = 1;
  const ::pdpb::ChangePeer& change_peer() const;
  ::pdpb::ChangePeer* mutable_change_peer();
  ::pdpb::ChangePeer* release_change_peer();
  void set_allocated_change_peer(::pdpb::ChangePeer* change_peer);

  // optional .pdpb.TransferLeader transfer_leader = 2;
  bool has_transfer_leader() const;
  void clear_transfer_leader();
  static const int kTransferLeaderFieldNumber = 2;
  const ::pdpb::TransferLeader& transfer_leader() const;
  ::pdpb::TransferLeader* mutable_transfer_leader();
  ::pdpb::TransferLeader* release_transfer_leader();
  void set_allocated_transfer_leader(::pdpb::TransferLeader* transfer_leader);

  // @@protoc_insertion_point(class_scope:pdpb.RegionHeartbeatResponse)
 private:
  inline void set_has_change_peer();
  inline void clear_has_change_peer();
  inline void set_has_transfer_leader();
  inline void clear_has_transfer_leader();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pdpb::ChangePeer* change_peer_;
  ::pdpb::TransferLeader* transfer_leader_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RegionHeartbeatResponse> RegionHeartbeatResponse_default_instance_;

// -------------------------------------------------------------------

class PutClusterConfigRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.PutClusterConfigRequest) */ {
 public:
  PutClusterConfigRequest();
  virtual ~PutClusterConfigRequest();

  PutClusterConfigRequest(const PutClusterConfigRequest& from);

  inline PutClusterConfigRequest& operator=(const PutClusterConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutClusterConfigRequest& default_instance();

  static const PutClusterConfigRequest* internal_default_instance();

  void Swap(PutClusterConfigRequest* other);

  // implements Message ----------------------------------------------

  inline PutClusterConfigRequest* New() const { return New(NULL); }

  PutClusterConfigRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PutClusterConfigRequest& from);
  void MergeFrom(const PutClusterConfigRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PutClusterConfigRequest* other);
  void UnsafeMergeFrom(const PutClusterConfigRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .metapb.Cluster cluster = 1;
  bool has_cluster() const;
  void clear_cluster();
  static const int kClusterFieldNumber = 1;
  const ::metapb::Cluster& cluster() const;
  ::metapb::Cluster* mutable_cluster();
  ::metapb::Cluster* release_cluster();
  void set_allocated_cluster(::metapb::Cluster* cluster);

  // @@protoc_insertion_point(class_scope:pdpb.PutClusterConfigRequest)
 private:
  inline void set_has_cluster();
  inline void clear_has_cluster();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::metapb::Cluster* cluster_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PutClusterConfigRequest> PutClusterConfigRequest_default_instance_;

// -------------------------------------------------------------------

class PutClusterConfigResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.PutClusterConfigResponse) */ {
 public:
  PutClusterConfigResponse();
  virtual ~PutClusterConfigResponse();

  PutClusterConfigResponse(const PutClusterConfigResponse& from);

  inline PutClusterConfigResponse& operator=(const PutClusterConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PutClusterConfigResponse& default_instance();

  static const PutClusterConfigResponse* internal_default_instance();

  void Swap(PutClusterConfigResponse* other);

  // implements Message ----------------------------------------------

  inline PutClusterConfigResponse* New() const { return New(NULL); }

  PutClusterConfigResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PutClusterConfigResponse& from);
  void MergeFrom(const PutClusterConfigResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PutClusterConfigResponse* other);
  void UnsafeMergeFrom(const PutClusterConfigResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pdpb.PutClusterConfigResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PutClusterConfigResponse> PutClusterConfigResponse_default_instance_;

// -------------------------------------------------------------------

class AskSplitRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.AskSplitRequest) */ {
 public:
  AskSplitRequest();
  virtual ~AskSplitRequest();

  AskSplitRequest(const AskSplitRequest& from);

  inline AskSplitRequest& operator=(const AskSplitRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskSplitRequest& default_instance();

  static const AskSplitRequest* internal_default_instance();

  void Swap(AskSplitRequest* other);

  // implements Message ----------------------------------------------

  inline AskSplitRequest* New() const { return New(NULL); }

  AskSplitRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskSplitRequest& from);
  void MergeFrom(const AskSplitRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AskSplitRequest* other);
  void UnsafeMergeFrom(const AskSplitRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .metapb.Region region = 1;
  bool has_region() const;
  void clear_region();
  static const int kRegionFieldNumber = 1;
  const ::metapb::Region& region() const;
  ::metapb::Region* mutable_region();
  ::metapb::Region* release_region();
  void set_allocated_region(::metapb::Region* region);

  // @@protoc_insertion_point(class_scope:pdpb.AskSplitRequest)
 private:
  inline void set_has_region();
  inline void clear_has_region();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::metapb::Region* region_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AskSplitRequest> AskSplitRequest_default_instance_;

// -------------------------------------------------------------------

class AskSplitResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.AskSplitResponse) */ {
 public:
  AskSplitResponse();
  virtual ~AskSplitResponse();

  AskSplitResponse(const AskSplitResponse& from);

  inline AskSplitResponse& operator=(const AskSplitResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AskSplitResponse& default_instance();

  static const AskSplitResponse* internal_default_instance();

  void Swap(AskSplitResponse* other);

  // implements Message ----------------------------------------------

  inline AskSplitResponse* New() const { return New(NULL); }

  AskSplitResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AskSplitResponse& from);
  void MergeFrom(const AskSplitResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AskSplitResponse* other);
  void UnsafeMergeFrom(const AskSplitResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 new_region_id = 1;
  bool has_new_region_id() const;
  void clear_new_region_id();
  static const int kNewRegionIdFieldNumber = 1;
  ::google::protobuf::uint64 new_region_id() const;
  void set_new_region_id(::google::protobuf::uint64 value);

  // repeated uint64 new_peer_ids = 2;
  int new_peer_ids_size() const;
  void clear_new_peer_ids();
  static const int kNewPeerIdsFieldNumber = 2;
  ::google::protobuf::uint64 new_peer_ids(int index) const;
  void set_new_peer_ids(int index, ::google::protobuf::uint64 value);
  void add_new_peer_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      new_peer_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_new_peer_ids();

  // @@protoc_insertion_point(class_scope:pdpb.AskSplitResponse)
 private:
  inline void set_has_new_region_id();
  inline void clear_has_new_region_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > new_peer_ids_;
  ::google::protobuf::uint64 new_region_id_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AskSplitResponse> AskSplitResponse_default_instance_;

// -------------------------------------------------------------------

class StoreStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.StoreStats) */ {
 public:
  StoreStats();
  virtual ~StoreStats();

  StoreStats(const StoreStats& from);

  inline StoreStats& operator=(const StoreStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StoreStats& default_instance();

  static const StoreStats* internal_default_instance();

  void Swap(StoreStats* other);

  // implements Message ----------------------------------------------

  inline StoreStats* New() const { return New(NULL); }

  StoreStats* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoreStats& from);
  void MergeFrom(const StoreStats& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StoreStats* other);
  void UnsafeMergeFrom(const StoreStats& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 store_id = 1;
  bool has_store_id() const;
  void clear_store_id();
  static const int kStoreIdFieldNumber = 1;
  ::google::protobuf::uint64 store_id() const;
  void set_store_id(::google::protobuf::uint64 value);

  // optional uint64 capacity = 2;
  bool has_capacity() const;
  void clear_capacity();
  static const int kCapacityFieldNumber = 2;
  ::google::protobuf::uint64 capacity() const;
  void set_capacity(::google::protobuf::uint64 value);

  // optional uint64 available = 3;
  bool has_available() const;
  void clear_available();
  static const int kAvailableFieldNumber = 3;
  ::google::protobuf::uint64 available() const;
  void set_available(::google::protobuf::uint64 value);

  // optional uint32 region_count = 4;
  bool has_region_count() const;
  void clear_region_count();
  static const int kRegionCountFieldNumber = 4;
  ::google::protobuf::uint32 region_count() const;
  void set_region_count(::google::protobuf::uint32 value);

  // optional uint32 sending_snap_count = 5;
  bool has_sending_snap_count() const;
  void clear_sending_snap_count();
  static const int kSendingSnapCountFieldNumber = 5;
  ::google::protobuf::uint32 sending_snap_count() const;
  void set_sending_snap_count(::google::protobuf::uint32 value);

  // optional uint32 receiving_snap_count = 6;
  bool has_receiving_snap_count() const;
  void clear_receiving_snap_count();
  static const int kReceivingSnapCountFieldNumber = 6;
  ::google::protobuf::uint32 receiving_snap_count() const;
  void set_receiving_snap_count(::google::protobuf::uint32 value);

  // optional uint32 start_time = 7;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 7;
  ::google::protobuf::uint32 start_time() const;
  void set_start_time(::google::protobuf::uint32 value);

  // optional uint32 applying_snap_count = 8;
  bool has_applying_snap_count() const;
  void clear_applying_snap_count();
  static const int kApplyingSnapCountFieldNumber = 8;
  ::google::protobuf::uint32 applying_snap_count() const;
  void set_applying_snap_count(::google::protobuf::uint32 value);

  // optional bool is_busy = 9;
  bool has_is_busy() const;
  void clear_is_busy();
  static const int kIsBusyFieldNumber = 9;
  bool is_busy() const;
  void set_is_busy(bool value);

  // @@protoc_insertion_point(class_scope:pdpb.StoreStats)
 private:
  inline void set_has_store_id();
  inline void clear_has_store_id();
  inline void set_has_capacity();
  inline void clear_has_capacity();
  inline void set_has_available();
  inline void clear_has_available();
  inline void set_has_region_count();
  inline void clear_has_region_count();
  inline void set_has_sending_snap_count();
  inline void clear_has_sending_snap_count();
  inline void set_has_receiving_snap_count();
  inline void clear_has_receiving_snap_count();
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_applying_snap_count();
  inline void clear_has_applying_snap_count();
  inline void set_has_is_busy();
  inline void clear_has_is_busy();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 store_id_;
  ::google::protobuf::uint64 capacity_;
  ::google::protobuf::uint64 available_;
  ::google::protobuf::uint32 region_count_;
  ::google::protobuf::uint32 sending_snap_count_;
  ::google::protobuf::uint32 receiving_snap_count_;
  ::google::protobuf::uint32 start_time_;
  ::google::protobuf::uint32 applying_snap_count_;
  bool is_busy_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<StoreStats> StoreStats_default_instance_;

// -------------------------------------------------------------------

class StoreHeartbeatRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.StoreHeartbeatRequest) */ {
 public:
  StoreHeartbeatRequest();
  virtual ~StoreHeartbeatRequest();

  StoreHeartbeatRequest(const StoreHeartbeatRequest& from);

  inline StoreHeartbeatRequest& operator=(const StoreHeartbeatRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StoreHeartbeatRequest& default_instance();

  static const StoreHeartbeatRequest* internal_default_instance();

  void Swap(StoreHeartbeatRequest* other);

  // implements Message ----------------------------------------------

  inline StoreHeartbeatRequest* New() const { return New(NULL); }

  StoreHeartbeatRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoreHeartbeatRequest& from);
  void MergeFrom(const StoreHeartbeatRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StoreHeartbeatRequest* other);
  void UnsafeMergeFrom(const StoreHeartbeatRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pdpb.StoreStats stats = 1;
  bool has_stats() const;
  void clear_stats();
  static const int kStatsFieldNumber = 1;
  const ::pdpb::StoreStats& stats() const;
  ::pdpb::StoreStats* mutable_stats();
  ::pdpb::StoreStats* release_stats();
  void set_allocated_stats(::pdpb::StoreStats* stats);

  // @@protoc_insertion_point(class_scope:pdpb.StoreHeartbeatRequest)
 private:
  inline void set_has_stats();
  inline void clear_has_stats();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pdpb::StoreStats* stats_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<StoreHeartbeatRequest> StoreHeartbeatRequest_default_instance_;

// -------------------------------------------------------------------

class StoreHeartbeatResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.StoreHeartbeatResponse) */ {
 public:
  StoreHeartbeatResponse();
  virtual ~StoreHeartbeatResponse();

  StoreHeartbeatResponse(const StoreHeartbeatResponse& from);

  inline StoreHeartbeatResponse& operator=(const StoreHeartbeatResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StoreHeartbeatResponse& default_instance();

  static const StoreHeartbeatResponse* internal_default_instance();

  void Swap(StoreHeartbeatResponse* other);

  // implements Message ----------------------------------------------

  inline StoreHeartbeatResponse* New() const { return New(NULL); }

  StoreHeartbeatResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoreHeartbeatResponse& from);
  void MergeFrom(const StoreHeartbeatResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StoreHeartbeatResponse* other);
  void UnsafeMergeFrom(const StoreHeartbeatResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pdpb.StoreHeartbeatResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<StoreHeartbeatResponse> StoreHeartbeatResponse_default_instance_;

// -------------------------------------------------------------------

class ReportSplitRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.ReportSplitRequest) */ {
 public:
  ReportSplitRequest();
  virtual ~ReportSplitRequest();

  ReportSplitRequest(const ReportSplitRequest& from);

  inline ReportSplitRequest& operator=(const ReportSplitRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportSplitRequest& default_instance();

  static const ReportSplitRequest* internal_default_instance();

  void Swap(ReportSplitRequest* other);

  // implements Message ----------------------------------------------

  inline ReportSplitRequest* New() const { return New(NULL); }

  ReportSplitRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReportSplitRequest& from);
  void MergeFrom(const ReportSplitRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReportSplitRequest* other);
  void UnsafeMergeFrom(const ReportSplitRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .metapb.Region left = 1;
  bool has_left() const;
  void clear_left();
  static const int kLeftFieldNumber = 1;
  const ::metapb::Region& left() const;
  ::metapb::Region* mutable_left();
  ::metapb::Region* release_left();
  void set_allocated_left(::metapb::Region* left);

  // optional .metapb.Region right = 2;
  bool has_right() const;
  void clear_right();
  static const int kRightFieldNumber = 2;
  const ::metapb::Region& right() const;
  ::metapb::Region* mutable_right();
  ::metapb::Region* release_right();
  void set_allocated_right(::metapb::Region* right);

  // @@protoc_insertion_point(class_scope:pdpb.ReportSplitRequest)
 private:
  inline void set_has_left();
  inline void clear_has_left();
  inline void set_has_right();
  inline void clear_has_right();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::metapb::Region* left_;
  ::metapb::Region* right_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReportSplitRequest> ReportSplitRequest_default_instance_;

// -------------------------------------------------------------------

class ReportSplitResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.ReportSplitResponse) */ {
 public:
  ReportSplitResponse();
  virtual ~ReportSplitResponse();

  ReportSplitResponse(const ReportSplitResponse& from);

  inline ReportSplitResponse& operator=(const ReportSplitResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportSplitResponse& default_instance();

  static const ReportSplitResponse* internal_default_instance();

  void Swap(ReportSplitResponse* other);

  // implements Message ----------------------------------------------

  inline ReportSplitResponse* New() const { return New(NULL); }

  ReportSplitResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReportSplitResponse& from);
  void MergeFrom(const ReportSplitResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReportSplitResponse* other);
  void UnsafeMergeFrom(const ReportSplitResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pdpb.ReportSplitResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReportSplitResponse> ReportSplitResponse_default_instance_;

// -------------------------------------------------------------------

class RequestHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.RequestHeader) */ {
 public:
  RequestHeader();
  virtual ~RequestHeader();

  RequestHeader(const RequestHeader& from);

  inline RequestHeader& operator=(const RequestHeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestHeader& default_instance();

  static const RequestHeader* internal_default_instance();

  void Swap(RequestHeader* other);

  // implements Message ----------------------------------------------

  inline RequestHeader* New() const { return New(NULL); }

  RequestHeader* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestHeader& from);
  void MergeFrom(const RequestHeader& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestHeader* other);
  void UnsafeMergeFrom(const RequestHeader& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes uuid = 1;
  bool has_uuid() const;
  void clear_uuid();
  static const int kUuidFieldNumber = 1;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  void set_uuid(const char* value);
  void set_uuid(const void* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // optional uint64 cluster_id = 2;
  bool has_cluster_id() const;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  ::google::protobuf::uint64 cluster_id() const;
  void set_cluster_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pdpb.RequestHeader)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_cluster_id();
  inline void clear_has_cluster_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::uint64 cluster_id_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RequestHeader> RequestHeader_default_instance_;

// -------------------------------------------------------------------

class ResponseHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.ResponseHeader) */ {
 public:
  ResponseHeader();
  virtual ~ResponseHeader();

  ResponseHeader(const ResponseHeader& from);

  inline ResponseHeader& operator=(const ResponseHeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseHeader& default_instance();

  static const ResponseHeader* internal_default_instance();

  void Swap(ResponseHeader* other);

  // implements Message ----------------------------------------------

  inline ResponseHeader* New() const { return New(NULL); }

  ResponseHeader* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseHeader& from);
  void MergeFrom(const ResponseHeader& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResponseHeader* other);
  void UnsafeMergeFrom(const ResponseHeader& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes uuid = 1;
  bool has_uuid() const;
  void clear_uuid();
  static const int kUuidFieldNumber = 1;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  void set_uuid(const char* value);
  void set_uuid(const void* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // optional uint64 cluster_id = 2;
  bool has_cluster_id() const;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  ::google::protobuf::uint64 cluster_id() const;
  void set_cluster_id(::google::protobuf::uint64 value);

  // optional .pdpb.Error error = 3;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  const ::pdpb::Error& error() const;
  ::pdpb::Error* mutable_error();
  ::pdpb::Error* release_error();
  void set_allocated_error(::pdpb::Error* error);

  // @@protoc_insertion_point(class_scope:pdpb.ResponseHeader)
 private:
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_cluster_id();
  inline void clear_has_cluster_id();
  inline void set_has_error();
  inline void clear_has_error();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::pdpb::Error* error_;
  ::google::protobuf::uint64 cluster_id_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ResponseHeader> ResponseHeader_default_instance_;

// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static const Request* internal_default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  inline Request* New() const { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request* other);
  void UnsafeMergeFrom(const Request& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pdpb.RequestHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::pdpb::RequestHeader& header() const;
  ::pdpb::RequestHeader* mutable_header();
  ::pdpb::RequestHeader* release_header();
  void set_allocated_header(::pdpb::RequestHeader* header);

  // optional .pdpb.CommandType cmd_type = 2;
  bool has_cmd_type() const;
  void clear_cmd_type();
  static const int kCmdTypeFieldNumber = 2;
  ::pdpb::CommandType cmd_type() const;
  void set_cmd_type(::pdpb::CommandType value);

  // optional .pdpb.TsoRequest tso = 3;
  bool has_tso() const;
  void clear_tso();
  static const int kTsoFieldNumber = 3;
  const ::pdpb::TsoRequest& tso() const;
  ::pdpb::TsoRequest* mutable_tso();
  ::pdpb::TsoRequest* release_tso();
  void set_allocated_tso(::pdpb::TsoRequest* tso);

  // optional .pdpb.BootstrapRequest bootstrap = 4;
  bool has_bootstrap() const;
  void clear_bootstrap();
  static const int kBootstrapFieldNumber = 4;
  const ::pdpb::BootstrapRequest& bootstrap() const;
  ::pdpb::BootstrapRequest* mutable_bootstrap();
  ::pdpb::BootstrapRequest* release_bootstrap();
  void set_allocated_bootstrap(::pdpb::BootstrapRequest* bootstrap);

  // optional .pdpb.IsBootstrappedRequest is_bootstrapped = 5;
  bool has_is_bootstrapped() const;
  void clear_is_bootstrapped();
  static const int kIsBootstrappedFieldNumber = 5;
  const ::pdpb::IsBootstrappedRequest& is_bootstrapped() const;
  ::pdpb::IsBootstrappedRequest* mutable_is_bootstrapped();
  ::pdpb::IsBootstrappedRequest* release_is_bootstrapped();
  void set_allocated_is_bootstrapped(::pdpb::IsBootstrappedRequest* is_bootstrapped);

  // optional .pdpb.AllocIdRequest alloc_id = 6;
  bool has_alloc_id() const;
  void clear_alloc_id();
  static const int kAllocIdFieldNumber = 6;
  const ::pdpb::AllocIdRequest& alloc_id() const;
  ::pdpb::AllocIdRequest* mutable_alloc_id();
  ::pdpb::AllocIdRequest* release_alloc_id();
  void set_allocated_alloc_id(::pdpb::AllocIdRequest* alloc_id);

  // optional .pdpb.GetStoreRequest get_store = 7;
  bool has_get_store() const;
  void clear_get_store();
  static const int kGetStoreFieldNumber = 7;
  const ::pdpb::GetStoreRequest& get_store() const;
  ::pdpb::GetStoreRequest* mutable_get_store();
  ::pdpb::GetStoreRequest* release_get_store();
  void set_allocated_get_store(::pdpb::GetStoreRequest* get_store);

  // optional .pdpb.PutStoreRequest put_store = 8;
  bool has_put_store() const;
  void clear_put_store();
  static const int kPutStoreFieldNumber = 8;
  const ::pdpb::PutStoreRequest& put_store() const;
  ::pdpb::PutStoreRequest* mutable_put_store();
  ::pdpb::PutStoreRequest* release_put_store();
  void set_allocated_put_store(::pdpb::PutStoreRequest* put_store);

  // optional .pdpb.AskSplitRequest ask_split = 9;
  bool has_ask_split() const;
  void clear_ask_split();
  static const int kAskSplitFieldNumber = 9;
  const ::pdpb::AskSplitRequest& ask_split() const;
  ::pdpb::AskSplitRequest* mutable_ask_split();
  ::pdpb::AskSplitRequest* release_ask_split();
  void set_allocated_ask_split(::pdpb::AskSplitRequest* ask_split);

  // optional .pdpb.GetRegionRequest get_region = 10;
  bool has_get_region() const;
  void clear_get_region();
  static const int kGetRegionFieldNumber = 10;
  const ::pdpb::GetRegionRequest& get_region() const;
  ::pdpb::GetRegionRequest* mutable_get_region();
  ::pdpb::GetRegionRequest* release_get_region();
  void set_allocated_get_region(::pdpb::GetRegionRequest* get_region);

  // optional .pdpb.RegionHeartbeatRequest region_heartbeat = 11;
  bool has_region_heartbeat() const;
  void clear_region_heartbeat();
  static const int kRegionHeartbeatFieldNumber = 11;
  const ::pdpb::RegionHeartbeatRequest& region_heartbeat() const;
  ::pdpb::RegionHeartbeatRequest* mutable_region_heartbeat();
  ::pdpb::RegionHeartbeatRequest* release_region_heartbeat();
  void set_allocated_region_heartbeat(::pdpb::RegionHeartbeatRequest* region_heartbeat);

  // optional .pdpb.GetClusterConfigRequest get_cluster_config = 12;
  bool has_get_cluster_config() const;
  void clear_get_cluster_config();
  static const int kGetClusterConfigFieldNumber = 12;
  const ::pdpb::GetClusterConfigRequest& get_cluster_config() const;
  ::pdpb::GetClusterConfigRequest* mutable_get_cluster_config();
  ::pdpb::GetClusterConfigRequest* release_get_cluster_config();
  void set_allocated_get_cluster_config(::pdpb::GetClusterConfigRequest* get_cluster_config);

  // optional .pdpb.PutClusterConfigRequest put_cluster_config = 13;
  bool has_put_cluster_config() const;
  void clear_put_cluster_config();
  static const int kPutClusterConfigFieldNumber = 13;
  const ::pdpb::PutClusterConfigRequest& put_cluster_config() const;
  ::pdpb::PutClusterConfigRequest* mutable_put_cluster_config();
  ::pdpb::PutClusterConfigRequest* release_put_cluster_config();
  void set_allocated_put_cluster_config(::pdpb::PutClusterConfigRequest* put_cluster_config);

  // optional .pdpb.StoreHeartbeatRequest store_heartbeat = 14;
  bool has_store_heartbeat() const;
  void clear_store_heartbeat();
  static const int kStoreHeartbeatFieldNumber = 14;
  const ::pdpb::StoreHeartbeatRequest& store_heartbeat() const;
  ::pdpb::StoreHeartbeatRequest* mutable_store_heartbeat();
  ::pdpb::StoreHeartbeatRequest* release_store_heartbeat();
  void set_allocated_store_heartbeat(::pdpb::StoreHeartbeatRequest* store_heartbeat);

  // optional .pdpb.ReportSplitRequest report_split = 15;
  bool has_report_split() const;
  void clear_report_split();
  static const int kReportSplitFieldNumber = 15;
  const ::pdpb::ReportSplitRequest& report_split() const;
  ::pdpb::ReportSplitRequest* mutable_report_split();
  ::pdpb::ReportSplitRequest* release_report_split();
  void set_allocated_report_split(::pdpb::ReportSplitRequest* report_split);

  // optional .pdpb.GetRegionByIDRequest get_region_by_id = 16;
  bool has_get_region_by_id() const;
  void clear_get_region_by_id();
  static const int kGetRegionByIdFieldNumber = 16;
  const ::pdpb::GetRegionByIDRequest& get_region_by_id() const;
  ::pdpb::GetRegionByIDRequest* mutable_get_region_by_id();
  ::pdpb::GetRegionByIDRequest* release_get_region_by_id();
  void set_allocated_get_region_by_id(::pdpb::GetRegionByIDRequest* get_region_by_id);

  // optional .pdpb.GetPDMembersRequest get_pd_members = 17;
  bool has_get_pd_members() const;
  void clear_get_pd_members();
  static const int kGetPdMembersFieldNumber = 17;
  const ::pdpb::GetPDMembersRequest& get_pd_members() const;
  ::pdpb::GetPDMembersRequest* mutable_get_pd_members();
  ::pdpb::GetPDMembersRequest* release_get_pd_members();
  void set_allocated_get_pd_members(::pdpb::GetPDMembersRequest* get_pd_members);

  // @@protoc_insertion_point(class_scope:pdpb.Request)
 private:
  inline void set_has_header();
  inline void clear_has_header();
  inline void set_has_cmd_type();
  inline void clear_has_cmd_type();
  inline void set_has_tso();
  inline void clear_has_tso();
  inline void set_has_bootstrap();
  inline void clear_has_bootstrap();
  inline void set_has_is_bootstrapped();
  inline void clear_has_is_bootstrapped();
  inline void set_has_alloc_id();
  inline void clear_has_alloc_id();
  inline void set_has_get_store();
  inline void clear_has_get_store();
  inline void set_has_put_store();
  inline void clear_has_put_store();
  inline void set_has_ask_split();
  inline void clear_has_ask_split();
  inline void set_has_get_region();
  inline void clear_has_get_region();
  inline void set_has_region_heartbeat();
  inline void clear_has_region_heartbeat();
  inline void set_has_get_cluster_config();
  inline void clear_has_get_cluster_config();
  inline void set_has_put_cluster_config();
  inline void clear_has_put_cluster_config();
  inline void set_has_store_heartbeat();
  inline void clear_has_store_heartbeat();
  inline void set_has_report_split();
  inline void clear_has_report_split();
  inline void set_has_get_region_by_id();
  inline void clear_has_get_region_by_id();
  inline void set_has_get_pd_members();
  inline void clear_has_get_pd_members();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pdpb::RequestHeader* header_;
  ::pdpb::TsoRequest* tso_;
  ::pdpb::BootstrapRequest* bootstrap_;
  ::pdpb::IsBootstrappedRequest* is_bootstrapped_;
  ::pdpb::AllocIdRequest* alloc_id_;
  ::pdpb::GetStoreRequest* get_store_;
  ::pdpb::PutStoreRequest* put_store_;
  ::pdpb::AskSplitRequest* ask_split_;
  ::pdpb::GetRegionRequest* get_region_;
  ::pdpb::RegionHeartbeatRequest* region_heartbeat_;
  ::pdpb::GetClusterConfigRequest* get_cluster_config_;
  ::pdpb::PutClusterConfigRequest* put_cluster_config_;
  ::pdpb::StoreHeartbeatRequest* store_heartbeat_;
  ::pdpb::ReportSplitRequest* report_split_;
  ::pdpb::GetRegionByIDRequest* get_region_by_id_;
  ::pdpb::GetPDMembersRequest* get_pd_members_;
  int cmd_type_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Request> Request_default_instance_;

// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static const Response* internal_default_instance();

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  inline Response* New() const { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response* other);
  void UnsafeMergeFrom(const Response& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .pdpb.ResponseHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::pdpb::ResponseHeader& header() const;
  ::pdpb::ResponseHeader* mutable_header();
  ::pdpb::ResponseHeader* release_header();
  void set_allocated_header(::pdpb::ResponseHeader* header);

  // optional .pdpb.CommandType cmd_type = 2;
  bool has_cmd_type() const;
  void clear_cmd_type();
  static const int kCmdTypeFieldNumber = 2;
  ::pdpb::CommandType cmd_type() const;
  void set_cmd_type(::pdpb::CommandType value);

  // optional .pdpb.TsoResponse tso = 3;
  bool has_tso() const;
  void clear_tso();
  static const int kTsoFieldNumber = 3;
  const ::pdpb::TsoResponse& tso() const;
  ::pdpb::TsoResponse* mutable_tso();
  ::pdpb::TsoResponse* release_tso();
  void set_allocated_tso(::pdpb::TsoResponse* tso);

  // optional .pdpb.BootstrapResponse bootstrap = 4;
  bool has_bootstrap() const;
  void clear_bootstrap();
  static const int kBootstrapFieldNumber = 4;
  const ::pdpb::BootstrapResponse& bootstrap() const;
  ::pdpb::BootstrapResponse* mutable_bootstrap();
  ::pdpb::BootstrapResponse* release_bootstrap();
  void set_allocated_bootstrap(::pdpb::BootstrapResponse* bootstrap);

  // optional .pdpb.IsBootstrappedResponse is_bootstrapped = 5;
  bool has_is_bootstrapped() const;
  void clear_is_bootstrapped();
  static const int kIsBootstrappedFieldNumber = 5;
  const ::pdpb::IsBootstrappedResponse& is_bootstrapped() const;
  ::pdpb::IsBootstrappedResponse* mutable_is_bootstrapped();
  ::pdpb::IsBootstrappedResponse* release_is_bootstrapped();
  void set_allocated_is_bootstrapped(::pdpb::IsBootstrappedResponse* is_bootstrapped);

  // optional .pdpb.AllocIdResponse alloc_id = 6;
  bool has_alloc_id() const;
  void clear_alloc_id();
  static const int kAllocIdFieldNumber = 6;
  const ::pdpb::AllocIdResponse& alloc_id() const;
  ::pdpb::AllocIdResponse* mutable_alloc_id();
  ::pdpb::AllocIdResponse* release_alloc_id();
  void set_allocated_alloc_id(::pdpb::AllocIdResponse* alloc_id);

  // optional .pdpb.GetStoreResponse get_store = 7;
  bool has_get_store() const;
  void clear_get_store();
  static const int kGetStoreFieldNumber = 7;
  const ::pdpb::GetStoreResponse& get_store() const;
  ::pdpb::GetStoreResponse* mutable_get_store();
  ::pdpb::GetStoreResponse* release_get_store();
  void set_allocated_get_store(::pdpb::GetStoreResponse* get_store);

  // optional .pdpb.PutStoreResponse put_store = 8;
  bool has_put_store() const;
  void clear_put_store();
  static const int kPutStoreFieldNumber = 8;
  const ::pdpb::PutStoreResponse& put_store() const;
  ::pdpb::PutStoreResponse* mutable_put_store();
  ::pdpb::PutStoreResponse* release_put_store();
  void set_allocated_put_store(::pdpb::PutStoreResponse* put_store);

  // optional .pdpb.AskSplitResponse ask_split = 9;
  bool has_ask_split() const;
  void clear_ask_split();
  static const int kAskSplitFieldNumber = 9;
  const ::pdpb::AskSplitResponse& ask_split() const;
  ::pdpb::AskSplitResponse* mutable_ask_split();
  ::pdpb::AskSplitResponse* release_ask_split();
  void set_allocated_ask_split(::pdpb::AskSplitResponse* ask_split);

  // optional .pdpb.GetRegionResponse get_region = 10;
  bool has_get_region() const;
  void clear_get_region();
  static const int kGetRegionFieldNumber = 10;
  const ::pdpb::GetRegionResponse& get_region() const;
  ::pdpb::GetRegionResponse* mutable_get_region();
  ::pdpb::GetRegionResponse* release_get_region();
  void set_allocated_get_region(::pdpb::GetRegionResponse* get_region);

  // optional .pdpb.RegionHeartbeatResponse region_heartbeat = 11;
  bool has_region_heartbeat() const;
  void clear_region_heartbeat();
  static const int kRegionHeartbeatFieldNumber = 11;
  const ::pdpb::RegionHeartbeatResponse& region_heartbeat() const;
  ::pdpb::RegionHeartbeatResponse* mutable_region_heartbeat();
  ::pdpb::RegionHeartbeatResponse* release_region_heartbeat();
  void set_allocated_region_heartbeat(::pdpb::RegionHeartbeatResponse* region_heartbeat);

  // optional .pdpb.GetClusterConfigResponse get_cluster_config = 12;
  bool has_get_cluster_config() const;
  void clear_get_cluster_config();
  static const int kGetClusterConfigFieldNumber = 12;
  const ::pdpb::GetClusterConfigResponse& get_cluster_config() const;
  ::pdpb::GetClusterConfigResponse* mutable_get_cluster_config();
  ::pdpb::GetClusterConfigResponse* release_get_cluster_config();
  void set_allocated_get_cluster_config(::pdpb::GetClusterConfigResponse* get_cluster_config);

  // optional .pdpb.PutClusterConfigResponse put_cluster_config = 13;
  bool has_put_cluster_config() const;
  void clear_put_cluster_config();
  static const int kPutClusterConfigFieldNumber = 13;
  const ::pdpb::PutClusterConfigResponse& put_cluster_config() const;
  ::pdpb::PutClusterConfigResponse* mutable_put_cluster_config();
  ::pdpb::PutClusterConfigResponse* release_put_cluster_config();
  void set_allocated_put_cluster_config(::pdpb::PutClusterConfigResponse* put_cluster_config);

  // optional .pdpb.StoreHeartbeatResponse store_heartbeat = 14;
  bool has_store_heartbeat() const;
  void clear_store_heartbeat();
  static const int kStoreHeartbeatFieldNumber = 14;
  const ::pdpb::StoreHeartbeatResponse& store_heartbeat() const;
  ::pdpb::StoreHeartbeatResponse* mutable_store_heartbeat();
  ::pdpb::StoreHeartbeatResponse* release_store_heartbeat();
  void set_allocated_store_heartbeat(::pdpb::StoreHeartbeatResponse* store_heartbeat);

  // optional .pdpb.ReportSplitResponse report_split = 15;
  bool has_report_split() const;
  void clear_report_split();
  static const int kReportSplitFieldNumber = 15;
  const ::pdpb::ReportSplitResponse& report_split() const;
  ::pdpb::ReportSplitResponse* mutable_report_split();
  ::pdpb::ReportSplitResponse* release_report_split();
  void set_allocated_report_split(::pdpb::ReportSplitResponse* report_split);

  // optional .pdpb.GetRegionResponse get_region_by_id = 16;
  bool has_get_region_by_id() const;
  void clear_get_region_by_id();
  static const int kGetRegionByIdFieldNumber = 16;
  const ::pdpb::GetRegionResponse& get_region_by_id() const;
  ::pdpb::GetRegionResponse* mutable_get_region_by_id();
  ::pdpb::GetRegionResponse* release_get_region_by_id();
  void set_allocated_get_region_by_id(::pdpb::GetRegionResponse* get_region_by_id);

  // optional .pdpb.GetPDMembersResponse get_pd_members = 17;
  bool has_get_pd_members() const;
  void clear_get_pd_members();
  static const int kGetPdMembersFieldNumber = 17;
  const ::pdpb::GetPDMembersResponse& get_pd_members() const;
  ::pdpb::GetPDMembersResponse* mutable_get_pd_members();
  ::pdpb::GetPDMembersResponse* release_get_pd_members();
  void set_allocated_get_pd_members(::pdpb::GetPDMembersResponse* get_pd_members);

  // @@protoc_insertion_point(class_scope:pdpb.Response)
 private:
  inline void set_has_header();
  inline void clear_has_header();
  inline void set_has_cmd_type();
  inline void clear_has_cmd_type();
  inline void set_has_tso();
  inline void clear_has_tso();
  inline void set_has_bootstrap();
  inline void clear_has_bootstrap();
  inline void set_has_is_bootstrapped();
  inline void clear_has_is_bootstrapped();
  inline void set_has_alloc_id();
  inline void clear_has_alloc_id();
  inline void set_has_get_store();
  inline void clear_has_get_store();
  inline void set_has_put_store();
  inline void clear_has_put_store();
  inline void set_has_ask_split();
  inline void clear_has_ask_split();
  inline void set_has_get_region();
  inline void clear_has_get_region();
  inline void set_has_region_heartbeat();
  inline void clear_has_region_heartbeat();
  inline void set_has_get_cluster_config();
  inline void clear_has_get_cluster_config();
  inline void set_has_put_cluster_config();
  inline void clear_has_put_cluster_config();
  inline void set_has_store_heartbeat();
  inline void clear_has_store_heartbeat();
  inline void set_has_report_split();
  inline void clear_has_report_split();
  inline void set_has_get_region_by_id();
  inline void clear_has_get_region_by_id();
  inline void set_has_get_pd_members();
  inline void clear_has_get_pd_members();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pdpb::ResponseHeader* header_;
  ::pdpb::TsoResponse* tso_;
  ::pdpb::BootstrapResponse* bootstrap_;
  ::pdpb::IsBootstrappedResponse* is_bootstrapped_;
  ::pdpb::AllocIdResponse* alloc_id_;
  ::pdpb::GetStoreResponse* get_store_;
  ::pdpb::PutStoreResponse* put_store_;
  ::pdpb::AskSplitResponse* ask_split_;
  ::pdpb::GetRegionResponse* get_region_;
  ::pdpb::RegionHeartbeatResponse* region_heartbeat_;
  ::pdpb::GetClusterConfigResponse* get_cluster_config_;
  ::pdpb::PutClusterConfigResponse* put_cluster_config_;
  ::pdpb::StoreHeartbeatResponse* store_heartbeat_;
  ::pdpb::ReportSplitResponse* report_split_;
  ::pdpb::GetRegionResponse* get_region_by_id_;
  ::pdpb::GetPDMembersResponse* get_pd_members_;
  int cmd_type_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Response> Response_default_instance_;

// -------------------------------------------------------------------

class BootstrappedError : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.BootstrappedError) */ {
 public:
  BootstrappedError();
  virtual ~BootstrappedError();

  BootstrappedError(const BootstrappedError& from);

  inline BootstrappedError& operator=(const BootstrappedError& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BootstrappedError& default_instance();

  static const BootstrappedError* internal_default_instance();

  void Swap(BootstrappedError* other);

  // implements Message ----------------------------------------------

  inline BootstrappedError* New() const { return New(NULL); }

  BootstrappedError* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BootstrappedError& from);
  void MergeFrom(const BootstrappedError& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BootstrappedError* other);
  void UnsafeMergeFrom(const BootstrappedError& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pdpb.BootstrappedError)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BootstrappedError> BootstrappedError_default_instance_;

// -------------------------------------------------------------------

class StoreIsTombstoneError : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.StoreIsTombstoneError) */ {
 public:
  StoreIsTombstoneError();
  virtual ~StoreIsTombstoneError();

  StoreIsTombstoneError(const StoreIsTombstoneError& from);

  inline StoreIsTombstoneError& operator=(const StoreIsTombstoneError& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StoreIsTombstoneError& default_instance();

  static const StoreIsTombstoneError* internal_default_instance();

  void Swap(StoreIsTombstoneError* other);

  // implements Message ----------------------------------------------

  inline StoreIsTombstoneError* New() const { return New(NULL); }

  StoreIsTombstoneError* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StoreIsTombstoneError& from);
  void MergeFrom(const StoreIsTombstoneError& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StoreIsTombstoneError* other);
  void UnsafeMergeFrom(const StoreIsTombstoneError& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pdpb.StoreIsTombstoneError)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<StoreIsTombstoneError> StoreIsTombstoneError_default_instance_;

// -------------------------------------------------------------------

class Error : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pdpb.Error) */ {
 public:
  Error();
  virtual ~Error();

  Error(const Error& from);

  inline Error& operator=(const Error& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Error& default_instance();

  static const Error* internal_default_instance();

  void Swap(Error* other);

  // implements Message ----------------------------------------------

  inline Error* New() const { return New(NULL); }

  Error* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Error& from);
  void MergeFrom(const Error& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Error* other);
  void UnsafeMergeFrom(const Error& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 1;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional .pdpb.BootstrappedError bootstrapped = 2;
  bool has_bootstrapped() const;
  void clear_bootstrapped();
  static const int kBootstrappedFieldNumber = 2;
  const ::pdpb::BootstrappedError& bootstrapped() const;
  ::pdpb::BootstrappedError* mutable_bootstrapped();
  ::pdpb::BootstrappedError* release_bootstrapped();
  void set_allocated_bootstrapped(::pdpb::BootstrappedError* bootstrapped);

  // optional .pdpb.StoreIsTombstoneError is_tombstone = 3;
  bool has_is_tombstone() const;
  void clear_is_tombstone();
  static const int kIsTombstoneFieldNumber = 3;
  const ::pdpb::StoreIsTombstoneError& is_tombstone() const;
  ::pdpb::StoreIsTombstoneError* mutable_is_tombstone();
  ::pdpb::StoreIsTombstoneError* release_is_tombstone();
  void set_allocated_is_tombstone(::pdpb::StoreIsTombstoneError* is_tombstone);

  // @@protoc_insertion_point(class_scope:pdpb.Error)
 private:
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_bootstrapped();
  inline void clear_has_bootstrapped();
  inline void set_has_is_tombstone();
  inline void clear_has_is_tombstone();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::pdpb::BootstrappedError* bootstrapped_;
  ::pdpb::StoreIsTombstoneError* is_tombstone_;
  friend void  protobuf_InitDefaults_pdpb_2eproto_impl();
  friend void  protobuf_AddDesc_pdpb_2eproto_impl();
  friend void protobuf_AssignDesc_pdpb_2eproto();
  friend void protobuf_ShutdownFile_pdpb_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Error> Error_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Leader

// optional string addr = 1;
inline bool Leader::has_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Leader::set_has_addr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Leader::clear_has_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Leader::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_addr();
}
inline const ::std::string& Leader::addr() const {
  // @@protoc_insertion_point(field_get:pdpb.Leader.addr)
  return addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Leader::set_addr(const ::std::string& value) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pdpb.Leader.addr)
}
inline void Leader::set_addr(const char* value) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pdpb.Leader.addr)
}
inline void Leader::set_addr(const char* value, size_t size) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pdpb.Leader.addr)
}
inline ::std::string* Leader::mutable_addr() {
  set_has_addr();
  // @@protoc_insertion_point(field_mutable:pdpb.Leader.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Leader::release_addr() {
  // @@protoc_insertion_point(field_release:pdpb.Leader.addr)
  clear_has_addr();
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Leader::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    set_has_addr();
  } else {
    clear_has_addr();
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:pdpb.Leader.addr)
}

// optional uint64 id = 3;
inline bool Leader::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Leader::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Leader::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Leader::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 Leader::id() const {
  // @@protoc_insertion_point(field_get:pdpb.Leader.id)
  return id_;
}
inline void Leader::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pdpb.Leader.id)
}

inline const Leader* Leader::internal_default_instance() {
  return &Leader_default_instance_.get();
}
// -------------------------------------------------------------------

// TsoRequest

// optional uint32 count = 1;
inline bool TsoRequest::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TsoRequest::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TsoRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TsoRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 TsoRequest::count() const {
  // @@protoc_insertion_point(field_get:pdpb.TsoRequest.count)
  return count_;
}
inline void TsoRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:pdpb.TsoRequest.count)
}

inline const TsoRequest* TsoRequest::internal_default_instance() {
  return &TsoRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// Timestamp

// optional int64 physical = 1;
inline bool Timestamp::has_physical() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Timestamp::set_has_physical() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Timestamp::clear_has_physical() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Timestamp::clear_physical() {
  physical_ = GOOGLE_LONGLONG(0);
  clear_has_physical();
}
inline ::google::protobuf::int64 Timestamp::physical() const {
  // @@protoc_insertion_point(field_get:pdpb.Timestamp.physical)
  return physical_;
}
inline void Timestamp::set_physical(::google::protobuf::int64 value) {
  set_has_physical();
  physical_ = value;
  // @@protoc_insertion_point(field_set:pdpb.Timestamp.physical)
}

// optional int64 logical = 2;
inline bool Timestamp::has_logical() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Timestamp::set_has_logical() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Timestamp::clear_has_logical() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Timestamp::clear_logical() {
  logical_ = GOOGLE_LONGLONG(0);
  clear_has_logical();
}
inline ::google::protobuf::int64 Timestamp::logical() const {
  // @@protoc_insertion_point(field_get:pdpb.Timestamp.logical)
  return logical_;
}
inline void Timestamp::set_logical(::google::protobuf::int64 value) {
  set_has_logical();
  logical_ = value;
  // @@protoc_insertion_point(field_set:pdpb.Timestamp.logical)
}

inline const Timestamp* Timestamp::internal_default_instance() {
  return &Timestamp_default_instance_.get();
}
// -------------------------------------------------------------------

// TsoResponse

// optional uint32 count = 1;
inline bool TsoResponse::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TsoResponse::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TsoResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TsoResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 TsoResponse::count() const {
  // @@protoc_insertion_point(field_get:pdpb.TsoResponse.count)
  return count_;
}
inline void TsoResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:pdpb.TsoResponse.count)
}

// optional .pdpb.Timestamp timestamp = 2;
inline bool TsoResponse::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TsoResponse::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TsoResponse::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TsoResponse::clear_timestamp() {
  if (timestamp_ != NULL) timestamp_->::pdpb::Timestamp::Clear();
  clear_has_timestamp();
}
inline const ::pdpb::Timestamp& TsoResponse::timestamp() const {
  // @@protoc_insertion_point(field_get:pdpb.TsoResponse.timestamp)
  return timestamp_ != NULL ? *timestamp_
                         : *::pdpb::Timestamp::internal_default_instance();
}
inline ::pdpb::Timestamp* TsoResponse::mutable_timestamp() {
  set_has_timestamp();
  if (timestamp_ == NULL) {
    timestamp_ = new ::pdpb::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.TsoResponse.timestamp)
  return timestamp_;
}
inline ::pdpb::Timestamp* TsoResponse::release_timestamp() {
  // @@protoc_insertion_point(field_release:pdpb.TsoResponse.timestamp)
  clear_has_timestamp();
  ::pdpb::Timestamp* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline void TsoResponse::set_allocated_timestamp(::pdpb::Timestamp* timestamp) {
  delete timestamp_;
  timestamp_ = timestamp;
  if (timestamp) {
    set_has_timestamp();
  } else {
    clear_has_timestamp();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.TsoResponse.timestamp)
}

inline const TsoResponse* TsoResponse::internal_default_instance() {
  return &TsoResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// BootstrapRequest

// optional .metapb.Store store = 1;
inline bool BootstrapRequest::has_store() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BootstrapRequest::set_has_store() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BootstrapRequest::clear_has_store() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BootstrapRequest::clear_store() {
  if (store_ != NULL) store_->::metapb::Store::Clear();
  clear_has_store();
}
inline const ::metapb::Store& BootstrapRequest::store() const {
  // @@protoc_insertion_point(field_get:pdpb.BootstrapRequest.store)
  return store_ != NULL ? *store_
                         : *::metapb::Store::internal_default_instance();
}
inline ::metapb::Store* BootstrapRequest::mutable_store() {
  set_has_store();
  if (store_ == NULL) {
    store_ = new ::metapb::Store;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.BootstrapRequest.store)
  return store_;
}
inline ::metapb::Store* BootstrapRequest::release_store() {
  // @@protoc_insertion_point(field_release:pdpb.BootstrapRequest.store)
  clear_has_store();
  ::metapb::Store* temp = store_;
  store_ = NULL;
  return temp;
}
inline void BootstrapRequest::set_allocated_store(::metapb::Store* store) {
  delete store_;
  store_ = store;
  if (store) {
    set_has_store();
  } else {
    clear_has_store();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.BootstrapRequest.store)
}

// optional .metapb.Region region = 2;
inline bool BootstrapRequest::has_region() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BootstrapRequest::set_has_region() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BootstrapRequest::clear_has_region() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BootstrapRequest::clear_region() {
  if (region_ != NULL) region_->::metapb::Region::Clear();
  clear_has_region();
}
inline const ::metapb::Region& BootstrapRequest::region() const {
  // @@protoc_insertion_point(field_get:pdpb.BootstrapRequest.region)
  return region_ != NULL ? *region_
                         : *::metapb::Region::internal_default_instance();
}
inline ::metapb::Region* BootstrapRequest::mutable_region() {
  set_has_region();
  if (region_ == NULL) {
    region_ = new ::metapb::Region;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.BootstrapRequest.region)
  return region_;
}
inline ::metapb::Region* BootstrapRequest::release_region() {
  // @@protoc_insertion_point(field_release:pdpb.BootstrapRequest.region)
  clear_has_region();
  ::metapb::Region* temp = region_;
  region_ = NULL;
  return temp;
}
inline void BootstrapRequest::set_allocated_region(::metapb::Region* region) {
  delete region_;
  region_ = region;
  if (region) {
    set_has_region();
  } else {
    clear_has_region();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.BootstrapRequest.region)
}

inline const BootstrapRequest* BootstrapRequest::internal_default_instance() {
  return &BootstrapRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// BootstrapResponse

inline const BootstrapResponse* BootstrapResponse::internal_default_instance() {
  return &BootstrapResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// IsBootstrappedRequest

inline const IsBootstrappedRequest* IsBootstrappedRequest::internal_default_instance() {
  return &IsBootstrappedRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// IsBootstrappedResponse

// optional bool bootstrapped = 1;
inline bool IsBootstrappedResponse::has_bootstrapped() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IsBootstrappedResponse::set_has_bootstrapped() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IsBootstrappedResponse::clear_has_bootstrapped() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IsBootstrappedResponse::clear_bootstrapped() {
  bootstrapped_ = false;
  clear_has_bootstrapped();
}
inline bool IsBootstrappedResponse::bootstrapped() const {
  // @@protoc_insertion_point(field_get:pdpb.IsBootstrappedResponse.bootstrapped)
  return bootstrapped_;
}
inline void IsBootstrappedResponse::set_bootstrapped(bool value) {
  set_has_bootstrapped();
  bootstrapped_ = value;
  // @@protoc_insertion_point(field_set:pdpb.IsBootstrappedResponse.bootstrapped)
}

inline const IsBootstrappedResponse* IsBootstrappedResponse::internal_default_instance() {
  return &IsBootstrappedResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// AllocIdRequest

inline const AllocIdRequest* AllocIdRequest::internal_default_instance() {
  return &AllocIdRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// AllocIdResponse

// optional uint64 id = 1;
inline bool AllocIdResponse::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllocIdResponse::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllocIdResponse::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllocIdResponse::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 AllocIdResponse::id() const {
  // @@protoc_insertion_point(field_get:pdpb.AllocIdResponse.id)
  return id_;
}
inline void AllocIdResponse::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pdpb.AllocIdResponse.id)
}

inline const AllocIdResponse* AllocIdResponse::internal_default_instance() {
  return &AllocIdResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// GetStoreRequest

// optional uint64 store_id = 1;
inline bool GetStoreRequest::has_store_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetStoreRequest::set_has_store_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetStoreRequest::clear_has_store_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetStoreRequest::clear_store_id() {
  store_id_ = GOOGLE_ULONGLONG(0);
  clear_has_store_id();
}
inline ::google::protobuf::uint64 GetStoreRequest::store_id() const {
  // @@protoc_insertion_point(field_get:pdpb.GetStoreRequest.store_id)
  return store_id_;
}
inline void GetStoreRequest::set_store_id(::google::protobuf::uint64 value) {
  set_has_store_id();
  store_id_ = value;
  // @@protoc_insertion_point(field_set:pdpb.GetStoreRequest.store_id)
}

inline const GetStoreRequest* GetStoreRequest::internal_default_instance() {
  return &GetStoreRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// GetStoreResponse

// optional .metapb.Store store = 1;
inline bool GetStoreResponse::has_store() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetStoreResponse::set_has_store() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetStoreResponse::clear_has_store() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetStoreResponse::clear_store() {
  if (store_ != NULL) store_->::metapb::Store::Clear();
  clear_has_store();
}
inline const ::metapb::Store& GetStoreResponse::store() const {
  // @@protoc_insertion_point(field_get:pdpb.GetStoreResponse.store)
  return store_ != NULL ? *store_
                         : *::metapb::Store::internal_default_instance();
}
inline ::metapb::Store* GetStoreResponse::mutable_store() {
  set_has_store();
  if (store_ == NULL) {
    store_ = new ::metapb::Store;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.GetStoreResponse.store)
  return store_;
}
inline ::metapb::Store* GetStoreResponse::release_store() {
  // @@protoc_insertion_point(field_release:pdpb.GetStoreResponse.store)
  clear_has_store();
  ::metapb::Store* temp = store_;
  store_ = NULL;
  return temp;
}
inline void GetStoreResponse::set_allocated_store(::metapb::Store* store) {
  delete store_;
  store_ = store;
  if (store) {
    set_has_store();
  } else {
    clear_has_store();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.GetStoreResponse.store)
}

inline const GetStoreResponse* GetStoreResponse::internal_default_instance() {
  return &GetStoreResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// GetRegionRequest

// optional bytes region_key = 1;
inline bool GetRegionRequest::has_region_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRegionRequest::set_has_region_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRegionRequest::clear_has_region_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRegionRequest::clear_region_key() {
  region_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_region_key();
}
inline const ::std::string& GetRegionRequest::region_key() const {
  // @@protoc_insertion_point(field_get:pdpb.GetRegionRequest.region_key)
  return region_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRegionRequest::set_region_key(const ::std::string& value) {
  set_has_region_key();
  region_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pdpb.GetRegionRequest.region_key)
}
inline void GetRegionRequest::set_region_key(const char* value) {
  set_has_region_key();
  region_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pdpb.GetRegionRequest.region_key)
}
inline void GetRegionRequest::set_region_key(const void* value, size_t size) {
  set_has_region_key();
  region_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pdpb.GetRegionRequest.region_key)
}
inline ::std::string* GetRegionRequest::mutable_region_key() {
  set_has_region_key();
  // @@protoc_insertion_point(field_mutable:pdpb.GetRegionRequest.region_key)
  return region_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetRegionRequest::release_region_key() {
  // @@protoc_insertion_point(field_release:pdpb.GetRegionRequest.region_key)
  clear_has_region_key();
  return region_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRegionRequest::set_allocated_region_key(::std::string* region_key) {
  if (region_key != NULL) {
    set_has_region_key();
  } else {
    clear_has_region_key();
  }
  region_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region_key);
  // @@protoc_insertion_point(field_set_allocated:pdpb.GetRegionRequest.region_key)
}

inline const GetRegionRequest* GetRegionRequest::internal_default_instance() {
  return &GetRegionRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// GetRegionResponse

// optional .metapb.Region region = 1;
inline bool GetRegionResponse::has_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRegionResponse::set_has_region() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRegionResponse::clear_has_region() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRegionResponse::clear_region() {
  if (region_ != NULL) region_->::metapb::Region::Clear();
  clear_has_region();
}
inline const ::metapb::Region& GetRegionResponse::region() const {
  // @@protoc_insertion_point(field_get:pdpb.GetRegionResponse.region)
  return region_ != NULL ? *region_
                         : *::metapb::Region::internal_default_instance();
}
inline ::metapb::Region* GetRegionResponse::mutable_region() {
  set_has_region();
  if (region_ == NULL) {
    region_ = new ::metapb::Region;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.GetRegionResponse.region)
  return region_;
}
inline ::metapb::Region* GetRegionResponse::release_region() {
  // @@protoc_insertion_point(field_release:pdpb.GetRegionResponse.region)
  clear_has_region();
  ::metapb::Region* temp = region_;
  region_ = NULL;
  return temp;
}
inline void GetRegionResponse::set_allocated_region(::metapb::Region* region) {
  delete region_;
  region_ = region;
  if (region) {
    set_has_region();
  } else {
    clear_has_region();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.GetRegionResponse.region)
}

// optional .metapb.Peer leader = 2;
inline bool GetRegionResponse::has_leader() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetRegionResponse::set_has_leader() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetRegionResponse::clear_has_leader() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetRegionResponse::clear_leader() {
  if (leader_ != NULL) leader_->::metapb::Peer::Clear();
  clear_has_leader();
}
inline const ::metapb::Peer& GetRegionResponse::leader() const {
  // @@protoc_insertion_point(field_get:pdpb.GetRegionResponse.leader)
  return leader_ != NULL ? *leader_
                         : *::metapb::Peer::internal_default_instance();
}
inline ::metapb::Peer* GetRegionResponse::mutable_leader() {
  set_has_leader();
  if (leader_ == NULL) {
    leader_ = new ::metapb::Peer;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.GetRegionResponse.leader)
  return leader_;
}
inline ::metapb::Peer* GetRegionResponse::release_leader() {
  // @@protoc_insertion_point(field_release:pdpb.GetRegionResponse.leader)
  clear_has_leader();
  ::metapb::Peer* temp = leader_;
  leader_ = NULL;
  return temp;
}
inline void GetRegionResponse::set_allocated_leader(::metapb::Peer* leader) {
  delete leader_;
  leader_ = leader;
  if (leader) {
    set_has_leader();
  } else {
    clear_has_leader();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.GetRegionResponse.leader)
}

inline const GetRegionResponse* GetRegionResponse::internal_default_instance() {
  return &GetRegionResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// GetRegionByIDRequest

// optional uint64 region_id = 1;
inline bool GetRegionByIDRequest::has_region_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRegionByIDRequest::set_has_region_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRegionByIDRequest::clear_has_region_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRegionByIDRequest::clear_region_id() {
  region_id_ = GOOGLE_ULONGLONG(0);
  clear_has_region_id();
}
inline ::google::protobuf::uint64 GetRegionByIDRequest::region_id() const {
  // @@protoc_insertion_point(field_get:pdpb.GetRegionByIDRequest.region_id)
  return region_id_;
}
inline void GetRegionByIDRequest::set_region_id(::google::protobuf::uint64 value) {
  set_has_region_id();
  region_id_ = value;
  // @@protoc_insertion_point(field_set:pdpb.GetRegionByIDRequest.region_id)
}

inline const GetRegionByIDRequest* GetRegionByIDRequest::internal_default_instance() {
  return &GetRegionByIDRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// GetClusterConfigRequest

inline const GetClusterConfigRequest* GetClusterConfigRequest::internal_default_instance() {
  return &GetClusterConfigRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// GetClusterConfigResponse

// optional .metapb.Cluster cluster = 1;
inline bool GetClusterConfigResponse::has_cluster() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetClusterConfigResponse::set_has_cluster() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetClusterConfigResponse::clear_has_cluster() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetClusterConfigResponse::clear_cluster() {
  if (cluster_ != NULL) cluster_->::metapb::Cluster::Clear();
  clear_has_cluster();
}
inline const ::metapb::Cluster& GetClusterConfigResponse::cluster() const {
  // @@protoc_insertion_point(field_get:pdpb.GetClusterConfigResponse.cluster)
  return cluster_ != NULL ? *cluster_
                         : *::metapb::Cluster::internal_default_instance();
}
inline ::metapb::Cluster* GetClusterConfigResponse::mutable_cluster() {
  set_has_cluster();
  if (cluster_ == NULL) {
    cluster_ = new ::metapb::Cluster;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.GetClusterConfigResponse.cluster)
  return cluster_;
}
inline ::metapb::Cluster* GetClusterConfigResponse::release_cluster() {
  // @@protoc_insertion_point(field_release:pdpb.GetClusterConfigResponse.cluster)
  clear_has_cluster();
  ::metapb::Cluster* temp = cluster_;
  cluster_ = NULL;
  return temp;
}
inline void GetClusterConfigResponse::set_allocated_cluster(::metapb::Cluster* cluster) {
  delete cluster_;
  cluster_ = cluster;
  if (cluster) {
    set_has_cluster();
  } else {
    clear_has_cluster();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.GetClusterConfigResponse.cluster)
}

inline const GetClusterConfigResponse* GetClusterConfigResponse::internal_default_instance() {
  return &GetClusterConfigResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// PutStoreRequest

// optional .metapb.Store store = 1;
inline bool PutStoreRequest::has_store() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutStoreRequest::set_has_store() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutStoreRequest::clear_has_store() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutStoreRequest::clear_store() {
  if (store_ != NULL) store_->::metapb::Store::Clear();
  clear_has_store();
}
inline const ::metapb::Store& PutStoreRequest::store() const {
  // @@protoc_insertion_point(field_get:pdpb.PutStoreRequest.store)
  return store_ != NULL ? *store_
                         : *::metapb::Store::internal_default_instance();
}
inline ::metapb::Store* PutStoreRequest::mutable_store() {
  set_has_store();
  if (store_ == NULL) {
    store_ = new ::metapb::Store;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.PutStoreRequest.store)
  return store_;
}
inline ::metapb::Store* PutStoreRequest::release_store() {
  // @@protoc_insertion_point(field_release:pdpb.PutStoreRequest.store)
  clear_has_store();
  ::metapb::Store* temp = store_;
  store_ = NULL;
  return temp;
}
inline void PutStoreRequest::set_allocated_store(::metapb::Store* store) {
  delete store_;
  store_ = store;
  if (store) {
    set_has_store();
  } else {
    clear_has_store();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.PutStoreRequest.store)
}

inline const PutStoreRequest* PutStoreRequest::internal_default_instance() {
  return &PutStoreRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// PutStoreResponse

inline const PutStoreResponse* PutStoreResponse::internal_default_instance() {
  return &PutStoreResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// PDMember

// optional string name = 1;
inline bool PDMember::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PDMember::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PDMember::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PDMember::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& PDMember::name() const {
  // @@protoc_insertion_point(field_get:pdpb.PDMember.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PDMember::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pdpb.PDMember.name)
}
inline void PDMember::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pdpb.PDMember.name)
}
inline void PDMember::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pdpb.PDMember.name)
}
inline ::std::string* PDMember::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:pdpb.PDMember.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PDMember::release_name() {
  // @@protoc_insertion_point(field_release:pdpb.PDMember.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PDMember::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pdpb.PDMember.name)
}

// repeated string client_urls = 2;
inline int PDMember::client_urls_size() const {
  return client_urls_.size();
}
inline void PDMember::clear_client_urls() {
  client_urls_.Clear();
}
inline const ::std::string& PDMember::client_urls(int index) const {
  // @@protoc_insertion_point(field_get:pdpb.PDMember.client_urls)
  return client_urls_.Get(index);
}
inline ::std::string* PDMember::mutable_client_urls(int index) {
  // @@protoc_insertion_point(field_mutable:pdpb.PDMember.client_urls)
  return client_urls_.Mutable(index);
}
inline void PDMember::set_client_urls(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pdpb.PDMember.client_urls)
  client_urls_.Mutable(index)->assign(value);
}
inline void PDMember::set_client_urls(int index, const char* value) {
  client_urls_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pdpb.PDMember.client_urls)
}
inline void PDMember::set_client_urls(int index, const char* value, size_t size) {
  client_urls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pdpb.PDMember.client_urls)
}
inline ::std::string* PDMember::add_client_urls() {
  // @@protoc_insertion_point(field_add_mutable:pdpb.PDMember.client_urls)
  return client_urls_.Add();
}
inline void PDMember::add_client_urls(const ::std::string& value) {
  client_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pdpb.PDMember.client_urls)
}
inline void PDMember::add_client_urls(const char* value) {
  client_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pdpb.PDMember.client_urls)
}
inline void PDMember::add_client_urls(const char* value, size_t size) {
  client_urls_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pdpb.PDMember.client_urls)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PDMember::client_urls() const {
  // @@protoc_insertion_point(field_list:pdpb.PDMember.client_urls)
  return client_urls_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PDMember::mutable_client_urls() {
  // @@protoc_insertion_point(field_mutable_list:pdpb.PDMember.client_urls)
  return &client_urls_;
}

// repeated string peer_urls = 3;
inline int PDMember::peer_urls_size() const {
  return peer_urls_.size();
}
inline void PDMember::clear_peer_urls() {
  peer_urls_.Clear();
}
inline const ::std::string& PDMember::peer_urls(int index) const {
  // @@protoc_insertion_point(field_get:pdpb.PDMember.peer_urls)
  return peer_urls_.Get(index);
}
inline ::std::string* PDMember::mutable_peer_urls(int index) {
  // @@protoc_insertion_point(field_mutable:pdpb.PDMember.peer_urls)
  return peer_urls_.Mutable(index);
}
inline void PDMember::set_peer_urls(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pdpb.PDMember.peer_urls)
  peer_urls_.Mutable(index)->assign(value);
}
inline void PDMember::set_peer_urls(int index, const char* value) {
  peer_urls_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pdpb.PDMember.peer_urls)
}
inline void PDMember::set_peer_urls(int index, const char* value, size_t size) {
  peer_urls_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pdpb.PDMember.peer_urls)
}
inline ::std::string* PDMember::add_peer_urls() {
  // @@protoc_insertion_point(field_add_mutable:pdpb.PDMember.peer_urls)
  return peer_urls_.Add();
}
inline void PDMember::add_peer_urls(const ::std::string& value) {
  peer_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pdpb.PDMember.peer_urls)
}
inline void PDMember::add_peer_urls(const char* value) {
  peer_urls_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pdpb.PDMember.peer_urls)
}
inline void PDMember::add_peer_urls(const char* value, size_t size) {
  peer_urls_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pdpb.PDMember.peer_urls)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
PDMember::peer_urls() const {
  // @@protoc_insertion_point(field_list:pdpb.PDMember.peer_urls)
  return peer_urls_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
PDMember::mutable_peer_urls() {
  // @@protoc_insertion_point(field_mutable_list:pdpb.PDMember.peer_urls)
  return &peer_urls_;
}

inline const PDMember* PDMember::internal_default_instance() {
  return &PDMember_default_instance_.get();
}
// -------------------------------------------------------------------

// GetPDMembersRequest

inline const GetPDMembersRequest* GetPDMembersRequest::internal_default_instance() {
  return &GetPDMembersRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// GetPDMembersResponse

// repeated .pdpb.PDMember members = 1;
inline int GetPDMembersResponse::members_size() const {
  return members_.size();
}
inline void GetPDMembersResponse::clear_members() {
  members_.Clear();
}
inline const ::pdpb::PDMember& GetPDMembersResponse::members(int index) const {
  // @@protoc_insertion_point(field_get:pdpb.GetPDMembersResponse.members)
  return members_.Get(index);
}
inline ::pdpb::PDMember* GetPDMembersResponse::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:pdpb.GetPDMembersResponse.members)
  return members_.Mutable(index);
}
inline ::pdpb::PDMember* GetPDMembersResponse::add_members() {
  // @@protoc_insertion_point(field_add:pdpb.GetPDMembersResponse.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pdpb::PDMember >*
GetPDMembersResponse::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:pdpb.GetPDMembersResponse.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pdpb::PDMember >&
GetPDMembersResponse::members() const {
  // @@protoc_insertion_point(field_list:pdpb.GetPDMembersResponse.members)
  return members_;
}

inline const GetPDMembersResponse* GetPDMembersResponse::internal_default_instance() {
  return &GetPDMembersResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// PeerStats

// optional .metapb.Peer peer = 1;
inline bool PeerStats::has_peer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PeerStats::set_has_peer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PeerStats::clear_has_peer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PeerStats::clear_peer() {
  if (peer_ != NULL) peer_->::metapb::Peer::Clear();
  clear_has_peer();
}
inline const ::metapb::Peer& PeerStats::peer() const {
  // @@protoc_insertion_point(field_get:pdpb.PeerStats.peer)
  return peer_ != NULL ? *peer_
                         : *::metapb::Peer::internal_default_instance();
}
inline ::metapb::Peer* PeerStats::mutable_peer() {
  set_has_peer();
  if (peer_ == NULL) {
    peer_ = new ::metapb::Peer;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.PeerStats.peer)
  return peer_;
}
inline ::metapb::Peer* PeerStats::release_peer() {
  // @@protoc_insertion_point(field_release:pdpb.PeerStats.peer)
  clear_has_peer();
  ::metapb::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void PeerStats::set_allocated_peer(::metapb::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    set_has_peer();
  } else {
    clear_has_peer();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.PeerStats.peer)
}

// optional uint64 down_seconds = 2;
inline bool PeerStats::has_down_seconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PeerStats::set_has_down_seconds() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PeerStats::clear_has_down_seconds() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PeerStats::clear_down_seconds() {
  down_seconds_ = GOOGLE_ULONGLONG(0);
  clear_has_down_seconds();
}
inline ::google::protobuf::uint64 PeerStats::down_seconds() const {
  // @@protoc_insertion_point(field_get:pdpb.PeerStats.down_seconds)
  return down_seconds_;
}
inline void PeerStats::set_down_seconds(::google::protobuf::uint64 value) {
  set_has_down_seconds();
  down_seconds_ = value;
  // @@protoc_insertion_point(field_set:pdpb.PeerStats.down_seconds)
}

inline const PeerStats* PeerStats::internal_default_instance() {
  return &PeerStats_default_instance_.get();
}
// -------------------------------------------------------------------

// RegionHeartbeatRequest

// optional .metapb.Region region = 1;
inline bool RegionHeartbeatRequest::has_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegionHeartbeatRequest::set_has_region() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegionHeartbeatRequest::clear_has_region() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegionHeartbeatRequest::clear_region() {
  if (region_ != NULL) region_->::metapb::Region::Clear();
  clear_has_region();
}
inline const ::metapb::Region& RegionHeartbeatRequest::region() const {
  // @@protoc_insertion_point(field_get:pdpb.RegionHeartbeatRequest.region)
  return region_ != NULL ? *region_
                         : *::metapb::Region::internal_default_instance();
}
inline ::metapb::Region* RegionHeartbeatRequest::mutable_region() {
  set_has_region();
  if (region_ == NULL) {
    region_ = new ::metapb::Region;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.RegionHeartbeatRequest.region)
  return region_;
}
inline ::metapb::Region* RegionHeartbeatRequest::release_region() {
  // @@protoc_insertion_point(field_release:pdpb.RegionHeartbeatRequest.region)
  clear_has_region();
  ::metapb::Region* temp = region_;
  region_ = NULL;
  return temp;
}
inline void RegionHeartbeatRequest::set_allocated_region(::metapb::Region* region) {
  delete region_;
  region_ = region;
  if (region) {
    set_has_region();
  } else {
    clear_has_region();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.RegionHeartbeatRequest.region)
}

// optional .metapb.Peer leader = 2;
inline bool RegionHeartbeatRequest::has_leader() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RegionHeartbeatRequest::set_has_leader() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RegionHeartbeatRequest::clear_has_leader() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RegionHeartbeatRequest::clear_leader() {
  if (leader_ != NULL) leader_->::metapb::Peer::Clear();
  clear_has_leader();
}
inline const ::metapb::Peer& RegionHeartbeatRequest::leader() const {
  // @@protoc_insertion_point(field_get:pdpb.RegionHeartbeatRequest.leader)
  return leader_ != NULL ? *leader_
                         : *::metapb::Peer::internal_default_instance();
}
inline ::metapb::Peer* RegionHeartbeatRequest::mutable_leader() {
  set_has_leader();
  if (leader_ == NULL) {
    leader_ = new ::metapb::Peer;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.RegionHeartbeatRequest.leader)
  return leader_;
}
inline ::metapb::Peer* RegionHeartbeatRequest::release_leader() {
  // @@protoc_insertion_point(field_release:pdpb.RegionHeartbeatRequest.leader)
  clear_has_leader();
  ::metapb::Peer* temp = leader_;
  leader_ = NULL;
  return temp;
}
inline void RegionHeartbeatRequest::set_allocated_leader(::metapb::Peer* leader) {
  delete leader_;
  leader_ = leader;
  if (leader) {
    set_has_leader();
  } else {
    clear_has_leader();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.RegionHeartbeatRequest.leader)
}

// repeated .pdpb.PeerStats down_peers = 3;
inline int RegionHeartbeatRequest::down_peers_size() const {
  return down_peers_.size();
}
inline void RegionHeartbeatRequest::clear_down_peers() {
  down_peers_.Clear();
}
inline const ::pdpb::PeerStats& RegionHeartbeatRequest::down_peers(int index) const {
  // @@protoc_insertion_point(field_get:pdpb.RegionHeartbeatRequest.down_peers)
  return down_peers_.Get(index);
}
inline ::pdpb::PeerStats* RegionHeartbeatRequest::mutable_down_peers(int index) {
  // @@protoc_insertion_point(field_mutable:pdpb.RegionHeartbeatRequest.down_peers)
  return down_peers_.Mutable(index);
}
inline ::pdpb::PeerStats* RegionHeartbeatRequest::add_down_peers() {
  // @@protoc_insertion_point(field_add:pdpb.RegionHeartbeatRequest.down_peers)
  return down_peers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pdpb::PeerStats >*
RegionHeartbeatRequest::mutable_down_peers() {
  // @@protoc_insertion_point(field_mutable_list:pdpb.RegionHeartbeatRequest.down_peers)
  return &down_peers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pdpb::PeerStats >&
RegionHeartbeatRequest::down_peers() const {
  // @@protoc_insertion_point(field_list:pdpb.RegionHeartbeatRequest.down_peers)
  return down_peers_;
}

// repeated .metapb.Peer pending_peers = 4;
inline int RegionHeartbeatRequest::pending_peers_size() const {
  return pending_peers_.size();
}
inline void RegionHeartbeatRequest::clear_pending_peers() {
  pending_peers_.Clear();
}
inline const ::metapb::Peer& RegionHeartbeatRequest::pending_peers(int index) const {
  // @@protoc_insertion_point(field_get:pdpb.RegionHeartbeatRequest.pending_peers)
  return pending_peers_.Get(index);
}
inline ::metapb::Peer* RegionHeartbeatRequest::mutable_pending_peers(int index) {
  // @@protoc_insertion_point(field_mutable:pdpb.RegionHeartbeatRequest.pending_peers)
  return pending_peers_.Mutable(index);
}
inline ::metapb::Peer* RegionHeartbeatRequest::add_pending_peers() {
  // @@protoc_insertion_point(field_add:pdpb.RegionHeartbeatRequest.pending_peers)
  return pending_peers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::metapb::Peer >*
RegionHeartbeatRequest::mutable_pending_peers() {
  // @@protoc_insertion_point(field_mutable_list:pdpb.RegionHeartbeatRequest.pending_peers)
  return &pending_peers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::metapb::Peer >&
RegionHeartbeatRequest::pending_peers() const {
  // @@protoc_insertion_point(field_list:pdpb.RegionHeartbeatRequest.pending_peers)
  return pending_peers_;
}

inline const RegionHeartbeatRequest* RegionHeartbeatRequest::internal_default_instance() {
  return &RegionHeartbeatRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ChangePeer

// optional .eraftpb.ConfChangeType change_type = 1;
inline bool ChangePeer::has_change_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChangePeer::set_has_change_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChangePeer::clear_has_change_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChangePeer::clear_change_type() {
  change_type_ = 0;
  clear_has_change_type();
}
inline ::eraftpb::ConfChangeType ChangePeer::change_type() const {
  // @@protoc_insertion_point(field_get:pdpb.ChangePeer.change_type)
  return static_cast< ::eraftpb::ConfChangeType >(change_type_);
}
inline void ChangePeer::set_change_type(::eraftpb::ConfChangeType value) {
  assert(::eraftpb::ConfChangeType_IsValid(value));
  set_has_change_type();
  change_type_ = value;
  // @@protoc_insertion_point(field_set:pdpb.ChangePeer.change_type)
}

// optional .metapb.Peer peer = 2;
inline bool ChangePeer::has_peer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChangePeer::set_has_peer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChangePeer::clear_has_peer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChangePeer::clear_peer() {
  if (peer_ != NULL) peer_->::metapb::Peer::Clear();
  clear_has_peer();
}
inline const ::metapb::Peer& ChangePeer::peer() const {
  // @@protoc_insertion_point(field_get:pdpb.ChangePeer.peer)
  return peer_ != NULL ? *peer_
                         : *::metapb::Peer::internal_default_instance();
}
inline ::metapb::Peer* ChangePeer::mutable_peer() {
  set_has_peer();
  if (peer_ == NULL) {
    peer_ = new ::metapb::Peer;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.ChangePeer.peer)
  return peer_;
}
inline ::metapb::Peer* ChangePeer::release_peer() {
  // @@protoc_insertion_point(field_release:pdpb.ChangePeer.peer)
  clear_has_peer();
  ::metapb::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void ChangePeer::set_allocated_peer(::metapb::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    set_has_peer();
  } else {
    clear_has_peer();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.ChangePeer.peer)
}

inline const ChangePeer* ChangePeer::internal_default_instance() {
  return &ChangePeer_default_instance_.get();
}
// -------------------------------------------------------------------

// TransferLeader

// optional .metapb.Peer peer = 1;
inline bool TransferLeader::has_peer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransferLeader::set_has_peer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransferLeader::clear_has_peer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransferLeader::clear_peer() {
  if (peer_ != NULL) peer_->::metapb::Peer::Clear();
  clear_has_peer();
}
inline const ::metapb::Peer& TransferLeader::peer() const {
  // @@protoc_insertion_point(field_get:pdpb.TransferLeader.peer)
  return peer_ != NULL ? *peer_
                         : *::metapb::Peer::internal_default_instance();
}
inline ::metapb::Peer* TransferLeader::mutable_peer() {
  set_has_peer();
  if (peer_ == NULL) {
    peer_ = new ::metapb::Peer;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.TransferLeader.peer)
  return peer_;
}
inline ::metapb::Peer* TransferLeader::release_peer() {
  // @@protoc_insertion_point(field_release:pdpb.TransferLeader.peer)
  clear_has_peer();
  ::metapb::Peer* temp = peer_;
  peer_ = NULL;
  return temp;
}
inline void TransferLeader::set_allocated_peer(::metapb::Peer* peer) {
  delete peer_;
  peer_ = peer;
  if (peer) {
    set_has_peer();
  } else {
    clear_has_peer();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.TransferLeader.peer)
}

inline const TransferLeader* TransferLeader::internal_default_instance() {
  return &TransferLeader_default_instance_.get();
}
// -------------------------------------------------------------------

// RegionHeartbeatResponse

// optional .pdpb.ChangePeer change_peer = 1;
inline bool RegionHeartbeatResponse::has_change_peer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegionHeartbeatResponse::set_has_change_peer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegionHeartbeatResponse::clear_has_change_peer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegionHeartbeatResponse::clear_change_peer() {
  if (change_peer_ != NULL) change_peer_->::pdpb::ChangePeer::Clear();
  clear_has_change_peer();
}
inline const ::pdpb::ChangePeer& RegionHeartbeatResponse::change_peer() const {
  // @@protoc_insertion_point(field_get:pdpb.RegionHeartbeatResponse.change_peer)
  return change_peer_ != NULL ? *change_peer_
                         : *::pdpb::ChangePeer::internal_default_instance();
}
inline ::pdpb::ChangePeer* RegionHeartbeatResponse::mutable_change_peer() {
  set_has_change_peer();
  if (change_peer_ == NULL) {
    change_peer_ = new ::pdpb::ChangePeer;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.RegionHeartbeatResponse.change_peer)
  return change_peer_;
}
inline ::pdpb::ChangePeer* RegionHeartbeatResponse::release_change_peer() {
  // @@protoc_insertion_point(field_release:pdpb.RegionHeartbeatResponse.change_peer)
  clear_has_change_peer();
  ::pdpb::ChangePeer* temp = change_peer_;
  change_peer_ = NULL;
  return temp;
}
inline void RegionHeartbeatResponse::set_allocated_change_peer(::pdpb::ChangePeer* change_peer) {
  delete change_peer_;
  change_peer_ = change_peer;
  if (change_peer) {
    set_has_change_peer();
  } else {
    clear_has_change_peer();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.RegionHeartbeatResponse.change_peer)
}

// optional .pdpb.TransferLeader transfer_leader = 2;
inline bool RegionHeartbeatResponse::has_transfer_leader() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RegionHeartbeatResponse::set_has_transfer_leader() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RegionHeartbeatResponse::clear_has_transfer_leader() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RegionHeartbeatResponse::clear_transfer_leader() {
  if (transfer_leader_ != NULL) transfer_leader_->::pdpb::TransferLeader::Clear();
  clear_has_transfer_leader();
}
inline const ::pdpb::TransferLeader& RegionHeartbeatResponse::transfer_leader() const {
  // @@protoc_insertion_point(field_get:pdpb.RegionHeartbeatResponse.transfer_leader)
  return transfer_leader_ != NULL ? *transfer_leader_
                         : *::pdpb::TransferLeader::internal_default_instance();
}
inline ::pdpb::TransferLeader* RegionHeartbeatResponse::mutable_transfer_leader() {
  set_has_transfer_leader();
  if (transfer_leader_ == NULL) {
    transfer_leader_ = new ::pdpb::TransferLeader;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.RegionHeartbeatResponse.transfer_leader)
  return transfer_leader_;
}
inline ::pdpb::TransferLeader* RegionHeartbeatResponse::release_transfer_leader() {
  // @@protoc_insertion_point(field_release:pdpb.RegionHeartbeatResponse.transfer_leader)
  clear_has_transfer_leader();
  ::pdpb::TransferLeader* temp = transfer_leader_;
  transfer_leader_ = NULL;
  return temp;
}
inline void RegionHeartbeatResponse::set_allocated_transfer_leader(::pdpb::TransferLeader* transfer_leader) {
  delete transfer_leader_;
  transfer_leader_ = transfer_leader;
  if (transfer_leader) {
    set_has_transfer_leader();
  } else {
    clear_has_transfer_leader();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.RegionHeartbeatResponse.transfer_leader)
}

inline const RegionHeartbeatResponse* RegionHeartbeatResponse::internal_default_instance() {
  return &RegionHeartbeatResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// PutClusterConfigRequest

// optional .metapb.Cluster cluster = 1;
inline bool PutClusterConfigRequest::has_cluster() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PutClusterConfigRequest::set_has_cluster() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PutClusterConfigRequest::clear_has_cluster() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PutClusterConfigRequest::clear_cluster() {
  if (cluster_ != NULL) cluster_->::metapb::Cluster::Clear();
  clear_has_cluster();
}
inline const ::metapb::Cluster& PutClusterConfigRequest::cluster() const {
  // @@protoc_insertion_point(field_get:pdpb.PutClusterConfigRequest.cluster)
  return cluster_ != NULL ? *cluster_
                         : *::metapb::Cluster::internal_default_instance();
}
inline ::metapb::Cluster* PutClusterConfigRequest::mutable_cluster() {
  set_has_cluster();
  if (cluster_ == NULL) {
    cluster_ = new ::metapb::Cluster;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.PutClusterConfigRequest.cluster)
  return cluster_;
}
inline ::metapb::Cluster* PutClusterConfigRequest::release_cluster() {
  // @@protoc_insertion_point(field_release:pdpb.PutClusterConfigRequest.cluster)
  clear_has_cluster();
  ::metapb::Cluster* temp = cluster_;
  cluster_ = NULL;
  return temp;
}
inline void PutClusterConfigRequest::set_allocated_cluster(::metapb::Cluster* cluster) {
  delete cluster_;
  cluster_ = cluster;
  if (cluster) {
    set_has_cluster();
  } else {
    clear_has_cluster();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.PutClusterConfigRequest.cluster)
}

inline const PutClusterConfigRequest* PutClusterConfigRequest::internal_default_instance() {
  return &PutClusterConfigRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// PutClusterConfigResponse

inline const PutClusterConfigResponse* PutClusterConfigResponse::internal_default_instance() {
  return &PutClusterConfigResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// AskSplitRequest

// optional .metapb.Region region = 1;
inline bool AskSplitRequest::has_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskSplitRequest::set_has_region() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskSplitRequest::clear_has_region() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskSplitRequest::clear_region() {
  if (region_ != NULL) region_->::metapb::Region::Clear();
  clear_has_region();
}
inline const ::metapb::Region& AskSplitRequest::region() const {
  // @@protoc_insertion_point(field_get:pdpb.AskSplitRequest.region)
  return region_ != NULL ? *region_
                         : *::metapb::Region::internal_default_instance();
}
inline ::metapb::Region* AskSplitRequest::mutable_region() {
  set_has_region();
  if (region_ == NULL) {
    region_ = new ::metapb::Region;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.AskSplitRequest.region)
  return region_;
}
inline ::metapb::Region* AskSplitRequest::release_region() {
  // @@protoc_insertion_point(field_release:pdpb.AskSplitRequest.region)
  clear_has_region();
  ::metapb::Region* temp = region_;
  region_ = NULL;
  return temp;
}
inline void AskSplitRequest::set_allocated_region(::metapb::Region* region) {
  delete region_;
  region_ = region;
  if (region) {
    set_has_region();
  } else {
    clear_has_region();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.AskSplitRequest.region)
}

inline const AskSplitRequest* AskSplitRequest::internal_default_instance() {
  return &AskSplitRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// AskSplitResponse

// optional uint64 new_region_id = 1;
inline bool AskSplitResponse::has_new_region_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AskSplitResponse::set_has_new_region_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AskSplitResponse::clear_has_new_region_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AskSplitResponse::clear_new_region_id() {
  new_region_id_ = GOOGLE_ULONGLONG(0);
  clear_has_new_region_id();
}
inline ::google::protobuf::uint64 AskSplitResponse::new_region_id() const {
  // @@protoc_insertion_point(field_get:pdpb.AskSplitResponse.new_region_id)
  return new_region_id_;
}
inline void AskSplitResponse::set_new_region_id(::google::protobuf::uint64 value) {
  set_has_new_region_id();
  new_region_id_ = value;
  // @@protoc_insertion_point(field_set:pdpb.AskSplitResponse.new_region_id)
}

// repeated uint64 new_peer_ids = 2;
inline int AskSplitResponse::new_peer_ids_size() const {
  return new_peer_ids_.size();
}
inline void AskSplitResponse::clear_new_peer_ids() {
  new_peer_ids_.Clear();
}
inline ::google::protobuf::uint64 AskSplitResponse::new_peer_ids(int index) const {
  // @@protoc_insertion_point(field_get:pdpb.AskSplitResponse.new_peer_ids)
  return new_peer_ids_.Get(index);
}
inline void AskSplitResponse::set_new_peer_ids(int index, ::google::protobuf::uint64 value) {
  new_peer_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:pdpb.AskSplitResponse.new_peer_ids)
}
inline void AskSplitResponse::add_new_peer_ids(::google::protobuf::uint64 value) {
  new_peer_ids_.Add(value);
  // @@protoc_insertion_point(field_add:pdpb.AskSplitResponse.new_peer_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
AskSplitResponse::new_peer_ids() const {
  // @@protoc_insertion_point(field_list:pdpb.AskSplitResponse.new_peer_ids)
  return new_peer_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
AskSplitResponse::mutable_new_peer_ids() {
  // @@protoc_insertion_point(field_mutable_list:pdpb.AskSplitResponse.new_peer_ids)
  return &new_peer_ids_;
}

inline const AskSplitResponse* AskSplitResponse::internal_default_instance() {
  return &AskSplitResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// StoreStats

// optional uint64 store_id = 1;
inline bool StoreStats::has_store_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoreStats::set_has_store_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoreStats::clear_has_store_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoreStats::clear_store_id() {
  store_id_ = GOOGLE_ULONGLONG(0);
  clear_has_store_id();
}
inline ::google::protobuf::uint64 StoreStats::store_id() const {
  // @@protoc_insertion_point(field_get:pdpb.StoreStats.store_id)
  return store_id_;
}
inline void StoreStats::set_store_id(::google::protobuf::uint64 value) {
  set_has_store_id();
  store_id_ = value;
  // @@protoc_insertion_point(field_set:pdpb.StoreStats.store_id)
}

// optional uint64 capacity = 2;
inline bool StoreStats::has_capacity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StoreStats::set_has_capacity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StoreStats::clear_has_capacity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StoreStats::clear_capacity() {
  capacity_ = GOOGLE_ULONGLONG(0);
  clear_has_capacity();
}
inline ::google::protobuf::uint64 StoreStats::capacity() const {
  // @@protoc_insertion_point(field_get:pdpb.StoreStats.capacity)
  return capacity_;
}
inline void StoreStats::set_capacity(::google::protobuf::uint64 value) {
  set_has_capacity();
  capacity_ = value;
  // @@protoc_insertion_point(field_set:pdpb.StoreStats.capacity)
}

// optional uint64 available = 3;
inline bool StoreStats::has_available() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StoreStats::set_has_available() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StoreStats::clear_has_available() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StoreStats::clear_available() {
  available_ = GOOGLE_ULONGLONG(0);
  clear_has_available();
}
inline ::google::protobuf::uint64 StoreStats::available() const {
  // @@protoc_insertion_point(field_get:pdpb.StoreStats.available)
  return available_;
}
inline void StoreStats::set_available(::google::protobuf::uint64 value) {
  set_has_available();
  available_ = value;
  // @@protoc_insertion_point(field_set:pdpb.StoreStats.available)
}

// optional uint32 region_count = 4;
inline bool StoreStats::has_region_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StoreStats::set_has_region_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StoreStats::clear_has_region_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StoreStats::clear_region_count() {
  region_count_ = 0u;
  clear_has_region_count();
}
inline ::google::protobuf::uint32 StoreStats::region_count() const {
  // @@protoc_insertion_point(field_get:pdpb.StoreStats.region_count)
  return region_count_;
}
inline void StoreStats::set_region_count(::google::protobuf::uint32 value) {
  set_has_region_count();
  region_count_ = value;
  // @@protoc_insertion_point(field_set:pdpb.StoreStats.region_count)
}

// optional uint32 sending_snap_count = 5;
inline bool StoreStats::has_sending_snap_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StoreStats::set_has_sending_snap_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StoreStats::clear_has_sending_snap_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StoreStats::clear_sending_snap_count() {
  sending_snap_count_ = 0u;
  clear_has_sending_snap_count();
}
inline ::google::protobuf::uint32 StoreStats::sending_snap_count() const {
  // @@protoc_insertion_point(field_get:pdpb.StoreStats.sending_snap_count)
  return sending_snap_count_;
}
inline void StoreStats::set_sending_snap_count(::google::protobuf::uint32 value) {
  set_has_sending_snap_count();
  sending_snap_count_ = value;
  // @@protoc_insertion_point(field_set:pdpb.StoreStats.sending_snap_count)
}

// optional uint32 receiving_snap_count = 6;
inline bool StoreStats::has_receiving_snap_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void StoreStats::set_has_receiving_snap_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void StoreStats::clear_has_receiving_snap_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void StoreStats::clear_receiving_snap_count() {
  receiving_snap_count_ = 0u;
  clear_has_receiving_snap_count();
}
inline ::google::protobuf::uint32 StoreStats::receiving_snap_count() const {
  // @@protoc_insertion_point(field_get:pdpb.StoreStats.receiving_snap_count)
  return receiving_snap_count_;
}
inline void StoreStats::set_receiving_snap_count(::google::protobuf::uint32 value) {
  set_has_receiving_snap_count();
  receiving_snap_count_ = value;
  // @@protoc_insertion_point(field_set:pdpb.StoreStats.receiving_snap_count)
}

// optional uint32 start_time = 7;
inline bool StoreStats::has_start_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void StoreStats::set_has_start_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void StoreStats::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void StoreStats::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 StoreStats::start_time() const {
  // @@protoc_insertion_point(field_get:pdpb.StoreStats.start_time)
  return start_time_;
}
inline void StoreStats::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:pdpb.StoreStats.start_time)
}

// optional uint32 applying_snap_count = 8;
inline bool StoreStats::has_applying_snap_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void StoreStats::set_has_applying_snap_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void StoreStats::clear_has_applying_snap_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void StoreStats::clear_applying_snap_count() {
  applying_snap_count_ = 0u;
  clear_has_applying_snap_count();
}
inline ::google::protobuf::uint32 StoreStats::applying_snap_count() const {
  // @@protoc_insertion_point(field_get:pdpb.StoreStats.applying_snap_count)
  return applying_snap_count_;
}
inline void StoreStats::set_applying_snap_count(::google::protobuf::uint32 value) {
  set_has_applying_snap_count();
  applying_snap_count_ = value;
  // @@protoc_insertion_point(field_set:pdpb.StoreStats.applying_snap_count)
}

// optional bool is_busy = 9;
inline bool StoreStats::has_is_busy() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void StoreStats::set_has_is_busy() {
  _has_bits_[0] |= 0x00000100u;
}
inline void StoreStats::clear_has_is_busy() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void StoreStats::clear_is_busy() {
  is_busy_ = false;
  clear_has_is_busy();
}
inline bool StoreStats::is_busy() const {
  // @@protoc_insertion_point(field_get:pdpb.StoreStats.is_busy)
  return is_busy_;
}
inline void StoreStats::set_is_busy(bool value) {
  set_has_is_busy();
  is_busy_ = value;
  // @@protoc_insertion_point(field_set:pdpb.StoreStats.is_busy)
}

inline const StoreStats* StoreStats::internal_default_instance() {
  return &StoreStats_default_instance_.get();
}
// -------------------------------------------------------------------

// StoreHeartbeatRequest

// optional .pdpb.StoreStats stats = 1;
inline bool StoreHeartbeatRequest::has_stats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StoreHeartbeatRequest::set_has_stats() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StoreHeartbeatRequest::clear_has_stats() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StoreHeartbeatRequest::clear_stats() {
  if (stats_ != NULL) stats_->::pdpb::StoreStats::Clear();
  clear_has_stats();
}
inline const ::pdpb::StoreStats& StoreHeartbeatRequest::stats() const {
  // @@protoc_insertion_point(field_get:pdpb.StoreHeartbeatRequest.stats)
  return stats_ != NULL ? *stats_
                         : *::pdpb::StoreStats::internal_default_instance();
}
inline ::pdpb::StoreStats* StoreHeartbeatRequest::mutable_stats() {
  set_has_stats();
  if (stats_ == NULL) {
    stats_ = new ::pdpb::StoreStats;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.StoreHeartbeatRequest.stats)
  return stats_;
}
inline ::pdpb::StoreStats* StoreHeartbeatRequest::release_stats() {
  // @@protoc_insertion_point(field_release:pdpb.StoreHeartbeatRequest.stats)
  clear_has_stats();
  ::pdpb::StoreStats* temp = stats_;
  stats_ = NULL;
  return temp;
}
inline void StoreHeartbeatRequest::set_allocated_stats(::pdpb::StoreStats* stats) {
  delete stats_;
  stats_ = stats;
  if (stats) {
    set_has_stats();
  } else {
    clear_has_stats();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.StoreHeartbeatRequest.stats)
}

inline const StoreHeartbeatRequest* StoreHeartbeatRequest::internal_default_instance() {
  return &StoreHeartbeatRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// StoreHeartbeatResponse

inline const StoreHeartbeatResponse* StoreHeartbeatResponse::internal_default_instance() {
  return &StoreHeartbeatResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// ReportSplitRequest

// optional .metapb.Region left = 1;
inline bool ReportSplitRequest::has_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReportSplitRequest::set_has_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReportSplitRequest::clear_has_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReportSplitRequest::clear_left() {
  if (left_ != NULL) left_->::metapb::Region::Clear();
  clear_has_left();
}
inline const ::metapb::Region& ReportSplitRequest::left() const {
  // @@protoc_insertion_point(field_get:pdpb.ReportSplitRequest.left)
  return left_ != NULL ? *left_
                         : *::metapb::Region::internal_default_instance();
}
inline ::metapb::Region* ReportSplitRequest::mutable_left() {
  set_has_left();
  if (left_ == NULL) {
    left_ = new ::metapb::Region;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.ReportSplitRequest.left)
  return left_;
}
inline ::metapb::Region* ReportSplitRequest::release_left() {
  // @@protoc_insertion_point(field_release:pdpb.ReportSplitRequest.left)
  clear_has_left();
  ::metapb::Region* temp = left_;
  left_ = NULL;
  return temp;
}
inline void ReportSplitRequest::set_allocated_left(::metapb::Region* left) {
  delete left_;
  left_ = left;
  if (left) {
    set_has_left();
  } else {
    clear_has_left();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.ReportSplitRequest.left)
}

// optional .metapb.Region right = 2;
inline bool ReportSplitRequest::has_right() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReportSplitRequest::set_has_right() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReportSplitRequest::clear_has_right() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReportSplitRequest::clear_right() {
  if (right_ != NULL) right_->::metapb::Region::Clear();
  clear_has_right();
}
inline const ::metapb::Region& ReportSplitRequest::right() const {
  // @@protoc_insertion_point(field_get:pdpb.ReportSplitRequest.right)
  return right_ != NULL ? *right_
                         : *::metapb::Region::internal_default_instance();
}
inline ::metapb::Region* ReportSplitRequest::mutable_right() {
  set_has_right();
  if (right_ == NULL) {
    right_ = new ::metapb::Region;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.ReportSplitRequest.right)
  return right_;
}
inline ::metapb::Region* ReportSplitRequest::release_right() {
  // @@protoc_insertion_point(field_release:pdpb.ReportSplitRequest.right)
  clear_has_right();
  ::metapb::Region* temp = right_;
  right_ = NULL;
  return temp;
}
inline void ReportSplitRequest::set_allocated_right(::metapb::Region* right) {
  delete right_;
  right_ = right;
  if (right) {
    set_has_right();
  } else {
    clear_has_right();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.ReportSplitRequest.right)
}

inline const ReportSplitRequest* ReportSplitRequest::internal_default_instance() {
  return &ReportSplitRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ReportSplitResponse

inline const ReportSplitResponse* ReportSplitResponse::internal_default_instance() {
  return &ReportSplitResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// RequestHeader

// optional bytes uuid = 1;
inline bool RequestHeader::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestHeader::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestHeader::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestHeader::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uuid();
}
inline const ::std::string& RequestHeader::uuid() const {
  // @@protoc_insertion_point(field_get:pdpb.RequestHeader.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestHeader::set_uuid(const ::std::string& value) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pdpb.RequestHeader.uuid)
}
inline void RequestHeader::set_uuid(const char* value) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pdpb.RequestHeader.uuid)
}
inline void RequestHeader::set_uuid(const void* value, size_t size) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pdpb.RequestHeader.uuid)
}
inline ::std::string* RequestHeader::mutable_uuid() {
  set_has_uuid();
  // @@protoc_insertion_point(field_mutable:pdpb.RequestHeader.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestHeader::release_uuid() {
  // @@protoc_insertion_point(field_release:pdpb.RequestHeader.uuid)
  clear_has_uuid();
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestHeader::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    set_has_uuid();
  } else {
    clear_has_uuid();
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:pdpb.RequestHeader.uuid)
}

// optional uint64 cluster_id = 2;
inline bool RequestHeader::has_cluster_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestHeader::set_has_cluster_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestHeader::clear_has_cluster_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestHeader::clear_cluster_id() {
  cluster_id_ = GOOGLE_ULONGLONG(0);
  clear_has_cluster_id();
}
inline ::google::protobuf::uint64 RequestHeader::cluster_id() const {
  // @@protoc_insertion_point(field_get:pdpb.RequestHeader.cluster_id)
  return cluster_id_;
}
inline void RequestHeader::set_cluster_id(::google::protobuf::uint64 value) {
  set_has_cluster_id();
  cluster_id_ = value;
  // @@protoc_insertion_point(field_set:pdpb.RequestHeader.cluster_id)
}

inline const RequestHeader* RequestHeader::internal_default_instance() {
  return &RequestHeader_default_instance_.get();
}
// -------------------------------------------------------------------

// ResponseHeader

// optional bytes uuid = 1;
inline bool ResponseHeader::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponseHeader::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponseHeader::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponseHeader::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uuid();
}
inline const ::std::string& ResponseHeader::uuid() const {
  // @@protoc_insertion_point(field_get:pdpb.ResponseHeader.uuid)
  return uuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseHeader::set_uuid(const ::std::string& value) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pdpb.ResponseHeader.uuid)
}
inline void ResponseHeader::set_uuid(const char* value) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pdpb.ResponseHeader.uuid)
}
inline void ResponseHeader::set_uuid(const void* value, size_t size) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pdpb.ResponseHeader.uuid)
}
inline ::std::string* ResponseHeader::mutable_uuid() {
  set_has_uuid();
  // @@protoc_insertion_point(field_mutable:pdpb.ResponseHeader.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseHeader::release_uuid() {
  // @@protoc_insertion_point(field_release:pdpb.ResponseHeader.uuid)
  clear_has_uuid();
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseHeader::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    set_has_uuid();
  } else {
    clear_has_uuid();
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:pdpb.ResponseHeader.uuid)
}

// optional uint64 cluster_id = 2;
inline bool ResponseHeader::has_cluster_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResponseHeader::set_has_cluster_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResponseHeader::clear_has_cluster_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResponseHeader::clear_cluster_id() {
  cluster_id_ = GOOGLE_ULONGLONG(0);
  clear_has_cluster_id();
}
inline ::google::protobuf::uint64 ResponseHeader::cluster_id() const {
  // @@protoc_insertion_point(field_get:pdpb.ResponseHeader.cluster_id)
  return cluster_id_;
}
inline void ResponseHeader::set_cluster_id(::google::protobuf::uint64 value) {
  set_has_cluster_id();
  cluster_id_ = value;
  // @@protoc_insertion_point(field_set:pdpb.ResponseHeader.cluster_id)
}

// optional .pdpb.Error error = 3;
inline bool ResponseHeader::has_error() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResponseHeader::set_has_error() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResponseHeader::clear_has_error() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResponseHeader::clear_error() {
  if (error_ != NULL) error_->::pdpb::Error::Clear();
  clear_has_error();
}
inline const ::pdpb::Error& ResponseHeader::error() const {
  // @@protoc_insertion_point(field_get:pdpb.ResponseHeader.error)
  return error_ != NULL ? *error_
                         : *::pdpb::Error::internal_default_instance();
}
inline ::pdpb::Error* ResponseHeader::mutable_error() {
  set_has_error();
  if (error_ == NULL) {
    error_ = new ::pdpb::Error;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.ResponseHeader.error)
  return error_;
}
inline ::pdpb::Error* ResponseHeader::release_error() {
  // @@protoc_insertion_point(field_release:pdpb.ResponseHeader.error)
  clear_has_error();
  ::pdpb::Error* temp = error_;
  error_ = NULL;
  return temp;
}
inline void ResponseHeader::set_allocated_error(::pdpb::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    set_has_error();
  } else {
    clear_has_error();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.ResponseHeader.error)
}

inline const ResponseHeader* ResponseHeader::internal_default_instance() {
  return &ResponseHeader_default_instance_.get();
}
// -------------------------------------------------------------------

// Request

// optional .pdpb.RequestHeader header = 1;
inline bool Request::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_header() {
  if (header_ != NULL) header_->::pdpb::RequestHeader::Clear();
  clear_has_header();
}
inline const ::pdpb::RequestHeader& Request::header() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.header)
  return header_ != NULL ? *header_
                         : *::pdpb::RequestHeader::internal_default_instance();
}
inline ::pdpb::RequestHeader* Request::mutable_header() {
  set_has_header();
  if (header_ == NULL) {
    header_ = new ::pdpb::RequestHeader;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.header)
  return header_;
}
inline ::pdpb::RequestHeader* Request::release_header() {
  // @@protoc_insertion_point(field_release:pdpb.Request.header)
  clear_has_header();
  ::pdpb::RequestHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void Request::set_allocated_header(::pdpb::RequestHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.header)
}

// optional .pdpb.CommandType cmd_type = 2;
inline bool Request::has_cmd_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request::set_has_cmd_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request::clear_has_cmd_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request::clear_cmd_type() {
  cmd_type_ = 0;
  clear_has_cmd_type();
}
inline ::pdpb::CommandType Request::cmd_type() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.cmd_type)
  return static_cast< ::pdpb::CommandType >(cmd_type_);
}
inline void Request::set_cmd_type(::pdpb::CommandType value) {
  assert(::pdpb::CommandType_IsValid(value));
  set_has_cmd_type();
  cmd_type_ = value;
  // @@protoc_insertion_point(field_set:pdpb.Request.cmd_type)
}

// optional .pdpb.TsoRequest tso = 3;
inline bool Request::has_tso() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request::set_has_tso() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request::clear_has_tso() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request::clear_tso() {
  if (tso_ != NULL) tso_->::pdpb::TsoRequest::Clear();
  clear_has_tso();
}
inline const ::pdpb::TsoRequest& Request::tso() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.tso)
  return tso_ != NULL ? *tso_
                         : *::pdpb::TsoRequest::internal_default_instance();
}
inline ::pdpb::TsoRequest* Request::mutable_tso() {
  set_has_tso();
  if (tso_ == NULL) {
    tso_ = new ::pdpb::TsoRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.tso)
  return tso_;
}
inline ::pdpb::TsoRequest* Request::release_tso() {
  // @@protoc_insertion_point(field_release:pdpb.Request.tso)
  clear_has_tso();
  ::pdpb::TsoRequest* temp = tso_;
  tso_ = NULL;
  return temp;
}
inline void Request::set_allocated_tso(::pdpb::TsoRequest* tso) {
  delete tso_;
  tso_ = tso;
  if (tso) {
    set_has_tso();
  } else {
    clear_has_tso();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.tso)
}

// optional .pdpb.BootstrapRequest bootstrap = 4;
inline bool Request::has_bootstrap() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Request::set_has_bootstrap() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Request::clear_has_bootstrap() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Request::clear_bootstrap() {
  if (bootstrap_ != NULL) bootstrap_->::pdpb::BootstrapRequest::Clear();
  clear_has_bootstrap();
}
inline const ::pdpb::BootstrapRequest& Request::bootstrap() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.bootstrap)
  return bootstrap_ != NULL ? *bootstrap_
                         : *::pdpb::BootstrapRequest::internal_default_instance();
}
inline ::pdpb::BootstrapRequest* Request::mutable_bootstrap() {
  set_has_bootstrap();
  if (bootstrap_ == NULL) {
    bootstrap_ = new ::pdpb::BootstrapRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.bootstrap)
  return bootstrap_;
}
inline ::pdpb::BootstrapRequest* Request::release_bootstrap() {
  // @@protoc_insertion_point(field_release:pdpb.Request.bootstrap)
  clear_has_bootstrap();
  ::pdpb::BootstrapRequest* temp = bootstrap_;
  bootstrap_ = NULL;
  return temp;
}
inline void Request::set_allocated_bootstrap(::pdpb::BootstrapRequest* bootstrap) {
  delete bootstrap_;
  bootstrap_ = bootstrap;
  if (bootstrap) {
    set_has_bootstrap();
  } else {
    clear_has_bootstrap();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.bootstrap)
}

// optional .pdpb.IsBootstrappedRequest is_bootstrapped = 5;
inline bool Request::has_is_bootstrapped() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Request::set_has_is_bootstrapped() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Request::clear_has_is_bootstrapped() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Request::clear_is_bootstrapped() {
  if (is_bootstrapped_ != NULL) is_bootstrapped_->::pdpb::IsBootstrappedRequest::Clear();
  clear_has_is_bootstrapped();
}
inline const ::pdpb::IsBootstrappedRequest& Request::is_bootstrapped() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.is_bootstrapped)
  return is_bootstrapped_ != NULL ? *is_bootstrapped_
                         : *::pdpb::IsBootstrappedRequest::internal_default_instance();
}
inline ::pdpb::IsBootstrappedRequest* Request::mutable_is_bootstrapped() {
  set_has_is_bootstrapped();
  if (is_bootstrapped_ == NULL) {
    is_bootstrapped_ = new ::pdpb::IsBootstrappedRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.is_bootstrapped)
  return is_bootstrapped_;
}
inline ::pdpb::IsBootstrappedRequest* Request::release_is_bootstrapped() {
  // @@protoc_insertion_point(field_release:pdpb.Request.is_bootstrapped)
  clear_has_is_bootstrapped();
  ::pdpb::IsBootstrappedRequest* temp = is_bootstrapped_;
  is_bootstrapped_ = NULL;
  return temp;
}
inline void Request::set_allocated_is_bootstrapped(::pdpb::IsBootstrappedRequest* is_bootstrapped) {
  delete is_bootstrapped_;
  is_bootstrapped_ = is_bootstrapped;
  if (is_bootstrapped) {
    set_has_is_bootstrapped();
  } else {
    clear_has_is_bootstrapped();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.is_bootstrapped)
}

// optional .pdpb.AllocIdRequest alloc_id = 6;
inline bool Request::has_alloc_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Request::set_has_alloc_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Request::clear_has_alloc_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Request::clear_alloc_id() {
  if (alloc_id_ != NULL) alloc_id_->::pdpb::AllocIdRequest::Clear();
  clear_has_alloc_id();
}
inline const ::pdpb::AllocIdRequest& Request::alloc_id() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.alloc_id)
  return alloc_id_ != NULL ? *alloc_id_
                         : *::pdpb::AllocIdRequest::internal_default_instance();
}
inline ::pdpb::AllocIdRequest* Request::mutable_alloc_id() {
  set_has_alloc_id();
  if (alloc_id_ == NULL) {
    alloc_id_ = new ::pdpb::AllocIdRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.alloc_id)
  return alloc_id_;
}
inline ::pdpb::AllocIdRequest* Request::release_alloc_id() {
  // @@protoc_insertion_point(field_release:pdpb.Request.alloc_id)
  clear_has_alloc_id();
  ::pdpb::AllocIdRequest* temp = alloc_id_;
  alloc_id_ = NULL;
  return temp;
}
inline void Request::set_allocated_alloc_id(::pdpb::AllocIdRequest* alloc_id) {
  delete alloc_id_;
  alloc_id_ = alloc_id;
  if (alloc_id) {
    set_has_alloc_id();
  } else {
    clear_has_alloc_id();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.alloc_id)
}

// optional .pdpb.GetStoreRequest get_store = 7;
inline bool Request::has_get_store() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Request::set_has_get_store() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Request::clear_has_get_store() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Request::clear_get_store() {
  if (get_store_ != NULL) get_store_->::pdpb::GetStoreRequest::Clear();
  clear_has_get_store();
}
inline const ::pdpb::GetStoreRequest& Request::get_store() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.get_store)
  return get_store_ != NULL ? *get_store_
                         : *::pdpb::GetStoreRequest::internal_default_instance();
}
inline ::pdpb::GetStoreRequest* Request::mutable_get_store() {
  set_has_get_store();
  if (get_store_ == NULL) {
    get_store_ = new ::pdpb::GetStoreRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.get_store)
  return get_store_;
}
inline ::pdpb::GetStoreRequest* Request::release_get_store() {
  // @@protoc_insertion_point(field_release:pdpb.Request.get_store)
  clear_has_get_store();
  ::pdpb::GetStoreRequest* temp = get_store_;
  get_store_ = NULL;
  return temp;
}
inline void Request::set_allocated_get_store(::pdpb::GetStoreRequest* get_store) {
  delete get_store_;
  get_store_ = get_store;
  if (get_store) {
    set_has_get_store();
  } else {
    clear_has_get_store();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.get_store)
}

// optional .pdpb.PutStoreRequest put_store = 8;
inline bool Request::has_put_store() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Request::set_has_put_store() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Request::clear_has_put_store() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Request::clear_put_store() {
  if (put_store_ != NULL) put_store_->::pdpb::PutStoreRequest::Clear();
  clear_has_put_store();
}
inline const ::pdpb::PutStoreRequest& Request::put_store() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.put_store)
  return put_store_ != NULL ? *put_store_
                         : *::pdpb::PutStoreRequest::internal_default_instance();
}
inline ::pdpb::PutStoreRequest* Request::mutable_put_store() {
  set_has_put_store();
  if (put_store_ == NULL) {
    put_store_ = new ::pdpb::PutStoreRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.put_store)
  return put_store_;
}
inline ::pdpb::PutStoreRequest* Request::release_put_store() {
  // @@protoc_insertion_point(field_release:pdpb.Request.put_store)
  clear_has_put_store();
  ::pdpb::PutStoreRequest* temp = put_store_;
  put_store_ = NULL;
  return temp;
}
inline void Request::set_allocated_put_store(::pdpb::PutStoreRequest* put_store) {
  delete put_store_;
  put_store_ = put_store;
  if (put_store) {
    set_has_put_store();
  } else {
    clear_has_put_store();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.put_store)
}

// optional .pdpb.AskSplitRequest ask_split = 9;
inline bool Request::has_ask_split() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Request::set_has_ask_split() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Request::clear_has_ask_split() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Request::clear_ask_split() {
  if (ask_split_ != NULL) ask_split_->::pdpb::AskSplitRequest::Clear();
  clear_has_ask_split();
}
inline const ::pdpb::AskSplitRequest& Request::ask_split() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.ask_split)
  return ask_split_ != NULL ? *ask_split_
                         : *::pdpb::AskSplitRequest::internal_default_instance();
}
inline ::pdpb::AskSplitRequest* Request::mutable_ask_split() {
  set_has_ask_split();
  if (ask_split_ == NULL) {
    ask_split_ = new ::pdpb::AskSplitRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.ask_split)
  return ask_split_;
}
inline ::pdpb::AskSplitRequest* Request::release_ask_split() {
  // @@protoc_insertion_point(field_release:pdpb.Request.ask_split)
  clear_has_ask_split();
  ::pdpb::AskSplitRequest* temp = ask_split_;
  ask_split_ = NULL;
  return temp;
}
inline void Request::set_allocated_ask_split(::pdpb::AskSplitRequest* ask_split) {
  delete ask_split_;
  ask_split_ = ask_split;
  if (ask_split) {
    set_has_ask_split();
  } else {
    clear_has_ask_split();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.ask_split)
}

// optional .pdpb.GetRegionRequest get_region = 10;
inline bool Request::has_get_region() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Request::set_has_get_region() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Request::clear_has_get_region() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Request::clear_get_region() {
  if (get_region_ != NULL) get_region_->::pdpb::GetRegionRequest::Clear();
  clear_has_get_region();
}
inline const ::pdpb::GetRegionRequest& Request::get_region() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.get_region)
  return get_region_ != NULL ? *get_region_
                         : *::pdpb::GetRegionRequest::internal_default_instance();
}
inline ::pdpb::GetRegionRequest* Request::mutable_get_region() {
  set_has_get_region();
  if (get_region_ == NULL) {
    get_region_ = new ::pdpb::GetRegionRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.get_region)
  return get_region_;
}
inline ::pdpb::GetRegionRequest* Request::release_get_region() {
  // @@protoc_insertion_point(field_release:pdpb.Request.get_region)
  clear_has_get_region();
  ::pdpb::GetRegionRequest* temp = get_region_;
  get_region_ = NULL;
  return temp;
}
inline void Request::set_allocated_get_region(::pdpb::GetRegionRequest* get_region) {
  delete get_region_;
  get_region_ = get_region;
  if (get_region) {
    set_has_get_region();
  } else {
    clear_has_get_region();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.get_region)
}

// optional .pdpb.RegionHeartbeatRequest region_heartbeat = 11;
inline bool Request::has_region_heartbeat() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Request::set_has_region_heartbeat() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Request::clear_has_region_heartbeat() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Request::clear_region_heartbeat() {
  if (region_heartbeat_ != NULL) region_heartbeat_->::pdpb::RegionHeartbeatRequest::Clear();
  clear_has_region_heartbeat();
}
inline const ::pdpb::RegionHeartbeatRequest& Request::region_heartbeat() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.region_heartbeat)
  return region_heartbeat_ != NULL ? *region_heartbeat_
                         : *::pdpb::RegionHeartbeatRequest::internal_default_instance();
}
inline ::pdpb::RegionHeartbeatRequest* Request::mutable_region_heartbeat() {
  set_has_region_heartbeat();
  if (region_heartbeat_ == NULL) {
    region_heartbeat_ = new ::pdpb::RegionHeartbeatRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.region_heartbeat)
  return region_heartbeat_;
}
inline ::pdpb::RegionHeartbeatRequest* Request::release_region_heartbeat() {
  // @@protoc_insertion_point(field_release:pdpb.Request.region_heartbeat)
  clear_has_region_heartbeat();
  ::pdpb::RegionHeartbeatRequest* temp = region_heartbeat_;
  region_heartbeat_ = NULL;
  return temp;
}
inline void Request::set_allocated_region_heartbeat(::pdpb::RegionHeartbeatRequest* region_heartbeat) {
  delete region_heartbeat_;
  region_heartbeat_ = region_heartbeat;
  if (region_heartbeat) {
    set_has_region_heartbeat();
  } else {
    clear_has_region_heartbeat();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.region_heartbeat)
}

// optional .pdpb.GetClusterConfigRequest get_cluster_config = 12;
inline bool Request::has_get_cluster_config() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Request::set_has_get_cluster_config() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Request::clear_has_get_cluster_config() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Request::clear_get_cluster_config() {
  if (get_cluster_config_ != NULL) get_cluster_config_->::pdpb::GetClusterConfigRequest::Clear();
  clear_has_get_cluster_config();
}
inline const ::pdpb::GetClusterConfigRequest& Request::get_cluster_config() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.get_cluster_config)
  return get_cluster_config_ != NULL ? *get_cluster_config_
                         : *::pdpb::GetClusterConfigRequest::internal_default_instance();
}
inline ::pdpb::GetClusterConfigRequest* Request::mutable_get_cluster_config() {
  set_has_get_cluster_config();
  if (get_cluster_config_ == NULL) {
    get_cluster_config_ = new ::pdpb::GetClusterConfigRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.get_cluster_config)
  return get_cluster_config_;
}
inline ::pdpb::GetClusterConfigRequest* Request::release_get_cluster_config() {
  // @@protoc_insertion_point(field_release:pdpb.Request.get_cluster_config)
  clear_has_get_cluster_config();
  ::pdpb::GetClusterConfigRequest* temp = get_cluster_config_;
  get_cluster_config_ = NULL;
  return temp;
}
inline void Request::set_allocated_get_cluster_config(::pdpb::GetClusterConfigRequest* get_cluster_config) {
  delete get_cluster_config_;
  get_cluster_config_ = get_cluster_config;
  if (get_cluster_config) {
    set_has_get_cluster_config();
  } else {
    clear_has_get_cluster_config();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.get_cluster_config)
}

// optional .pdpb.PutClusterConfigRequest put_cluster_config = 13;
inline bool Request::has_put_cluster_config() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Request::set_has_put_cluster_config() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Request::clear_has_put_cluster_config() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Request::clear_put_cluster_config() {
  if (put_cluster_config_ != NULL) put_cluster_config_->::pdpb::PutClusterConfigRequest::Clear();
  clear_has_put_cluster_config();
}
inline const ::pdpb::PutClusterConfigRequest& Request::put_cluster_config() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.put_cluster_config)
  return put_cluster_config_ != NULL ? *put_cluster_config_
                         : *::pdpb::PutClusterConfigRequest::internal_default_instance();
}
inline ::pdpb::PutClusterConfigRequest* Request::mutable_put_cluster_config() {
  set_has_put_cluster_config();
  if (put_cluster_config_ == NULL) {
    put_cluster_config_ = new ::pdpb::PutClusterConfigRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.put_cluster_config)
  return put_cluster_config_;
}
inline ::pdpb::PutClusterConfigRequest* Request::release_put_cluster_config() {
  // @@protoc_insertion_point(field_release:pdpb.Request.put_cluster_config)
  clear_has_put_cluster_config();
  ::pdpb::PutClusterConfigRequest* temp = put_cluster_config_;
  put_cluster_config_ = NULL;
  return temp;
}
inline void Request::set_allocated_put_cluster_config(::pdpb::PutClusterConfigRequest* put_cluster_config) {
  delete put_cluster_config_;
  put_cluster_config_ = put_cluster_config;
  if (put_cluster_config) {
    set_has_put_cluster_config();
  } else {
    clear_has_put_cluster_config();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.put_cluster_config)
}

// optional .pdpb.StoreHeartbeatRequest store_heartbeat = 14;
inline bool Request::has_store_heartbeat() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Request::set_has_store_heartbeat() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Request::clear_has_store_heartbeat() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Request::clear_store_heartbeat() {
  if (store_heartbeat_ != NULL) store_heartbeat_->::pdpb::StoreHeartbeatRequest::Clear();
  clear_has_store_heartbeat();
}
inline const ::pdpb::StoreHeartbeatRequest& Request::store_heartbeat() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.store_heartbeat)
  return store_heartbeat_ != NULL ? *store_heartbeat_
                         : *::pdpb::StoreHeartbeatRequest::internal_default_instance();
}
inline ::pdpb::StoreHeartbeatRequest* Request::mutable_store_heartbeat() {
  set_has_store_heartbeat();
  if (store_heartbeat_ == NULL) {
    store_heartbeat_ = new ::pdpb::StoreHeartbeatRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.store_heartbeat)
  return store_heartbeat_;
}
inline ::pdpb::StoreHeartbeatRequest* Request::release_store_heartbeat() {
  // @@protoc_insertion_point(field_release:pdpb.Request.store_heartbeat)
  clear_has_store_heartbeat();
  ::pdpb::StoreHeartbeatRequest* temp = store_heartbeat_;
  store_heartbeat_ = NULL;
  return temp;
}
inline void Request::set_allocated_store_heartbeat(::pdpb::StoreHeartbeatRequest* store_heartbeat) {
  delete store_heartbeat_;
  store_heartbeat_ = store_heartbeat;
  if (store_heartbeat) {
    set_has_store_heartbeat();
  } else {
    clear_has_store_heartbeat();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.store_heartbeat)
}

// optional .pdpb.ReportSplitRequest report_split = 15;
inline bool Request::has_report_split() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Request::set_has_report_split() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Request::clear_has_report_split() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Request::clear_report_split() {
  if (report_split_ != NULL) report_split_->::pdpb::ReportSplitRequest::Clear();
  clear_has_report_split();
}
inline const ::pdpb::ReportSplitRequest& Request::report_split() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.report_split)
  return report_split_ != NULL ? *report_split_
                         : *::pdpb::ReportSplitRequest::internal_default_instance();
}
inline ::pdpb::ReportSplitRequest* Request::mutable_report_split() {
  set_has_report_split();
  if (report_split_ == NULL) {
    report_split_ = new ::pdpb::ReportSplitRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.report_split)
  return report_split_;
}
inline ::pdpb::ReportSplitRequest* Request::release_report_split() {
  // @@protoc_insertion_point(field_release:pdpb.Request.report_split)
  clear_has_report_split();
  ::pdpb::ReportSplitRequest* temp = report_split_;
  report_split_ = NULL;
  return temp;
}
inline void Request::set_allocated_report_split(::pdpb::ReportSplitRequest* report_split) {
  delete report_split_;
  report_split_ = report_split;
  if (report_split) {
    set_has_report_split();
  } else {
    clear_has_report_split();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.report_split)
}

// optional .pdpb.GetRegionByIDRequest get_region_by_id = 16;
inline bool Request::has_get_region_by_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Request::set_has_get_region_by_id() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Request::clear_has_get_region_by_id() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Request::clear_get_region_by_id() {
  if (get_region_by_id_ != NULL) get_region_by_id_->::pdpb::GetRegionByIDRequest::Clear();
  clear_has_get_region_by_id();
}
inline const ::pdpb::GetRegionByIDRequest& Request::get_region_by_id() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.get_region_by_id)
  return get_region_by_id_ != NULL ? *get_region_by_id_
                         : *::pdpb::GetRegionByIDRequest::internal_default_instance();
}
inline ::pdpb::GetRegionByIDRequest* Request::mutable_get_region_by_id() {
  set_has_get_region_by_id();
  if (get_region_by_id_ == NULL) {
    get_region_by_id_ = new ::pdpb::GetRegionByIDRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.get_region_by_id)
  return get_region_by_id_;
}
inline ::pdpb::GetRegionByIDRequest* Request::release_get_region_by_id() {
  // @@protoc_insertion_point(field_release:pdpb.Request.get_region_by_id)
  clear_has_get_region_by_id();
  ::pdpb::GetRegionByIDRequest* temp = get_region_by_id_;
  get_region_by_id_ = NULL;
  return temp;
}
inline void Request::set_allocated_get_region_by_id(::pdpb::GetRegionByIDRequest* get_region_by_id) {
  delete get_region_by_id_;
  get_region_by_id_ = get_region_by_id;
  if (get_region_by_id) {
    set_has_get_region_by_id();
  } else {
    clear_has_get_region_by_id();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.get_region_by_id)
}

// optional .pdpb.GetPDMembersRequest get_pd_members = 17;
inline bool Request::has_get_pd_members() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Request::set_has_get_pd_members() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Request::clear_has_get_pd_members() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Request::clear_get_pd_members() {
  if (get_pd_members_ != NULL) get_pd_members_->::pdpb::GetPDMembersRequest::Clear();
  clear_has_get_pd_members();
}
inline const ::pdpb::GetPDMembersRequest& Request::get_pd_members() const {
  // @@protoc_insertion_point(field_get:pdpb.Request.get_pd_members)
  return get_pd_members_ != NULL ? *get_pd_members_
                         : *::pdpb::GetPDMembersRequest::internal_default_instance();
}
inline ::pdpb::GetPDMembersRequest* Request::mutable_get_pd_members() {
  set_has_get_pd_members();
  if (get_pd_members_ == NULL) {
    get_pd_members_ = new ::pdpb::GetPDMembersRequest;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Request.get_pd_members)
  return get_pd_members_;
}
inline ::pdpb::GetPDMembersRequest* Request::release_get_pd_members() {
  // @@protoc_insertion_point(field_release:pdpb.Request.get_pd_members)
  clear_has_get_pd_members();
  ::pdpb::GetPDMembersRequest* temp = get_pd_members_;
  get_pd_members_ = NULL;
  return temp;
}
inline void Request::set_allocated_get_pd_members(::pdpb::GetPDMembersRequest* get_pd_members) {
  delete get_pd_members_;
  get_pd_members_ = get_pd_members;
  if (get_pd_members) {
    set_has_get_pd_members();
  } else {
    clear_has_get_pd_members();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Request.get_pd_members)
}

inline const Request* Request::internal_default_instance() {
  return &Request_default_instance_.get();
}
// -------------------------------------------------------------------

// Response

// optional .pdpb.ResponseHeader header = 1;
inline bool Response::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_header() {
  if (header_ != NULL) header_->::pdpb::ResponseHeader::Clear();
  clear_has_header();
}
inline const ::pdpb::ResponseHeader& Response::header() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.header)
  return header_ != NULL ? *header_
                         : *::pdpb::ResponseHeader::internal_default_instance();
}
inline ::pdpb::ResponseHeader* Response::mutable_header() {
  set_has_header();
  if (header_ == NULL) {
    header_ = new ::pdpb::ResponseHeader;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.header)
  return header_;
}
inline ::pdpb::ResponseHeader* Response::release_header() {
  // @@protoc_insertion_point(field_release:pdpb.Response.header)
  clear_has_header();
  ::pdpb::ResponseHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void Response::set_allocated_header(::pdpb::ResponseHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.header)
}

// optional .pdpb.CommandType cmd_type = 2;
inline bool Response::has_cmd_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_cmd_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_cmd_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_cmd_type() {
  cmd_type_ = 0;
  clear_has_cmd_type();
}
inline ::pdpb::CommandType Response::cmd_type() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.cmd_type)
  return static_cast< ::pdpb::CommandType >(cmd_type_);
}
inline void Response::set_cmd_type(::pdpb::CommandType value) {
  assert(::pdpb::CommandType_IsValid(value));
  set_has_cmd_type();
  cmd_type_ = value;
  // @@protoc_insertion_point(field_set:pdpb.Response.cmd_type)
}

// optional .pdpb.TsoResponse tso = 3;
inline bool Response::has_tso() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response::set_has_tso() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response::clear_has_tso() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response::clear_tso() {
  if (tso_ != NULL) tso_->::pdpb::TsoResponse::Clear();
  clear_has_tso();
}
inline const ::pdpb::TsoResponse& Response::tso() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.tso)
  return tso_ != NULL ? *tso_
                         : *::pdpb::TsoResponse::internal_default_instance();
}
inline ::pdpb::TsoResponse* Response::mutable_tso() {
  set_has_tso();
  if (tso_ == NULL) {
    tso_ = new ::pdpb::TsoResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.tso)
  return tso_;
}
inline ::pdpb::TsoResponse* Response::release_tso() {
  // @@protoc_insertion_point(field_release:pdpb.Response.tso)
  clear_has_tso();
  ::pdpb::TsoResponse* temp = tso_;
  tso_ = NULL;
  return temp;
}
inline void Response::set_allocated_tso(::pdpb::TsoResponse* tso) {
  delete tso_;
  tso_ = tso;
  if (tso) {
    set_has_tso();
  } else {
    clear_has_tso();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.tso)
}

// optional .pdpb.BootstrapResponse bootstrap = 4;
inline bool Response::has_bootstrap() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Response::set_has_bootstrap() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Response::clear_has_bootstrap() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Response::clear_bootstrap() {
  if (bootstrap_ != NULL) bootstrap_->::pdpb::BootstrapResponse::Clear();
  clear_has_bootstrap();
}
inline const ::pdpb::BootstrapResponse& Response::bootstrap() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.bootstrap)
  return bootstrap_ != NULL ? *bootstrap_
                         : *::pdpb::BootstrapResponse::internal_default_instance();
}
inline ::pdpb::BootstrapResponse* Response::mutable_bootstrap() {
  set_has_bootstrap();
  if (bootstrap_ == NULL) {
    bootstrap_ = new ::pdpb::BootstrapResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.bootstrap)
  return bootstrap_;
}
inline ::pdpb::BootstrapResponse* Response::release_bootstrap() {
  // @@protoc_insertion_point(field_release:pdpb.Response.bootstrap)
  clear_has_bootstrap();
  ::pdpb::BootstrapResponse* temp = bootstrap_;
  bootstrap_ = NULL;
  return temp;
}
inline void Response::set_allocated_bootstrap(::pdpb::BootstrapResponse* bootstrap) {
  delete bootstrap_;
  bootstrap_ = bootstrap;
  if (bootstrap) {
    set_has_bootstrap();
  } else {
    clear_has_bootstrap();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.bootstrap)
}

// optional .pdpb.IsBootstrappedResponse is_bootstrapped = 5;
inline bool Response::has_is_bootstrapped() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Response::set_has_is_bootstrapped() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Response::clear_has_is_bootstrapped() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Response::clear_is_bootstrapped() {
  if (is_bootstrapped_ != NULL) is_bootstrapped_->::pdpb::IsBootstrappedResponse::Clear();
  clear_has_is_bootstrapped();
}
inline const ::pdpb::IsBootstrappedResponse& Response::is_bootstrapped() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.is_bootstrapped)
  return is_bootstrapped_ != NULL ? *is_bootstrapped_
                         : *::pdpb::IsBootstrappedResponse::internal_default_instance();
}
inline ::pdpb::IsBootstrappedResponse* Response::mutable_is_bootstrapped() {
  set_has_is_bootstrapped();
  if (is_bootstrapped_ == NULL) {
    is_bootstrapped_ = new ::pdpb::IsBootstrappedResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.is_bootstrapped)
  return is_bootstrapped_;
}
inline ::pdpb::IsBootstrappedResponse* Response::release_is_bootstrapped() {
  // @@protoc_insertion_point(field_release:pdpb.Response.is_bootstrapped)
  clear_has_is_bootstrapped();
  ::pdpb::IsBootstrappedResponse* temp = is_bootstrapped_;
  is_bootstrapped_ = NULL;
  return temp;
}
inline void Response::set_allocated_is_bootstrapped(::pdpb::IsBootstrappedResponse* is_bootstrapped) {
  delete is_bootstrapped_;
  is_bootstrapped_ = is_bootstrapped;
  if (is_bootstrapped) {
    set_has_is_bootstrapped();
  } else {
    clear_has_is_bootstrapped();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.is_bootstrapped)
}

// optional .pdpb.AllocIdResponse alloc_id = 6;
inline bool Response::has_alloc_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Response::set_has_alloc_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Response::clear_has_alloc_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Response::clear_alloc_id() {
  if (alloc_id_ != NULL) alloc_id_->::pdpb::AllocIdResponse::Clear();
  clear_has_alloc_id();
}
inline const ::pdpb::AllocIdResponse& Response::alloc_id() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.alloc_id)
  return alloc_id_ != NULL ? *alloc_id_
                         : *::pdpb::AllocIdResponse::internal_default_instance();
}
inline ::pdpb::AllocIdResponse* Response::mutable_alloc_id() {
  set_has_alloc_id();
  if (alloc_id_ == NULL) {
    alloc_id_ = new ::pdpb::AllocIdResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.alloc_id)
  return alloc_id_;
}
inline ::pdpb::AllocIdResponse* Response::release_alloc_id() {
  // @@protoc_insertion_point(field_release:pdpb.Response.alloc_id)
  clear_has_alloc_id();
  ::pdpb::AllocIdResponse* temp = alloc_id_;
  alloc_id_ = NULL;
  return temp;
}
inline void Response::set_allocated_alloc_id(::pdpb::AllocIdResponse* alloc_id) {
  delete alloc_id_;
  alloc_id_ = alloc_id;
  if (alloc_id) {
    set_has_alloc_id();
  } else {
    clear_has_alloc_id();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.alloc_id)
}

// optional .pdpb.GetStoreResponse get_store = 7;
inline bool Response::has_get_store() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Response::set_has_get_store() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Response::clear_has_get_store() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Response::clear_get_store() {
  if (get_store_ != NULL) get_store_->::pdpb::GetStoreResponse::Clear();
  clear_has_get_store();
}
inline const ::pdpb::GetStoreResponse& Response::get_store() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.get_store)
  return get_store_ != NULL ? *get_store_
                         : *::pdpb::GetStoreResponse::internal_default_instance();
}
inline ::pdpb::GetStoreResponse* Response::mutable_get_store() {
  set_has_get_store();
  if (get_store_ == NULL) {
    get_store_ = new ::pdpb::GetStoreResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.get_store)
  return get_store_;
}
inline ::pdpb::GetStoreResponse* Response::release_get_store() {
  // @@protoc_insertion_point(field_release:pdpb.Response.get_store)
  clear_has_get_store();
  ::pdpb::GetStoreResponse* temp = get_store_;
  get_store_ = NULL;
  return temp;
}
inline void Response::set_allocated_get_store(::pdpb::GetStoreResponse* get_store) {
  delete get_store_;
  get_store_ = get_store;
  if (get_store) {
    set_has_get_store();
  } else {
    clear_has_get_store();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.get_store)
}

// optional .pdpb.PutStoreResponse put_store = 8;
inline bool Response::has_put_store() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Response::set_has_put_store() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Response::clear_has_put_store() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Response::clear_put_store() {
  if (put_store_ != NULL) put_store_->::pdpb::PutStoreResponse::Clear();
  clear_has_put_store();
}
inline const ::pdpb::PutStoreResponse& Response::put_store() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.put_store)
  return put_store_ != NULL ? *put_store_
                         : *::pdpb::PutStoreResponse::internal_default_instance();
}
inline ::pdpb::PutStoreResponse* Response::mutable_put_store() {
  set_has_put_store();
  if (put_store_ == NULL) {
    put_store_ = new ::pdpb::PutStoreResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.put_store)
  return put_store_;
}
inline ::pdpb::PutStoreResponse* Response::release_put_store() {
  // @@protoc_insertion_point(field_release:pdpb.Response.put_store)
  clear_has_put_store();
  ::pdpb::PutStoreResponse* temp = put_store_;
  put_store_ = NULL;
  return temp;
}
inline void Response::set_allocated_put_store(::pdpb::PutStoreResponse* put_store) {
  delete put_store_;
  put_store_ = put_store;
  if (put_store) {
    set_has_put_store();
  } else {
    clear_has_put_store();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.put_store)
}

// optional .pdpb.AskSplitResponse ask_split = 9;
inline bool Response::has_ask_split() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Response::set_has_ask_split() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Response::clear_has_ask_split() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Response::clear_ask_split() {
  if (ask_split_ != NULL) ask_split_->::pdpb::AskSplitResponse::Clear();
  clear_has_ask_split();
}
inline const ::pdpb::AskSplitResponse& Response::ask_split() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.ask_split)
  return ask_split_ != NULL ? *ask_split_
                         : *::pdpb::AskSplitResponse::internal_default_instance();
}
inline ::pdpb::AskSplitResponse* Response::mutable_ask_split() {
  set_has_ask_split();
  if (ask_split_ == NULL) {
    ask_split_ = new ::pdpb::AskSplitResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.ask_split)
  return ask_split_;
}
inline ::pdpb::AskSplitResponse* Response::release_ask_split() {
  // @@protoc_insertion_point(field_release:pdpb.Response.ask_split)
  clear_has_ask_split();
  ::pdpb::AskSplitResponse* temp = ask_split_;
  ask_split_ = NULL;
  return temp;
}
inline void Response::set_allocated_ask_split(::pdpb::AskSplitResponse* ask_split) {
  delete ask_split_;
  ask_split_ = ask_split;
  if (ask_split) {
    set_has_ask_split();
  } else {
    clear_has_ask_split();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.ask_split)
}

// optional .pdpb.GetRegionResponse get_region = 10;
inline bool Response::has_get_region() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Response::set_has_get_region() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Response::clear_has_get_region() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Response::clear_get_region() {
  if (get_region_ != NULL) get_region_->::pdpb::GetRegionResponse::Clear();
  clear_has_get_region();
}
inline const ::pdpb::GetRegionResponse& Response::get_region() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.get_region)
  return get_region_ != NULL ? *get_region_
                         : *::pdpb::GetRegionResponse::internal_default_instance();
}
inline ::pdpb::GetRegionResponse* Response::mutable_get_region() {
  set_has_get_region();
  if (get_region_ == NULL) {
    get_region_ = new ::pdpb::GetRegionResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.get_region)
  return get_region_;
}
inline ::pdpb::GetRegionResponse* Response::release_get_region() {
  // @@protoc_insertion_point(field_release:pdpb.Response.get_region)
  clear_has_get_region();
  ::pdpb::GetRegionResponse* temp = get_region_;
  get_region_ = NULL;
  return temp;
}
inline void Response::set_allocated_get_region(::pdpb::GetRegionResponse* get_region) {
  delete get_region_;
  get_region_ = get_region;
  if (get_region) {
    set_has_get_region();
  } else {
    clear_has_get_region();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.get_region)
}

// optional .pdpb.RegionHeartbeatResponse region_heartbeat = 11;
inline bool Response::has_region_heartbeat() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Response::set_has_region_heartbeat() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Response::clear_has_region_heartbeat() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Response::clear_region_heartbeat() {
  if (region_heartbeat_ != NULL) region_heartbeat_->::pdpb::RegionHeartbeatResponse::Clear();
  clear_has_region_heartbeat();
}
inline const ::pdpb::RegionHeartbeatResponse& Response::region_heartbeat() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.region_heartbeat)
  return region_heartbeat_ != NULL ? *region_heartbeat_
                         : *::pdpb::RegionHeartbeatResponse::internal_default_instance();
}
inline ::pdpb::RegionHeartbeatResponse* Response::mutable_region_heartbeat() {
  set_has_region_heartbeat();
  if (region_heartbeat_ == NULL) {
    region_heartbeat_ = new ::pdpb::RegionHeartbeatResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.region_heartbeat)
  return region_heartbeat_;
}
inline ::pdpb::RegionHeartbeatResponse* Response::release_region_heartbeat() {
  // @@protoc_insertion_point(field_release:pdpb.Response.region_heartbeat)
  clear_has_region_heartbeat();
  ::pdpb::RegionHeartbeatResponse* temp = region_heartbeat_;
  region_heartbeat_ = NULL;
  return temp;
}
inline void Response::set_allocated_region_heartbeat(::pdpb::RegionHeartbeatResponse* region_heartbeat) {
  delete region_heartbeat_;
  region_heartbeat_ = region_heartbeat;
  if (region_heartbeat) {
    set_has_region_heartbeat();
  } else {
    clear_has_region_heartbeat();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.region_heartbeat)
}

// optional .pdpb.GetClusterConfigResponse get_cluster_config = 12;
inline bool Response::has_get_cluster_config() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Response::set_has_get_cluster_config() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Response::clear_has_get_cluster_config() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Response::clear_get_cluster_config() {
  if (get_cluster_config_ != NULL) get_cluster_config_->::pdpb::GetClusterConfigResponse::Clear();
  clear_has_get_cluster_config();
}
inline const ::pdpb::GetClusterConfigResponse& Response::get_cluster_config() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.get_cluster_config)
  return get_cluster_config_ != NULL ? *get_cluster_config_
                         : *::pdpb::GetClusterConfigResponse::internal_default_instance();
}
inline ::pdpb::GetClusterConfigResponse* Response::mutable_get_cluster_config() {
  set_has_get_cluster_config();
  if (get_cluster_config_ == NULL) {
    get_cluster_config_ = new ::pdpb::GetClusterConfigResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.get_cluster_config)
  return get_cluster_config_;
}
inline ::pdpb::GetClusterConfigResponse* Response::release_get_cluster_config() {
  // @@protoc_insertion_point(field_release:pdpb.Response.get_cluster_config)
  clear_has_get_cluster_config();
  ::pdpb::GetClusterConfigResponse* temp = get_cluster_config_;
  get_cluster_config_ = NULL;
  return temp;
}
inline void Response::set_allocated_get_cluster_config(::pdpb::GetClusterConfigResponse* get_cluster_config) {
  delete get_cluster_config_;
  get_cluster_config_ = get_cluster_config;
  if (get_cluster_config) {
    set_has_get_cluster_config();
  } else {
    clear_has_get_cluster_config();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.get_cluster_config)
}

// optional .pdpb.PutClusterConfigResponse put_cluster_config = 13;
inline bool Response::has_put_cluster_config() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Response::set_has_put_cluster_config() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Response::clear_has_put_cluster_config() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Response::clear_put_cluster_config() {
  if (put_cluster_config_ != NULL) put_cluster_config_->::pdpb::PutClusterConfigResponse::Clear();
  clear_has_put_cluster_config();
}
inline const ::pdpb::PutClusterConfigResponse& Response::put_cluster_config() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.put_cluster_config)
  return put_cluster_config_ != NULL ? *put_cluster_config_
                         : *::pdpb::PutClusterConfigResponse::internal_default_instance();
}
inline ::pdpb::PutClusterConfigResponse* Response::mutable_put_cluster_config() {
  set_has_put_cluster_config();
  if (put_cluster_config_ == NULL) {
    put_cluster_config_ = new ::pdpb::PutClusterConfigResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.put_cluster_config)
  return put_cluster_config_;
}
inline ::pdpb::PutClusterConfigResponse* Response::release_put_cluster_config() {
  // @@protoc_insertion_point(field_release:pdpb.Response.put_cluster_config)
  clear_has_put_cluster_config();
  ::pdpb::PutClusterConfigResponse* temp = put_cluster_config_;
  put_cluster_config_ = NULL;
  return temp;
}
inline void Response::set_allocated_put_cluster_config(::pdpb::PutClusterConfigResponse* put_cluster_config) {
  delete put_cluster_config_;
  put_cluster_config_ = put_cluster_config;
  if (put_cluster_config) {
    set_has_put_cluster_config();
  } else {
    clear_has_put_cluster_config();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.put_cluster_config)
}

// optional .pdpb.StoreHeartbeatResponse store_heartbeat = 14;
inline bool Response::has_store_heartbeat() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Response::set_has_store_heartbeat() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Response::clear_has_store_heartbeat() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Response::clear_store_heartbeat() {
  if (store_heartbeat_ != NULL) store_heartbeat_->::pdpb::StoreHeartbeatResponse::Clear();
  clear_has_store_heartbeat();
}
inline const ::pdpb::StoreHeartbeatResponse& Response::store_heartbeat() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.store_heartbeat)
  return store_heartbeat_ != NULL ? *store_heartbeat_
                         : *::pdpb::StoreHeartbeatResponse::internal_default_instance();
}
inline ::pdpb::StoreHeartbeatResponse* Response::mutable_store_heartbeat() {
  set_has_store_heartbeat();
  if (store_heartbeat_ == NULL) {
    store_heartbeat_ = new ::pdpb::StoreHeartbeatResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.store_heartbeat)
  return store_heartbeat_;
}
inline ::pdpb::StoreHeartbeatResponse* Response::release_store_heartbeat() {
  // @@protoc_insertion_point(field_release:pdpb.Response.store_heartbeat)
  clear_has_store_heartbeat();
  ::pdpb::StoreHeartbeatResponse* temp = store_heartbeat_;
  store_heartbeat_ = NULL;
  return temp;
}
inline void Response::set_allocated_store_heartbeat(::pdpb::StoreHeartbeatResponse* store_heartbeat) {
  delete store_heartbeat_;
  store_heartbeat_ = store_heartbeat;
  if (store_heartbeat) {
    set_has_store_heartbeat();
  } else {
    clear_has_store_heartbeat();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.store_heartbeat)
}

// optional .pdpb.ReportSplitResponse report_split = 15;
inline bool Response::has_report_split() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Response::set_has_report_split() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Response::clear_has_report_split() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Response::clear_report_split() {
  if (report_split_ != NULL) report_split_->::pdpb::ReportSplitResponse::Clear();
  clear_has_report_split();
}
inline const ::pdpb::ReportSplitResponse& Response::report_split() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.report_split)
  return report_split_ != NULL ? *report_split_
                         : *::pdpb::ReportSplitResponse::internal_default_instance();
}
inline ::pdpb::ReportSplitResponse* Response::mutable_report_split() {
  set_has_report_split();
  if (report_split_ == NULL) {
    report_split_ = new ::pdpb::ReportSplitResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.report_split)
  return report_split_;
}
inline ::pdpb::ReportSplitResponse* Response::release_report_split() {
  // @@protoc_insertion_point(field_release:pdpb.Response.report_split)
  clear_has_report_split();
  ::pdpb::ReportSplitResponse* temp = report_split_;
  report_split_ = NULL;
  return temp;
}
inline void Response::set_allocated_report_split(::pdpb::ReportSplitResponse* report_split) {
  delete report_split_;
  report_split_ = report_split;
  if (report_split) {
    set_has_report_split();
  } else {
    clear_has_report_split();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.report_split)
}

// optional .pdpb.GetRegionResponse get_region_by_id = 16;
inline bool Response::has_get_region_by_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Response::set_has_get_region_by_id() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Response::clear_has_get_region_by_id() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Response::clear_get_region_by_id() {
  if (get_region_by_id_ != NULL) get_region_by_id_->::pdpb::GetRegionResponse::Clear();
  clear_has_get_region_by_id();
}
inline const ::pdpb::GetRegionResponse& Response::get_region_by_id() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.get_region_by_id)
  return get_region_by_id_ != NULL ? *get_region_by_id_
                         : *::pdpb::GetRegionResponse::internal_default_instance();
}
inline ::pdpb::GetRegionResponse* Response::mutable_get_region_by_id() {
  set_has_get_region_by_id();
  if (get_region_by_id_ == NULL) {
    get_region_by_id_ = new ::pdpb::GetRegionResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.get_region_by_id)
  return get_region_by_id_;
}
inline ::pdpb::GetRegionResponse* Response::release_get_region_by_id() {
  // @@protoc_insertion_point(field_release:pdpb.Response.get_region_by_id)
  clear_has_get_region_by_id();
  ::pdpb::GetRegionResponse* temp = get_region_by_id_;
  get_region_by_id_ = NULL;
  return temp;
}
inline void Response::set_allocated_get_region_by_id(::pdpb::GetRegionResponse* get_region_by_id) {
  delete get_region_by_id_;
  get_region_by_id_ = get_region_by_id;
  if (get_region_by_id) {
    set_has_get_region_by_id();
  } else {
    clear_has_get_region_by_id();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.get_region_by_id)
}

// optional .pdpb.GetPDMembersResponse get_pd_members = 17;
inline bool Response::has_get_pd_members() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Response::set_has_get_pd_members() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Response::clear_has_get_pd_members() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Response::clear_get_pd_members() {
  if (get_pd_members_ != NULL) get_pd_members_->::pdpb::GetPDMembersResponse::Clear();
  clear_has_get_pd_members();
}
inline const ::pdpb::GetPDMembersResponse& Response::get_pd_members() const {
  // @@protoc_insertion_point(field_get:pdpb.Response.get_pd_members)
  return get_pd_members_ != NULL ? *get_pd_members_
                         : *::pdpb::GetPDMembersResponse::internal_default_instance();
}
inline ::pdpb::GetPDMembersResponse* Response::mutable_get_pd_members() {
  set_has_get_pd_members();
  if (get_pd_members_ == NULL) {
    get_pd_members_ = new ::pdpb::GetPDMembersResponse;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Response.get_pd_members)
  return get_pd_members_;
}
inline ::pdpb::GetPDMembersResponse* Response::release_get_pd_members() {
  // @@protoc_insertion_point(field_release:pdpb.Response.get_pd_members)
  clear_has_get_pd_members();
  ::pdpb::GetPDMembersResponse* temp = get_pd_members_;
  get_pd_members_ = NULL;
  return temp;
}
inline void Response::set_allocated_get_pd_members(::pdpb::GetPDMembersResponse* get_pd_members) {
  delete get_pd_members_;
  get_pd_members_ = get_pd_members;
  if (get_pd_members) {
    set_has_get_pd_members();
  } else {
    clear_has_get_pd_members();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Response.get_pd_members)
}

inline const Response* Response::internal_default_instance() {
  return &Response_default_instance_.get();
}
// -------------------------------------------------------------------

// BootstrappedError

inline const BootstrappedError* BootstrappedError::internal_default_instance() {
  return &BootstrappedError_default_instance_.get();
}
// -------------------------------------------------------------------

// StoreIsTombstoneError

inline const StoreIsTombstoneError* StoreIsTombstoneError::internal_default_instance() {
  return &StoreIsTombstoneError_default_instance_.get();
}
// -------------------------------------------------------------------

// Error

// optional string message = 1;
inline bool Error::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Error::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Error::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Error::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& Error::message() const {
  // @@protoc_insertion_point(field_get:pdpb.Error.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Error::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pdpb.Error.message)
}
inline void Error::set_message(const char* value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pdpb.Error.message)
}
inline void Error::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pdpb.Error.message)
}
inline ::std::string* Error::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:pdpb.Error.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Error::release_message() {
  // @@protoc_insertion_point(field_release:pdpb.Error.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Error::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:pdpb.Error.message)
}

// optional .pdpb.BootstrappedError bootstrapped = 2;
inline bool Error::has_bootstrapped() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Error::set_has_bootstrapped() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Error::clear_has_bootstrapped() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Error::clear_bootstrapped() {
  if (bootstrapped_ != NULL) bootstrapped_->::pdpb::BootstrappedError::Clear();
  clear_has_bootstrapped();
}
inline const ::pdpb::BootstrappedError& Error::bootstrapped() const {
  // @@protoc_insertion_point(field_get:pdpb.Error.bootstrapped)
  return bootstrapped_ != NULL ? *bootstrapped_
                         : *::pdpb::BootstrappedError::internal_default_instance();
}
inline ::pdpb::BootstrappedError* Error::mutable_bootstrapped() {
  set_has_bootstrapped();
  if (bootstrapped_ == NULL) {
    bootstrapped_ = new ::pdpb::BootstrappedError;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Error.bootstrapped)
  return bootstrapped_;
}
inline ::pdpb::BootstrappedError* Error::release_bootstrapped() {
  // @@protoc_insertion_point(field_release:pdpb.Error.bootstrapped)
  clear_has_bootstrapped();
  ::pdpb::BootstrappedError* temp = bootstrapped_;
  bootstrapped_ = NULL;
  return temp;
}
inline void Error::set_allocated_bootstrapped(::pdpb::BootstrappedError* bootstrapped) {
  delete bootstrapped_;
  bootstrapped_ = bootstrapped;
  if (bootstrapped) {
    set_has_bootstrapped();
  } else {
    clear_has_bootstrapped();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Error.bootstrapped)
}

// optional .pdpb.StoreIsTombstoneError is_tombstone = 3;
inline bool Error::has_is_tombstone() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Error::set_has_is_tombstone() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Error::clear_has_is_tombstone() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Error::clear_is_tombstone() {
  if (is_tombstone_ != NULL) is_tombstone_->::pdpb::StoreIsTombstoneError::Clear();
  clear_has_is_tombstone();
}
inline const ::pdpb::StoreIsTombstoneError& Error::is_tombstone() const {
  // @@protoc_insertion_point(field_get:pdpb.Error.is_tombstone)
  return is_tombstone_ != NULL ? *is_tombstone_
                         : *::pdpb::StoreIsTombstoneError::internal_default_instance();
}
inline ::pdpb::StoreIsTombstoneError* Error::mutable_is_tombstone() {
  set_has_is_tombstone();
  if (is_tombstone_ == NULL) {
    is_tombstone_ = new ::pdpb::StoreIsTombstoneError;
  }
  // @@protoc_insertion_point(field_mutable:pdpb.Error.is_tombstone)
  return is_tombstone_;
}
inline ::pdpb::StoreIsTombstoneError* Error::release_is_tombstone() {
  // @@protoc_insertion_point(field_release:pdpb.Error.is_tombstone)
  clear_has_is_tombstone();
  ::pdpb::StoreIsTombstoneError* temp = is_tombstone_;
  is_tombstone_ = NULL;
  return temp;
}
inline void Error::set_allocated_is_tombstone(::pdpb::StoreIsTombstoneError* is_tombstone) {
  delete is_tombstone_;
  is_tombstone_ = is_tombstone;
  if (is_tombstone) {
    set_has_is_tombstone();
  } else {
    clear_has_is_tombstone();
  }
  // @@protoc_insertion_point(field_set_allocated:pdpb.Error.is_tombstone)
}

inline const Error* Error::internal_default_instance() {
  return &Error_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace pdpb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pdpb::CommandType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pdpb::CommandType>() {
  return ::pdpb::CommandType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pdpb_2eproto__INCLUDED
