syntax = "proto2";
package raft_serverpb;

import "eraftpb.proto";
import "metapb.proto";

message RaftMessage {
    optional uint64 region_id                   = 1;
    optional metapb.Peer from_peer              = 2;
    optional metapb.Peer to_peer                = 3;
    optional eraftpb.Message message            = 4;
    optional metapb.RegionEpoch region_epoch    = 5;
    // true means to_peer is a tombstone peer and it should remove itself.
    optional bool is_tombstone                  = 6;
    // Region key range [start_key, end_key).
    optional bytes start_key                    = 7;
    optional bytes end_key                      = 8;
}

message RaftTruncatedState {
    optional uint64 index    = 1;
    optional uint64 term     = 2;
}

message KeyValue {
    optional bytes key      = 1;
    optional bytes value    = 2;
}

message RaftSnapshotData {
    optional metapb.Region region   = 1;
    optional uint64 file_size       = 2;
    repeated KeyValue data          = 3;
}

message StoreIdent {
    optional uint64 cluster_id   = 1;
    optional uint64 store_id     = 2;
}

message RaftLocalState {
    optional eraftpb.HardState hard_state        = 1;
    optional uint64 last_index                  = 2;
}

message RaftApplyState {
    optional uint64 applied_index               = 1;
    optional RaftTruncatedState truncated_state = 2;
}

enum PeerState {
    Normal       = 0;
    Applying     = 1;
    Tombstone    = 2;
}

message RegionLocalState {
    optional PeerState state        = 1;
    optional metapb.Region region   = 2;
}
